[08:56:56] *** Server sets mode: +CLcnrtf #python-unregistered
[08:57:11] *** Joins: jjulian (~jjulian@i5DB50875.pool.tripleplugandplay.com)
[08:57:47] <fpghost84> Does anyone know how to properly clear the celery queue on heroku? (I tried stopping the worker dyno, but I still see messages about unregistered task, even though this is an old task, with no trace in my codebase anymore)
[08:58:11] *** Quits: tty (~none@unaffiliated/minimalism) (Read error: Connection reset by peer)
[08:58:28] *** Joins: tty (~none@unaffiliated/minimalism)
[08:58:41] *** Joins: hetii (~hetii@89-74-255-90.dynamic.chello.pl)
[08:59:01] <hetii> Hello :)
[08:59:46] *** Quits: antgel (~topdog@213.57.83.154) (Ping timeout: 264 seconds)
[08:59:46] *** Quits: jamesaxl (~James_Axl@41.249.135.168) (Ping timeout: 264 seconds)
[09:00:12] *** Quits: anqxyr (~anqxyr@nat4-minsk-pool-46-53-177-92.telecom.by) (Remote host closed the connection)
[09:00:48] *** Joins: greg_f (~greg@altlinux/developer/greg)
[09:01:03] *** Joins: antgel (~topdog@213.57.83.154)
[09:01:04] <bjs> Kiril: gr?
[09:01:18] *** Joins: anqxyr (~anqxyr@nat4-minsk-pool-46-53-177-92.telecom.by)
[09:01:32] *** Joins: KOLANICH (~KOLANICH@unaffiliated/kolanich)
[09:01:34] *** Quits: tty (~none@unaffiliated/minimalism) (Read error: Connection reset by peer)
[09:01:52] *** Joins: tty (~none@unaffiliated/minimalism)
[09:02:50] *** Quits: devish (345f4b02@gateway/web/freenode/ip.52.95.75.2) (Ping timeout: 260 seconds)
[09:03:43] *** Quits: tty (~none@unaffiliated/minimalism) (Read error: Connection reset by peer)
[09:04:00] *** Joins: cdown (~cdown@199.201.66.5)
[09:04:03] <KOLANICH> hi everyone. Can anyone explain why dependency_links ( https://gitlab.com/KOLANICH1/mol2scad.py/blob/master/setup.cfg ) don't work ( https://gitlab.com/KOLANICH1/mol2scad.py/-/jobs/77737998 ) ?
[09:04:05] <Kiril> bjs: ?
[09:04:10] *** Joins: tty (~none@unaffiliated/minimalism)
[09:04:13] *** Joins: yakiza (~yakiza@dm-cis-060.dur.ac.uk)
[09:04:27] <Kiril> Yeah gr because of angry why is not working
[09:04:51] <bjs> Kiril: can you pastebin the full error + code?
[09:04:58] <bjs> Presumably it's a SyntaxError of sorts
[09:05:05] *** Joins: nigthw0lf (~nightw0lf@toroon6128w-lp130-04-69-158-180-35.dsl.bell.ca)
[09:05:13] <Kiril> yep
[09:05:26] *** Quits: lainon (~lainon@24-159-4-77.dhcp.smrt.tn.charter.com) (Remote host closed the connection)
[09:05:42] *** Quits: OS-35301 (~textual@45.56.148.172) (Quit: My iMac has gone to sleep. ZZZzzz…)
[09:06:02] *** Joins: ghormoon (~ghormoon@ghorland.net)
[09:06:07] <hetii> I have such sample code: https://pastebin.com/1h8qNYGt What I try is to have an object with a properties that when I set them they be validated, and when some of the attributes are wrong then entire instance is mark as invalid. To catch generic error I planed to use  __setattr__(..) but then how I can call setters of my properties?
[09:06:08] <infobob> https://paste.pound-python.org/show/cxwEkSWTgbnbroZ6KSu3/ (repasted for hetii)
[09:06:09] *** Quits: dre_ (~dre_@121-74-95-135.telstraclear.net) (Remote host closed the connection)
[09:07:16] <bjs> hetii: what are you trying to do, an `id` property returning __dict__['id'] sounds weird
[09:07:48] *** Joins: Rollabunna (~Rollabunn@2400:2410:2841:f000:fde3:ee90:d953:63a6)
[09:07:48] <Kiril> bjs: https://pastebin.com/SzhEXyCP
[09:07:48] <infobob> https://paste.pound-python.org/show/oTh288Xxl9TPoubFxRqh/ (repasted for Kiril)
[09:07:51] *** Joins: AnySomebody (~AnySomebo@192.129.2.104)
[09:08:07] <bjs> Kiril: line30 doesn't look indented enough
[09:08:35] <hetii> bjs, as I wrote I want to have a class that will have different fields that need to be validated when set.
[09:08:49] *** Joins: OS-35301 (~textual@45.56.148.172)
[09:08:51] <Kiril> indeed I am following the example and something is missing there
[09:08:56] *** Quits: tty (~none@unaffiliated/minimalism) (Ping timeout: 256 seconds)
[09:09:08] <Kiril> or it's not right at all
[09:09:37] <bjs> hetii: you mean you want to valid the "id" attribute?
[09:09:43] *** Joins: manuelschneid3r (~manuelsch@p57A39159.dip0.t-ipconnect.de)
[09:09:44] <bjs> hetii: there's nothing here that validates other attributes
[09:09:53] <odinsbane> Kiril: line 30 is not indented enough and line 31 is too indented. Are you mixing tabs and spaces?
[09:09:56] *** Joins: aleksanderffs (goodtimes@aakvik.net)
[09:10:00] *** Quits: Asandari (~Asandari@198-48-236-23.cpe.pppoe.ca) (Ping timeout: 260 seconds)
[09:10:12] *** Quits: aakvik (goodtimes@aakvik.net) (Read error: Connection reset by peer)
[09:10:23] *** Quits: aleksanderffs (goodtimes@aakvik.net) (Client Quit)
[09:10:23] <hetii> bjs  I know that "id" is reserved word so lets say it called "email"
[09:10:31] <cdunklau> hetii: it's not
[09:10:35] <bjs> hetii: well it's not reserved, but the same applies
[09:10:42] <bjs> hetii: surely you're still only validating "email" in that case
[09:10:47] <vancha> thanks Falc, I'll keep it in mind! The thing is probably that i don't know how to start. The goal is to create a simple gtk program in python, which lists some foods in a listview, with nutritional values :o
[09:11:08] <xqb> vancha: GTK tutorial is pretty good
[09:11:23] <xqb> vancha: https://python-gtk-3-tutorial.readthedocs.io
[09:11:24] <vancha> but everything i have learned about oop, suddenly makes less sense when gtk already expects some kind of program structure.
[09:11:35] <vancha> thanks xqb
[09:11:44] *** Quits: snatcher (~user@gateway/tor-sasl/snatcher) (Remote host closed the connection)
[09:11:50] <hetii> ok but as I say at the beginning I don`t whant for each of my properties define "try/expect:" block
[09:11:52] <Falc> vancha: forget the gtk for now, if you don't feel comfortable enough with OOP
[09:12:02] *** Joins: dxiri (~dxiri@186.32.223.195)
[09:12:15] <Kiril> odinsbane: i fixed the else on row 31 but still 30 row.. it's not right
[09:12:24] <hetii> so for general issues I plan to cath them in upper stage and in setters have just logic that I plan to use for validation
[09:12:36] *** Quits: Rollabunna (~Rollabunn@2400:2410:2841:f000:fde3:ee90:d953:63a6) (Ping timeout: 265 seconds)
[09:12:37] <Falc> vancha: you can always build a graphical UI *afterwards*, try to get your program and the objects in it working
[09:12:44] <bjs> hetii: I don't understand, with what you're doing here you'll still need a @property and a setter for each field right
[09:12:48] <filiperibeiro> Hi. I'm using robodk API for python and I'm receiving this message: <bound method Item.Update of RoboDK item (2677928559040) of type 8>, however the API says that the method I'm using returns this [valid_instructions, program_time, program_distance, valid_ratio, readable_msg], what is the problem? *new in python*
[09:13:05] <hetii> bjs, yes thats fine
[09:13:34] <hetii> I just don`t know how I can invoke this setters when have __setattr__ in my class\
[09:13:36] <cdunklau> filiperibeiro: sounds like you printed the method, not the result of a *call* to that method
[09:13:43] *** Quits: cwrbs (~jy@185.9.19.107) (Ping timeout: 256 seconds)
[09:13:43] <vancha> Falc: maybe i should, but i felt like i understood oop. seems like i have to do a step back.
[09:13:50] <Kiril> I will happy if you show me the right syntax
[09:13:57] <bjs> Kiril: indent line 30
[09:13:58] <cdunklau> filiperibeiro: like, you printed obj.method  instead of obj.method()
[09:14:12] *** Joins: chamgry (~root@unaffiliated/chamgry)
[09:14:15] *** Joins: aakvik (goodtimes@aakvik.net)
[09:14:24] *** Joins: lucad111 (~lucad111@linaro/lucad111)
[09:14:28] *** Quits: internalsplit (~internals@c-24-16-133-129.hsd1.wa.comcast.net) (Ping timeout: 240 seconds)
[09:14:39] <cdunklau> filiperibeiro: are you coming from ruby?
[09:14:39] <filiperibeiro> cdunklau, i did this test = self.program.Update() and then i did print(teste)
[09:14:40] <Falc> vancha: okay, your questions seemed to indicate to me that you maybe weren't all that comfortable with it. Or at least, you seem to have read about it but not really practced it?
[09:14:42] <bjs> hetii: but my point is: if you know all the fields in advance and are writing setters for them anyway, what's the point of messing with __dict__ and __setattr__ ?
[09:14:44] <vancha> is there a resource maybe for good object oriented design? something that goes a bit further than the typical "a bike has tires" examples? :P
[09:14:50] *** Quits: yuppie (43b4d87b@gateway/web/freenode/ip.67.180.216.123) (Quit: Page closed)
[09:14:51] <bjs> that just seems to be overcomplicating things
[09:15:14] <vancha> Falc: i've practiced it. but run into problems later on with structuring the files and classes.
[09:15:22] <hetii> bjs, because to reduce amount of the code that will cath all generic errors
[09:15:24] <vancha> i can write simple object oriented programs
[09:15:26] <xqb> vancha: there's plenty of books on OOP
[09:15:31] <vancha> the problems come when they get bigger :(
[09:15:42] <cdunklau> filiperibeiro: what's self.program? how did you assign to it?
[09:15:43] <bjs> hetii: why not write a function that does the generic error catching and call it in each setter
[09:16:13] *** Joins: zoli81 (~zoli81@176.24.96.172)
[09:16:29] <Falc> vancha: thing is, from my own experience... there's not really a single best practice, it always comes down to specific details. I've struggled with the same questions as you and I still do
[09:16:46] *** Joins: Asandari (~Asandari@198-48-236-23.cpe.pppoe.ca)
[09:17:00] *** Quits: dxiri (~dxiri@186.32.223.195) (Ping timeout: 260 seconds)
[09:17:14] <filiperibeiro> cdunklau, I didn't write the '()' ahaha Now I have a tuple with the results ahah!
[09:17:26] <zoli81> I am new to windows10 - I cannot pass cmd arguments to bat any more in win10.
[09:18:09] *** Quits: dodobrain (~dodobrain@unaffiliated/freakabcd) (Remote host closed the connection)
[09:18:20] <vancha> Falc: i see... i get the feeling that learning to program will continue to feel like an uphill battle no matter how much time i put in :P
[09:18:32] <hetii> bjs, thats why I planed to use __setattr__ cause I don`t whant to call this additional cather directly in setters
[09:18:47] *** Joins: panikovsky (~panikovsk@87.117.54.50)
[09:18:47] <hetii> maybe some idea will be to use some custom decorator
[09:18:51] *** Joins: LambaInsaan (~lambainsa@115.249.71.2)
[09:18:58] <bjs> hetii: a custom decorator is just a function...
[09:18:59] <cdunklau> vancha: sure, there's no end to learning
[09:19:04] *** Joins: inad922 (~inad925@outbound.hortonworks.com)
[09:19:15] <bjs> hetii: maybe you should manually write an example with 2-3 fields without __setattr__
[09:19:22] <bjs> so we can see what problem you're trying to solve
[09:19:29] <hetii> ok
[09:19:37] *** Joins: gpk (92a2f0f4@gateway/web/freenode/ip.146.162.240.244)
[09:19:47] <Falc> vancha: a recurring question I face is: what bit of my code is *responsible* for actually doing something, because I can usually see two or three places I can *do* it but each case has different needs for parameters getting passed in from other places...
[09:20:50] *** Joins: GucciBandana (~GucciBand@78-57-205-76.static.zebra.lt)
[09:20:51] <gpk> Is there a way to do an "include"? (Like include in C). I have a need to run some scripts that finish with certain global variables set and want to factor out the bit that modifies globals
[09:21:15] <Falc> gpk: 'import module' will always run the module code
[09:21:15] <doubtful> what does result[result.starswith('//'):]
[09:21:26] <doubtful> I thought that function returns a boolean
[09:21:37] *** Quits: brainproxy (~michael@pdpc/supporter/gold/brainproxy) (Quit: WeeChat 2.1)
[09:21:39] *** Quits: teodorg (~teodorg@17751.telnet.bg) (Ping timeout: 256 seconds)
[09:21:56] <gpk> Falc: oh yeah..
[09:21:57] *** Joins: lionrouge (~lionrouge@185.79.102.162)
[09:22:00] <vancha> Falc: at school we learned to write down the functionalities of some program, extract the nouns and make those classes, use the verbs associated with those nouns and make those functions, and whenever that noun has some properties, make those properties of the class.
[09:22:02] <lionrouge> hi !
[09:22:08] *** Joins: snatcher (~user@gateway/tor-sasl/snatcher)
[09:22:12] <Falc> gpk: though your use of globals is maybe not really the pythonic way...
[09:22:14] <vancha> but i struggle to actually apply those things in real life :o
[09:22:14] *** Joins: bomb-on (~bomb-on@adsl74-86.du.heimsnet.is)
[09:22:16] <odinsbane> doubtful: boolean are 1 or 0.
[09:22:21] <bjs> doubtful: ugh, but True == 1
[09:22:37] <gpk> Falc: definitely not, but I have to do a thin nonpythonic wrapper unfortunately
[09:22:38] *** Quits: rudrab (~rudrab@14.139.59.140) (Quit: rudrab)
[09:22:38] <bjs> doubtful: sometimes you see like [value_if_false, value_if_true][True]   # etc  as well
[09:22:42] <zoli81> why are sys arguments not passed to .bat from cmd in win10, anyone?
[09:22:47] <bjs> doubtful: it's a bit ugly imo but people seem to like doing it
[09:23:05] <doubtful> bjs, oh, that's sneaky.
[09:23:17] <lionrouge> what is the fastest way to create a sequence of elements (be it a generator, a tuple or else - doesn't matter) where each element is calculated as An = f(An-1, An-2, ... A0)
[09:23:35] <lionrouge> is it possible to solve this task without writing a loop in Python ?
[09:23:39] <Falc> vancha: what's the point you usually struggle with? Finding enough nouns/verbs/properties?
[09:23:50] <bjs> lionrouge: well no you need a loop here (you want a sequence)
[09:24:00] *** Quits: Asandari (~Asandari@198-48-236-23.cpe.pppoe.ca) (Ping timeout: 260 seconds)
[09:24:01] <lionrouge> bjs, sigh
[09:24:10] *** Quits: greg_f (~greg@altlinux/developer/greg) (Ping timeout: 260 seconds)
[09:24:19] <odinsbane> lionrouge: you could do it recursively.
[09:24:25] <cdunklau> vancha: that sounds like a really bad way to program
[09:24:25] <bjs> lionrouge: if you have `def f(*args): ...` you could do something like `a = []; for i in range(n): a.append(f(*a))`
[09:24:28] <bjs> I think that will work
[09:24:40] *** Quits: Darkhunter (~mmojzis@static-84-42-152-237.net.upcbroadband.cz) (Quit: Leaving.)
[09:24:53] <lionrouge> bjs, appending inside a loop is slow
[09:25:05] <vancha> Falc: making them work with whatever library/framework i use... it's like if i wanted to makes something graphical. the explanation could be "make a window that displays a text field and a button, that when clicked displays hello world in the input field"
[09:25:09] *** Joins: stranac (~stranac@78-1-58-149.adsl.net.t-com.hr)
[09:25:12] <vancha> there would be a window class
[09:25:13] <bjs> lionrouge: depends on how big n is
[09:25:26] <bjs> lionrouge: and surely `f` is going to dominate here anyway :)
[09:25:30] <cdunklau> lionrouge: what's youre real situation?
[09:25:32] <vancha> and that window class would have two properties, a text field and a button
[09:25:38] <vancha> but what if i'm using swing?
[09:25:44] <vancha> *java swing
[09:25:51] *** Quits: Minty (c11778e8@gateway/web/freenode/ip.193.23.120.232) (Quit: Page closed)
[09:25:54] <vancha> suddenly i need to extend some swing window class
[09:26:15] *** Joins: andyhuzhill_ (~andyhuzhi@14.23.45.178)
[09:26:25] <lionrouge> cdunklau, I want to know what is the best way to solve dynamic programming tasta in Python
[09:26:30] *** Quits: ezakimak (~ezakimak@c-24-2-94-111.hsd1.ut.comcast.net) (Ping timeout: 256 seconds)
[09:26:34] <lionrouge> *tasks
[09:26:57] <vancha> Falc: i guess thats the problem: i can make simple oop programs, but whenever i have to use classes that i didn't make myself, things get confusing.
[09:27:00] *** Joins: kts (~kts@45.112.177.21)
[09:27:17] *** Joins: twandy (~Thunderbi@cas-fw-sta.inet.casair.net)
[09:27:19] *** Quits: snatcher (~user@gateway/tor-sasl/snatcher) (Remote host closed the connection)
[09:27:22] *** Quits: purplex88 (~purplex88@unaffiliated/purplex88) (Ping timeout: 264 seconds)
[09:27:27] <Falc> vancha: that is completely true and to make it worse, GUIs are absolutely not simple
[09:27:40] <bjs> lionrouge: sure and my solution is the nicest isn't it? you could substitute a list for a slightly more efficient structure (a linked list or something) if you wanted
[09:27:55] *** Joins: purplex88 (~purplex88@unaffiliated/purplex88)
[09:28:11] <gpk> Falc: actually, I need to reference a variable from the importing module in the imported module, that is the problem
[09:28:15] <bjs> (well actually i think that'll end up being slower here, maybe?)
[09:28:31] <vancha> i mean do people even use uml with things like swing? :S does anyone actually model their program before making it?
[09:28:32] *** Quits: antgel (~topdog@213.57.83.154) (Ping timeout: 245 seconds)
[09:28:34] <Falc> vancha: and like you said, although they're almost all OOP each one will build its own API forcing you through different OOP hoops
[09:28:39] *** Joins: ezakimak (~ezakimak@c-24-2-94-111.hsd1.ut.comcast.net)
[09:28:40] *** Quits: hussam (uid193284@gateway/web/irccloud.com/x-lwnjaighgmdtbxji) (Quit: Connection closed for inactivity)
[09:28:48] *** Joins: Asandari (~Asandari@198-48-236-23.cpe.pppoe.ca)
[09:29:01] *** Joins: kurkale6ka (~kurkale6k@84.45.99.125)
[09:29:03] <vancha> Falc: maybe i should take another look at those api's then.. get more practice.
[09:29:35] *** Quits: andyhuzhill (~andyhuzhi@14.23.45.178) (Ping timeout: 256 seconds)
[09:29:35] *** andyhuzhill_ is now known as andyhuzhill
[09:29:42] <Falc> vancha: my personal advice would be to do as much as possible in just text
[09:29:58] <lionrouge> bjs, thank you, I will try to try it this way, measure speed and report
[09:29:59] <kts> How can I make pydoc recognise my PYTHONDOCS Env variable in which is "/usr/share/doc/python/html" which is python-doc html form Arch Linux?
[09:30:08] <zoli81>  why are sys arguments not passed to .bat from cmd in win10, anyone?
[09:30:13] <gehn> UML only exists to make consultants feel important
[09:30:20] <bjs> zoli81: to .bat ?
[09:30:22] <vancha> gehn: :P
[09:30:37] <gpk> So I need two modules that set global variables when run, they are 100 loc with just one variable set differently
[09:31:11] <vancha> Falc: I feel like i should be past that after four years of computer science study... still, putting all that theory in practice yields little succes :(
[09:31:40] <Falc> gehn: UML either gives you a pretty simple diagram, proving that you didn't need it in the first place, or a humongous one, proving that UML won't be able to save you
[09:32:05] <gehn> sounds about right
[09:32:06] <vancha> Falc: all those lectures about big-o notation and other abstract subjects proved worthless when actually writing a functioning program :P
[09:32:10] <zoli81> bjs: i mean via the .bat
[09:32:10] *** Joins: flavius (~flavius@unaffiliated/flavius)
[09:32:19] *** Quits: jellyb (~h.novak@unaffiliated/jellyb) ()
[09:32:35] <Falc> vancha: GUI is almost a completely separate field from actually coding
[09:33:04] <zoli81> bjs: that's added to PATH
[09:33:22] *** Quits: inad922 (~inad925@outbound.hortonworks.com) (Quit: Leaving)
[09:33:26] <cdunklau> kts: how are you running it?
[09:33:28] <cdunklau> what happens?
[09:33:29] <vancha> but i needs to use those classes when using a gui framework though :o
[09:33:29] <gehn> they're not worthless really though
[09:33:34] <bjs> zoli81: I'm lost, this is #python
[09:33:35] *** Quits: StygianBlues (~StygianBl@74-194-176-205.chstcmtk03.res.dyn.suddenlink.net) (Ping timeout: 245 seconds)
[09:33:42] *** Joins: inad922 (~inad925@outbound.hortonworks.com)
[09:33:48] <tech2> vancha: If all you're doing is CRUD, sure. If you've ever needed to worry about any kind of performance or issue then some having some theory proves useful
[09:33:56] <bolovanos_> hithere - I need to save QRCode image / png with https://pypi.org/project/qrcode/
[09:34:03] <gehn> it's the same reason to learn lots of languages: even if you never write in those languages again, what you learn will improve your overall programming skill
[09:34:19] <zoli81> bjs: yes, ok. so any idea why arguments are not passed in win10
[09:34:20] <cdunklau> gehn: assuming you already know how to program
[09:34:27] <bolovanos_> but "TypeError: argument 1 must be convertible to a buffer, not PymagingImage"
[09:34:32] <cdunklau> zoli81: try ##windows
[09:34:41] *** Quits: lionrouge (~lionrouge@185.79.102.162) (Ping timeout: 256 seconds)
[09:34:45] <cdunklau> zoli81: this channel is about the Python programming language
[09:34:59] <kts> cdunklau: pydoc -g doesn't recognise python documentation which is a package named python-docs from Arch Linux.
[09:35:17] *** Quits: andyhuzhill (~andyhuzhi@14.23.45.178) (Quit: andyhuzhill)
[09:35:36] <zoli81> cdunklau: sorry for the confusing here :) i am trying to pass those args to python..
[09:35:44] <cdunklau> kts: -g was removed in 3.3
[09:35:54] <gehn> yes, generally algorithms, data structures and Big-O is not something you try to learn if you haven't programmed before
[09:35:54] <Kiril> bjs: I have tried .. but obviosly it's not working. Could you please paste for me the fix is possible ?
[09:35:58] <bjs> zoli81: okay! Then pastebin your python and your bat file and the command-line sesision
[09:35:58] <bolovanos_> code for generating qrcode is https://pastebin.com/z9BeHRyG
[09:35:59] <infobob> https://paste.pound-python.org/show/P9KIcHhBW25fWsbrAk0Z/ (repasted for bolovanos_)
[09:36:01] <cdunklau> zoli81: ok, show us what you're running, and what happens
[09:36:06] <kts> cdunklau: It was 2x.
[09:36:12] <vancha> i want to thank you all for the help!
[09:36:21] <bjs> Kiril: can you show us the code with your attempted fix?
[09:36:51] <cdunklau> kts: ok, so what did you try doing with PYTHONDOCS
[09:37:11] <cdunklau> gehn: nah that's theory :)
[09:37:35] *** Quits: GucciBandana (~GucciBand@78-57-205-76.static.zebra.lt) (Ping timeout: 240 seconds)
[09:37:40] *** Joins: Darkhunter (~mmojzis@ip-86-49-120-171.net.upcbroadband.cz)
[09:37:41] <zoli81> chunklau: so, in win7, in cmd, i used to be able to put 'nameofbatfile arg1 arg2' but in win10 those arg1 arg2 ar not passed on to python
[09:37:49] <cdunklau> gehn: i'd say you don't know how to program until you've gotten a lot of experience
[09:38:11] <cdunklau> zoli81: what's in the batfile
[09:38:11] *** Quits: Darkhunter (~mmojzis@ip-86-49-120-171.net.upcbroadband.cz) (Client Quit)
[09:38:15] <gehn> so you think most people who have never programmed will understand an algorithms course?
[09:38:23] <kts> cdunklau: https://paste.pound-python.org/raw/rddJ0GkLWhgRN2rMXSjr/
[09:38:30] *** Joins: Darkhunter (~mmojzis@ip-86-49-120-171.net.upcbroadband.cz)
[09:38:35] <gehn> that's nice, but the point remains: learning theory is not useless
[09:38:55] <cdunklau> kts: ok, that doesn't do anything until you restart your shell
[09:38:58] *** Quits: palasso (~palasso@unaffiliated/palasso) (Ping timeout: 256 seconds)
[09:39:08] *** Joins: palasso (~palasso@unaffiliated/palasso)
[09:39:17] <Kiril> https://paste.pound-python.org/show/qyjWhF1tHBVPjVC7jQ6J/
[09:39:18] <Kiril> bjs
[09:39:19] <nightcrow> energizer: sorry, just saw your reply
[09:39:20] <zoli81> @py c:\pathtopythonfile\file.py %*
[09:39:21] <nightcrow> energizer: https://paste.pound-python.org/show/qIASxSXTm33Wukz6MnwX/
[09:39:28] *** Joins: StygianBlues (~StygianBl@74-194-176-205.chstcmtk03.res.dyn.suddenlink.net)
[09:39:30] <cdunklau> kts: try running just   PYTHONDOCS=/usr/share/doc/python2/html/ pydoc -g
[09:39:32] <bjs> Kiril: so line 30 still isn't indented enough
[09:39:38] *** Joins: kingarmadillo (~kingarmad@70-139-18-232.lightspeed.hstntx.sbcglobal.net)
[09:39:43] <cdunklau> all on one line
[09:39:48] *** Quits: OS-35301 (~textual@45.56.148.172) (Quit: Textual IRC Client: www.textualapp.com)
[09:39:51] <kts> cdunklau: I restart it. Is pydoc not able to display python documentation?
[09:39:54] <cdunklau> gehn: i wasn't arguing that :)
[09:40:01] *** Joins: greg_f (~greg@altlinux/developer/greg)
[09:40:08] <cdunklau> kts: what happens when you try
[09:40:14] <zoli81> cdunklau:  @py c:\pathtopythonfile\file.py %* this is in the bat file
[09:40:27] <bolovanos_> nvm - solved
[09:40:28] <Kiril> https://paste.pound-python.org/show/UIOjI6J2WsnpQo7MSpJY/
[09:40:35] <Kiril> that way ?
[09:40:42] *** Joins: seni (~Nimitz14@cpc91218-cmbg18-2-0-cust107.5-4.cable.virginm.net)
[09:40:45] <bjs> Kiril: does that work?
[09:40:54] <kts> cdunklau: Nothing! It doesn't recognise the documentation.
[09:41:02] <gehn> yes I'm really not sure what you were arguing at all
[09:41:41] <Kiril> [root@derltdapo0035 ~]# ./test1.py
[09:41:41] <Kiril>   File "./test1.py", line 31
[09:41:41] <Kiril>     else:
[09:41:41] <Kiril>        ^
[09:41:44] <Kiril> samew
[09:41:51] <cdunklau> Kiril: don't paste here
[09:42:16] <cdunklau> zoli81: and what's in the python script
[09:42:28] <bjs> Kiril: put the full code + traceback + error in a pastebin
[09:42:39] *** Quits: manuelschneid3r (~manuelsch@p57A39159.dip0.t-ipconnect.de) (Ping timeout: 268 seconds)
[09:43:02] <cdunklau> kts: i sincerely doubt it does nothing
[09:43:08] <KOLANICH> can anyone clarify why doesn't it work: https://gitlab.com/KOLANICH1/mol2scad.py/blob/master/setup.cfg
[09:43:15] *** Quits: edne (~edne@2.42.74.190) (Ping timeout: 260 seconds)
[09:43:19] <cdunklau> and if it did, how could you tell "it doesn't recognize the documentation"
[09:43:31] <KOLANICH> *it doesn't work
[09:43:57] <kts>  PYTHONDOCS=/usr/share/doc/python2/html/ pydoc -g in .bashrc? cdunklau
[09:43:58] *** Quits: xcm (~xcm@ipa210.225.tellas.gr) (Remote host closed the connection)
[09:44:17] <cdunklau> kts: no, at the shell prompt
[09:44:25] *** Joins: j-pb (~j_pb@2a00:c380:c0d5:1:e19a:163:42c7:f689)
[09:44:26] *** Joins: xcm (~xcm@ipa210.225.tellas.gr)
[09:44:30] <cdunklau> that's how you run a command with a custom env var set for one invocation
[09:44:36] <bjs> zoli81: idk it works for me, what is your actual .bat file and actual .py file and what does the command line look like when you run iit
[09:44:46] *** Quits: kingarmadillo (~kingarmad@70-139-18-232.lightspeed.hstntx.sbcglobal.net) (Ping timeout: 264 seconds)
[09:47:16] *** Joins: csed (~CSED]@cbg-off-client.mpi-cbg.de)
[09:48:00] *** Joins: edne (~edne@net-2-42-74-190.cust.vodafonedsl.it)
[09:48:26] <csed> Hey. Bit of a silly question. I wanna filter out some values from a dict. I can do that easy by matching it to a set of keys I want to keep. Question is, would it be preferred to del dict[k] on the keys I don't want, or to form a new dict with the keys I do want? I ask because I actually don't see del all that often, so I'm curious whether it's a no-no for some reason.
[09:48:30] *** Joins: Waples_ (~gn0me@87.215.93.222)
[09:48:44] *** Quits: jjulian (~jjulian@i5DB50875.pool.tripleplugandplay.com) (Remote host closed the connection)
[09:49:28] <cdunklau> csed: eh, usually it tends to be nicer to make a new thing rather than mutating a thing
[09:49:29] *** Quits: j-pb (~j_pb@2a00:c380:c0d5:1:e19a:163:42c7:f689) (Ping timeout: 276 seconds)
[09:50:24] <cdunklau> csed: e.g.  {k: orig_dict[k] for k in keys_to_keep}
[09:50:35] <csed> cdunklau: Yeah, felt a bit weird.
[09:50:42] <csed> Oh, right. Dict comprehensions are a thing.
[09:50:55] *** Joins: rjdp9736 (~rjdp9736@183.82.16.197)
[09:51:01] <csed> Awesome, yeah. I'll just do that. Thanks o/
[09:51:16] <nightcrow> energizer: any idea buddy?
[09:51:20] <cdunklau> csed: i also tend to like dict.pop rather than del d[k]
[09:51:27] <cdunklau> not really sure why
[09:52:07] *** Joins: EchoPapa (~EchoPapa@tmo-104-159.customers.d1-online.com)
[09:53:25] *** Joins: alem0lars (~alem0lars@host208-243-dynamic.37-79-r.retail.telecomitalia.it)
[09:54:02] <shibumi> hey guys, do you know a good library for measuring file system performance? I want to mount a CIFS, measure the file system performance on this mounted CIFS share and export the data on a prometheus node
[09:54:53] <Yhg1s> shibumi: measuring performance like that is usually the job of a specific program, not a library. Why does it need to be a library?
[09:55:18] <shibumi> Yhg1s: because a library for measuring performance would be easier.. why inventing the wheel twice?
[09:55:43] <shibumi> Yhg1s: I mean there are already libs for stuff like HTTP clients.. or do you write that also by yourself?
[09:55:44] *** Joins: stardust85 (~ms580j@144.160.226.92)
[09:55:53] <Yhg1s> shibumi: I... don't understand that comment. How would it be easier? If it was a library you'd have to write much more code than just running the program.
[09:56:17] *** Quits: kts (~kts@45.112.177.21) (Ping timeout: 248 seconds)
[09:56:21] <Yhg1s> shibumi: you seem to be arguing that you *shouldn't* be using the library, but instead just run the existing benchmarking programs.
[09:56:27] *** Quits: AnySomebody (~AnySomebo@192.129.2.104) (Ping timeout: 240 seconds)
[09:56:37] <shibumi> Yhg1s: the truth is I have no idea how to measure performance of a filesystem with python. So I thought using a library with good documentation would be easier
[09:56:44] *** Joins: encod3 (~encod3@89.20.162.146.static.ef-service.nl)
[09:57:21] *** Quits: Tempesta (Tempesta@unaffiliated/tempesta) (Quit: See ya!)
[09:57:23] *** Quits: encod3 (~encod3@89.20.162.146.static.ef-service.nl) (Client Quit)
[09:57:27] <Yhg1s> shibumi: okay: it's not about Python. it's about the filesystem. There are benchmarking tools for this. There are a lot of details to this that aren't easily done from a library, and there doesn't seem to be much value in having a library, specifically, for this.
[09:57:27] <gehn> shibumi, read and write lots of data
[09:57:41] <gehn> measure the time elapsed
[09:57:44] <Yhg1s> gehn: yeah, but also flush caches, consider locality of data, spindles, etc.
[09:57:54] <shibumi> Yhg1s: http://rabexc.org/posts/io-performance-in-python <- this is what I've found so far
[09:58:00] <shibumi> and it doesn't look that complicated
[09:58:31] *** Quits: kurkale6ka (~kurkale6k@84.45.99.125) (Ping timeout: 265 seconds)
[09:58:33] <Yhg1s> shibumi: how accurate, repeatable and comparable do you want the benchmarking results to be?
[09:58:50] *** Quits: gpk (92a2f0f4@gateway/web/freenode/ip.146.162.240.244) (Ping timeout: 260 seconds)
[09:58:53] <shibumi> Yhg1s: yes.. and thats the point. I am not a filesystem developer or expert on filesystems.. so I hoped that there is a library that does everything for me and I could just do something like:" import fsperformance; fsperformance.measure() "
[09:59:06] *** Joins: rahulr (rahulr@gateway/shell/panicbnc/x-zegfvrimagejcfeq)
[09:59:09] <gehn> yes my description was oversimplified
[09:59:11] <Yhg1s> shibumi: again, the thing that you should be using is a benchmarking *program*. Not a library written in Python.
[09:59:18] <shibumi> Yhg1s: my idea was to scrape the data every 1min
[09:59:20] <shibumi> or maybe even less
[09:59:21] *** Joins: kts (~kts@45.112.177.37)
[09:59:27] <nightcrow> any idea why writerow() is adding an additionally new line when appending a row? (ie. row1 <newline>, <newline>, row2<newline>, <newline>....
[09:59:29] <nightcrow> )
[09:59:31] <gehn> but it's the general description of how you would test FS performance
[09:59:42] <nightcrow> https://paste.pound-python.org/show/qIASxSXTm33Wukz6MnwX/
[10:00:06] <shibumi> Yhg1s: So your idea is to use a benchmarking programm call that with subprocess.call() and regex the data out of it and export it to prometheus? sounds pretty awkward for me
[10:00:08] <gehn> shibumi, there's probably not an existing library like that
[10:00:27] <shibumi> Yhg1s:  what I would need is a benchmarking programm that has some API to get the data in a reliable way
[10:01:02] *** Quits: arkaros (~arkaros@h-56-4.A137.corp.bahnhof.se) (Ping timeout: 260 seconds)
[10:01:12] *** Quits: twandy (~Thunderbi@cas-fw-sta.inet.casair.net) (Ping timeout: 256 seconds)
[10:01:20] *** Quits: uttam (~uttam@103.238.192.151) (Ping timeout: 260 seconds)
[10:01:24] <shibumi> gehn: What I've found so far is a python benchmarking tool for measuring filesystem performance.. so my idea is now to fork it and use some snippets of code in my exporter
[10:01:25] <Yhg1s> nightcrow: all_values is a list. you're writing the list as a single row. Did you mean to use writerows() perhaps?
[10:01:25] <Yhg1s> shibumi: I wouldn't "regex the data out of it", but yes. Benchmarking programs have various output formats, including easily parsed ones (like JSON).
[10:01:33] *** Quits: lankanmon (~LKNnet@CPE64777d632383-CM64777d632380.cpe.net.cable.rogers.com) (Remote host closed the connection)
[10:01:48] <Yhg1s> nightcrow: also, lines 1-2 are better written as 'all_values = env_vars.values()'
[10:01:53] <nightcrow> Yhg1s: its meant to be a single row
[10:02:08] <nightcrow> Yhg1s: ah yes thanks
[10:02:11] <Yhg1s> nightcrow: okay, you're only writing a single row.
[10:02:17] <Yhg1s> nightcrow: so I'm not sure where you would even get row2 from.
[10:02:23] <shibumi> Yhg1s: The problem is if I rely on an external benchmarking tool I would rely on 2 running processes.. one that is generating the data and one that is exporting that data to my monitoring tool.. I would prefer having this in just one process :)
[10:02:29] <nightcrow> Yhg1s: from the second iteration
[10:02:39] <Yhg1s> shibumi: okay: this is not a good idea. You cannot get good measurements that way.
[10:02:46] <shibumi> Yhg1s: thats why I have been asking for a library..
[10:02:47] <Yhg1s> nightcrow: okay, how are you iterating? What else is the program doing?
[10:03:11] *** Quits: s14ve_ (~s14ve@80.188.244.110) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[10:03:30] *** Quits: neosimago (2f916f27@gateway/web/freenode/ip.47.145.111.39) (Ping timeout: 260 seconds)
[10:03:30] <nightcrow> its running a few functions to build a dictionary out of enviroment variables which is produced from a checkmk notification
[10:03:57] <Yhg1s> nightcrow: in the code you pasted there's nothing that would cause the output you're describing.
[10:04:14] <nightcrow> essentially, i have a dictionary that I want to write to a csv file - and everytime the script ones, a new dictionary is built and i want that new dict to be appended to the said csv file.
[10:04:39] <nightcrow> Yhg1s: i know - i didnt share the whole code :-)
[10:04:57] *** Quits: Waples_ (~gn0me@87.215.93.222) (Quit: WeeChat 2.1)
[10:05:22] <nightcrow> imagine i have a new/different dict on every script run that needs to be appended to a csv file
[10:05:33] <nightcrow> the keys are always the same
[10:05:37] <nightcrow> but the values are different
[10:05:41] *** Quits: xcm (~xcm@ipa210.225.tellas.gr) (Remote host closed the connection)
[10:05:42] *** Quits: cdown (~cdown@199.201.66.5) (Ping timeout: 260 seconds)
[10:06:03] <Yhg1s> nightcrow: I imagine you're doing something somewhere that writes the extra newline. If you want to find that, you'll have to look at the code. Or, show us the code.
[10:06:23] *** Joins: xcm (~xcm@ipa210.225.tellas.gr)
[10:06:46] <nightcrow> Yhg1s: happy to share the code, its just on an internal network with no access to the internet
[10:07:00] <nightcrow> but no, there is no newline anywhere
[10:07:31] *** Quits: con3 (~quassel@ml.sun.ac.za) (Read error: Connection reset by peer)
[10:07:40] <nightcrow> tell ya what - ill write out a few lines of code that will produce exactly the result im describing - feel free to run it
[10:07:44] <Yhg1s> nightcrow: it's entirely possible you're adding a newline without realising it. Without seeing the code it's very difficult to tell.
[10:07:49] <Yhg1s> nightcrow: yes, that would be a good idea.
[10:07:56] <nightcrow> Yhg1s: cool.
[10:08:22] *** Joins: sdwrage (~textual@172.56.21.224)
[10:08:48] *** Joins: s14ve (~s14ve@80.188.244.110)
[10:10:07] <nightcrow> Yhg1s: https://paste.pound-python.org/show/XhA2uWKI95EY8NyVj0r6/
[10:10:42] *** Joins: teodorg (~teodorg@17751.telnet.bg)
[10:10:47] <Yhg1s> nightcrow: have you run it?
[10:10:48] <nightcrow> that code adds an additional line
[10:10:51] <nightcrow> yup
[10:10:56] <Yhg1s> nightcrow: because it's not valid Python code.
[10:11:09] <nightcrow> i typed it out so might have made a mistake somewhere
[10:11:11] <nightcrow> hold
[10:11:31] *** Quits: absolutejam (~absolutej@87-102-46-137.static.kc.net.uk) (Quit: WeeChat 2.1)
[10:11:31] <Yhg1s> nightcrow: it also only writes one row, so there can't be two newlines between rows.
[10:11:51] <nightcrow> oh sorry - i wasnt clear - if you run it again it'll add another roqw
[10:11:53] <nightcrow> *row
[10:12:03] *** Quits: doubtful (~abhigenie@dyn-160-39-2-139.dyn.columbia.edu) (Ping timeout: 265 seconds)
[10:12:11] <nightcrow> for everytime the script is run it adds an additional new line
[10:12:28] <Yhg1s> nightcrow: if I fix your code and run it twice, it does not add two newlines between the rows.
[10:12:37] <nightcrow> so odd - for me it does
[10:12:44] <Yhg1s> nightcrow: how did you fix the code?
[10:12:48] <nightcrow> how many new lines does it add?
[10:12:50] *** Quits: sdwrage (~textual@172.56.21.224) (Client Quit)
[10:12:57] <Yhg1s> nightcrow: exactly one.
[10:12:59] *** Joins: KomKK (~KomKK@1-207-149-91.cpe.marton.net.pl)
[10:13:01] <nightcrow> Yhg1s: one moment
[10:13:22] <nightcrow> going to paste it into pycharm - i just typed it out directly into paste pound
[10:13:24] <nightcrow> hold on buddy
[10:13:30] <nightcrow> (btw, thanks very much)
[10:13:42] <Yhg1s> nightcrow: this is why I asked if you ran it. You ahve to run the *actual code you give us*, or it's useless.
[10:13:51] <nightcrow> very rue
[10:13:53] <nightcrow> *true
[10:13:56] <nightcrow> apologies
[10:14:46] *** Quits: edne (~edne@net-2-42-74-190.cust.vodafonedsl.it) (Ping timeout: 264 seconds)
[10:14:53] *** Quits: EchoPapa (~EchoPapa@tmo-104-159.customers.d1-online.com) (Quit: Transdimensional connection terminated abnormally.)
[10:15:13] <nightcrow> lol - i see that i didnt even make it a dict
[10:15:19] <nightcrow> sorry, was typing quickly :-)
[10:16:14] *** Joins: kurkale6ka (~kurkale6k@62.232.85.2)
[10:16:20] *** Joins: psi29a (~psi29a@129.253.244.4)
[10:16:24] *** Quits: beerdrop (~beerdrop@c-107-2-115-62.hsd1.mn.comcast.net) (Ping timeout: 265 seconds)
[10:16:42] *** Quits: TRS-80_mobile (yaaic@gateway/vpn/privateinternetaccess/trs-80) (Remote host closed the connection)
[10:17:02] *** Joins: arkaros (~arkaros@h-56-4.A137.corp.bahnhof.se)
[10:17:54] *** Quits: uni_ (~uni@37-147-34-5.broadband.corbina.ru) (Quit: Konversation terminated!)
[10:18:03] <nightcrow> Yhg1s: ok running this code twice will add an additional new line: https://paste.pound-python.org/show/MrXi3qaHTJNLVfiNeIkg/
[10:18:05] <nightcrow> i have run it
[10:18:18] <nightcrow> when opening in excel :-)
[10:18:23] <nightcrow> maybe excel is the probelm
[10:18:25] <Yhg1s> nightcrow: okay! That's very different.
[10:18:25] <nightcrow> *problem
[10:18:54] *** Quits: kts (~kts@45.112.177.37) (Quit: Konversation terminated!)
[10:18:59] <nightcrow> ?
[10:19:01] *** Quits: KomKK (~KomKK@1-207-149-91.cpe.marton.net.pl) ()
[10:19:02] <Yhg1s> nightcrow: what if you look at the *actual file* instead? For example, add 'with open('mycsvfile.csv', 'rb') as f: print(repr(f.read())' at the end of the program.
[10:19:14] <Yhg1s> eh, one missing ) there.
[10:19:14] <nightcrow> will do now
[10:19:18] *** Joins: Allegretto (~allegrett@212.52.160.157)
[10:19:34] *** Joins: stefanc_diff (~stefanc_d@193.105.212.250)
[10:19:38] *** Quits: gacrux (~gacrux@2406:e006:6d9d:1:1527:a037:56d6:8564) (Quit: ZZZzzz…)
[10:19:46] *** Joins: GucciBandana (~GucciBand@78-57-205-76.static.zebra.lt)
[10:19:56] <nightcrow> Yhg1s: 'val2,val1\r\r\nval2,val1\r\r\nval2,val1\r\r\n'
[10:20:10] *** Joins: uttam (~uttam@103.238.192.151)
[10:20:11] <nightcrow> see :-)
[10:20:44] <Yhg1s> nightcrow: yes: not an extra newline. An extra carriage return. Open the file in 'wb' mode instead.
[10:20:50] <Yhg1s> eh, 'ab' mode.
[10:20:51] *** Joins: NaNkeen (~nankeen@115.164.205.185)
[10:20:59] <nightcrow> gotcha
[10:21:01] <nightcrow> trying
[10:21:02] *** Quits: r4ulrm (~administr@mail.klonal.com.ar) (Ping timeout: 256 seconds)
[10:21:14] <nightcrow> extra carriage return vs new line?
[10:21:23] *** Joins: cdown (~cdown@199.201.66.5)
[10:21:24] <Yhg1s> unless you're using Python 3, in which case you need to use 'newline=''' as argument to open() instead.
[10:21:26] *** Quits: jb1123 (~Thunderbi@2a02:a03f:5230:2400:25a9:5be1:8be7:d72a) (Ping timeout: 276 seconds)
[10:21:34] <Yhg1s> nightcrow: yes. Notice how it's '\r\r\n', not '\r\n' or '\n' or '\r\n\r\n'.
[10:21:38] <nightcrow> using python2
[10:21:43] <Yhg1s> nightcrow: https://stackoverflow.com/questions/3348460/csv-file-written-with-python-has-blank-lines-between-each-row
[10:21:43] *** Quits: arkaros (~arkaros@h-56-4.A137.corp.bahnhof.se) (Ping timeout: 256 seconds)
[10:22:10] <nightcrow> perfect. looks like your solution worked
[10:22:12] <nightcrow> thanks very much
[10:22:25] <nightcrow> what is the difference between 'a' and 'ab'?
[10:22:38] <nightcrow> as in, why did it behave this way?
[10:23:33] <Yhg1s> nightcrow: the SO link explains.
[10:23:46] <nightcrow> thanks - checking now :-)
[10:23:51] <nightcrow> appreciate your help buddy
[10:23:51] *** Quits: nigthw0lf (~nightw0lf@toroon6128w-lp130-04-69-158-180-35.dsl.bell.ca) (Remote host closed the connection)
[10:24:22] *** Joins: KomKK (~KompKK@1-207-149-91.cpe.marton.net.pl)
[10:24:40] *** Quits: s14ve (~s14ve@80.188.244.110) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[10:24:41] <KomKK> Hello
[10:25:05] *** Quits: feuillemorte (irc@nat/redhat/x-jebqycectljrrnpf) (Ping timeout: 248 seconds)
[10:25:18] *** Joins: edne (~edne@net-2-42-74-190.cust.vodafonedsl.it)
[10:25:37] *** Quits: akkadian (~akkadian@unaffiliated/akkadian) (Ping timeout: 248 seconds)
[10:25:40] *** Quits: BeforeClick (a5e148ed@gateway/web/freenode/ip.165.225.72.237) (Ping timeout: 260 seconds)
[10:25:49] *** Parts: KomKK (~KompKK@1-207-149-91.cpe.marton.net.pl) ("Leaving")
[10:25:49] *** Joins: Debnet (~Marc@2a01:e0a:22:19d0:d59f:dc9b:a7e7:3912)
[10:27:53] *** Joins: twandy (~Thunderbi@cas-fw-sta.inet.casair.net)
[10:28:09] *** Joins: Bendr (~Bendr@unaffiliated/innocent99)
[10:28:16] *** Quits: uttam (~uttam@103.238.192.151) (Ping timeout: 256 seconds)
[10:28:52] *** Quits: Bendr (~Bendr@unaffiliated/innocent99) (Max SendQ exceeded)
[10:29:19] *** Joins: Bendr (~Bendr@unaffiliated/innocent99)
[10:29:59] *** Joins: Tempesta (Tempesta@unaffiliated/tempesta)
[10:30:12] *** Joins: beerdrop (~beerdrop@c-107-2-115-62.hsd1.mn.comcast.net)
[10:30:14] *** Joins: megagarbage (~user@cpe-104-230-113-212.neo.res.rr.com)
[10:32:07] *** Quits: lorddaed_ (~lorddaedr@213.141.139.44) (Remote host closed the connection)
[10:32:46] *** Joins: lorddaedra (~lorddaedr@37.58.58.231)
[10:33:51] *** Joins: Ergo (~ergo@91.238.59.144)
[10:34:11] *** Joins: jjulian (~jjulian@i5DB50875.pool.tripleplugandplay.com)
[10:34:22] *** Joins: veevax (~veevax@37.173.177.225)
[10:34:37] *** Parts: zoli81 (~zoli81@176.24.96.172) ()
[10:34:51] *** Joins: manuelschneid3r (~manuelsch@p57A39159.dip0.t-ipconnect.de)
[10:35:15] *** Quits: yawkat (~yawkat@cats.coffee) (Ping timeout: 245 seconds)
[10:35:32] *** Joins: kurkale61 (~kurkale6k@62.232.85.2)
[10:35:38] *** Quits: kurkale6ka (~kurkale6k@62.232.85.2) (Ping timeout: 256 seconds)
[10:36:54] *** Joins: Ashex (~Ashex@dslb-002-205-002-169.002.205.pools.vodafone-ip.de)
[10:38:04] *** Joins: KomKK (~KomKK@2a02:d107:f000:98f2:105:200:0:107c)
[10:38:05] *** Joins: flommi (~florian@p5486F46D.dip0.t-ipconnect.de)
[10:38:50] *** Joins: lankanmon (~LKNnet@CPE64777d632383-CM64777d632380.cpe.net.cable.rogers.com)
[10:39:03] *** Joins: s14ve (~s14ve@80.188.244.110)
[10:39:19] <Ashex> csv DictWriter isn't writing the entire list to a StringIO buffer. From reading it looks like the solution is to use "with open() as f:" but that that doesn't work with StringIO. Is there another option? This is the function: https://pastebin.com/ZcptfSUD
[10:39:19] <infobob> https://paste.pound-python.org/show/VbcF9evpKCztGltLRsWj/ (repasted for Ashex)
[10:39:27] *** Quits: dka (~code-is-a@master-sbg-01.kopaxgroup.com) (Ping timeout: 240 seconds)
[10:40:05] *** Quits: kajo (~kajo@2001:4c50:371d:8400:e6ce:8fff:fe3a:6626) (Ping timeout: 265 seconds)
[10:41:32] *** Joins: kajo (~kajo@2001:4c50:371d:8400:ca2a:14ff:fe0f:7dd1)
[10:42:16] *** Joins: antgel (~topdog@141.226.120.30)
[10:42:18] <iron_houzi> Are there any good tools for bootstrapping a project for a python library?
[10:42:20] <Ashex> The core of my issue is a list with 500+ items and only around 100 are written to the StringIo instance
[10:43:06] *** Joins: volition (volition@gateway/vpn/privateinternetaccess/volition)
[10:43:27] <cdunklau> iron_houzi: https://cookiecutter.readthedocs.io/en/latest/
[10:43:38] <Yhg1s> Ashex: I can't reproduce what you're seeing, sorry. There is no buffering in csv.DictWriter itself, and closing/flushing is only necessary for files that do their own buffering. StringIO doesn't do buffering.
[10:43:38] <Yhg1s> Ashex: can you show the input you're giving and the output you're getting?
[10:43:44] *** Joins: Ridout (~coffee@unaffiliated/ridout)
[10:43:54] <iron_houzi> cdunklau: I've heard of that project, do you use it regularily?
[10:44:10] <cdunklau> nope
[10:44:17] <nedbat> iron_houzi: we use it
[10:45:11] *** Joins: uttam (~uttam@103.238.192.151)
[10:45:22] *** Quits: edne (~edne@net-2-42-74-190.cust.vodafonedsl.it) (Ping timeout: 264 seconds)
[10:45:29] *** Quits: AliGeyik (~Thunderbi@82.222.185.98) (Remote host closed the connection)
[10:45:58] <iron_houzi> Oh hi nedbat! Any of the cookiecutter templates you recommend for a library package?
[10:46:05] *** Quits: RIPEvent (~R@178.165.128.180.wireless.dyn.drei.com) (Quit: Leaving)
[10:46:13] <nedbat> iron_houzi: that is the challenge: many are overstuffed with features
[10:46:30] <Ashex> Yhg1s it's all sensitive data so I can't share it precisely. I can mock a few entries for you if that'll work. It's effectively a list of dicts
[10:46:58] *** Joins: dka (~code-is-a@master-sbg-01.kopaxgroup.com)
[10:48:00] *** Joins: MeagerChieftan (~MeagerChi@46.17.59.194)
[10:48:01] <nedbat> Ashex: are you sure it's a list?  In your function, print(type(elb_list), len(elb_list))
[10:48:23] *** Joins: edne (~edne@net-2-42-74-190.cust.vodafonedsl.it)
[10:48:26] <nedbat> iron_houzi: we have a few of our own that we use for internal projects
[10:48:53] <Ashex> nedbat  Yeah, I added some logging to give me the item count. I'll throw the type check in there
[10:48:58] <Yhg1s> Ashex: https://paste.pound-python.org/show/QxPGNK8IOxPANUdNPK3M/
[10:48:59] *** Joins: Draecos (~Draecos@203.121.220.138)
[10:49:20] *** Joins: AliGeyik (~Thunderbi@82.222.185.98)
[10:49:38] <iron_houzi> nedbat: I see. THat's probably a good idea for a bigger sized python shop. We're not that big, but maybe it still makes sense to standardize this stuff.
[10:49:51] *** Joins: amirpro (~amirpro@41.235.183.31)
[10:50:07] <iron_houzi> nedbat: Is it complicated to make a cookiecutter template? I don't want to start the yak shaving this soon..
[10:50:08] *** Quits: Odyseus (~Odyseus@138.117.129.193) (Remote host closed the connection)
[10:50:21] *** Joins: yawkat (~yawkat@cats.coffee)
[10:50:30] <nedbat> iron_houzi: i guess i would shop around for one, and then change it as you need.
[10:51:00] <iron_houzi> nedbat: OK, thanks. I'll try the pylibrary one..
[10:51:06] *** Joins: lysanderx (~lysanderx@ip24-254-57-19.br.br.cox.net)
[10:51:48] *** Parts: KomKK (~KomKK@2a02:d107:f000:98f2:105:200:0:107c) ("Leaving")
[10:52:22] *** Joins: haikubuntu_ (~haikubunt@37.171.65.209)
[10:53:30] *** Quits: Amadiro (~Amadiro@v220100555393154.yourvserver.net) (Quit: Ping timeout (120 seconds))
[10:53:31] *** Quits: chachasmooth (~chachasmo@unaffiliated/chachasmooth) (Quit: Quit)
[10:53:45] *** Quits: tombusby (~tombusby@gateway/tor-sasl/tombusby) (Ping timeout: 250 seconds)
[10:53:50] *** Quits: Pyrus (~pyrus@unaffiliated/pyrus) (Quit: ZNC - http://znc.in)
[10:54:00] *** Quits: subsonik (~subsonik@im.netspectrum.de) (Quit: ZNC - https://znc.in)
[10:54:37] *** Quits: lulzake (~lulzake@gateway/tor-sasl/lulzake) (Ping timeout: 250 seconds)
[10:54:44] *** Joins: kurkale6ka (~kurkale6k@84.45.99.125)
[10:54:52] *** Joins: nigthw0lf (~nightw0lf@toroon6128w-lp130-04-69-158-180-35.dsl.bell.ca)
[10:54:57] *** Quits: shibumi (~shibumi@archlinux/trusteduser/shibumi) (Ping timeout: 248 seconds)
[10:55:01] *** Joins: subsonik (~subsonik@im.netspectrum.de)
[10:55:08] *** Joins: Pyrus (~pyrus@unaffiliated/pyrus)
[10:55:20] *** Joins: chachasmooth (~chachasmo@unaffiliated/chachasmooth)
[10:55:25] *** Joins: lulzake (~lulzake@gateway/tor-sasl/lulzake)
[10:55:27] *** Quits: HaikUbuntu (~haikubunt@37.169.54.176) (Ping timeout: 240 seconds)
[10:55:34] *** Joins: modin (~modin@h-146-160.A444.priv.bahnhof.se)
[10:56:01] *** Joins: shibumi (~shibumi@archlinux/trusteduser/shibumi)
[10:56:12] *** Joins: Amadiro (~Amadiro@v220100555393154.yourvserver.net)
[10:56:35] *** Joins: tombusby (~tombusby@gateway/tor-sasl/tombusby)
[10:57:05] *** Quits: jalalsfs (~jalalsfs@unaffiliated/jalalsfs) (Ping timeout: 240 seconds)
[10:57:11] *** Quits: amirpro (~amirpro@41.235.183.31) (Quit: amirpro)
[10:57:20] *** Joins: knstn (~Thunderbi@2a02:587:a405:f00:2b32:dcdb:c017:e3f7)
[10:57:27] *** Quits: kurkale61 (~kurkale6k@62.232.85.2) (Ping timeout: 240 seconds)
[10:57:46] *** Quits: lorddaedra (~lorddaedr@37.58.58.231) (Read error: Connection reset by peer)
[10:57:59] *** Quits: nifo (~nothing@192.157.192.154) (Remote host closed the connection)
[10:58:26] *** Quits: edne (~edne@net-2-42-74-190.cust.vodafonedsl.it) (Ping timeout: 256 seconds)
[10:59:13] *** Joins: lorddaedra (~lorddaedr@185.94.189.188)
[10:59:34] *** Joins: WeiJunLi (~weijunli@154.0.74.220)
[10:59:51] *** Quits: Leeds (~Leeds@223.16.213.143) (Quit: Leaving)
[11:00:45] *** Joins: jalalsfs (~jalalsfs@unaffiliated/jalalsfs)
[11:01:57] *** Quits: twandy (~Thunderbi@cas-fw-sta.inet.casair.net) (Ping timeout: 240 seconds)
[11:02:00] *** Joins: pawle (~Thunderbi@public-gprs370234.centertel.pl)
[11:02:00] *** Quits: zOthix (~zOthix@unaffiliated/zothix) (Ping timeout: 260 seconds)
[11:02:10] *** Quits: veevax (~veevax@37.173.177.225) (Ping timeout: 264 seconds)
[11:02:13] *** Quits: s14ve (~s14ve@80.188.244.110) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[11:02:45] *** Joins: edne (~edne@net-2-42-74-190.cust.vodafonedsl.it)
[11:04:01] *** Quits: lysanderx (~lysanderx@ip24-254-57-19.br.br.cox.net) (Ping timeout: 248 seconds)
[11:04:15] *** Quits: bluenemo (~bluenemo@unaffiliated/bluenemo) (Ping timeout: 265 seconds)
[11:04:21] *** Quits: sketchman2017_ (3eb75326@gateway/web/freenode/ip.62.183.83.38) (Quit: Page closed)
[11:04:48] *** Joins: akkadian (~akkadian@unaffiliated/akkadian)
[11:05:29] *** Quits: crypiehef (~crypiehef@165.166.246.158) (Quit: cpu_sleep==true)
[11:06:23] *** Quits: NotThizT1 (~NotThizTi@118.70.129.253) (Read error: Connection reset by peer)
[11:06:38] *** Quits: chamgry (~root@unaffiliated/chamgry) (Quit: WeeChat 2.1)
[11:06:56] *** Joins: NotThizT1 (~NotThizTi@118.70.129.253)
[11:07:25] *** Quits: nightcrow (051dd8b7@gateway/web/freenode/ip.5.29.216.183) ()
[11:07:27] <Ashex> Yhg1s Alright so I figured it out and it's pretty embarassing. Everything was working as expected, one of my debug statements referenced the wrong variable.
[11:08:08] *** Joins: ycon_ (~ycon_@202-172-111-51-cpe.spintel.net.au)
[11:08:09] <Ashex> There's a function that reduces the list before the csv is generated and I wasn't logging the output of that
[11:08:23] *** Quits: }ls{ (~kalle@unaffiliated/ls/x-8089558) (Ping timeout: 256 seconds)
[11:08:24] *** Quits: Haudegen (~quassel@178.115.237.87) (Remote host closed the connection)
[11:08:43] *** Joins: BeforeClick (a5e148ed@gateway/web/freenode/ip.165.225.72.237)
[11:09:47] *** Joins: Kaad (5df5befc@gateway/web/freenode/ip.93.245.190.252)
[11:11:33] *** Joins: sunil_bansal (~sunil_ban@123.63.30.29)
[11:11:47] <nedbat> Ashex: the first rule of debugging: When In Doubt, Print More Out
[11:12:09] *** Quits: Miroboru (~myrvoll@133.58.244.158) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[11:12:37] *** Joins: encod3 (~encod3@89.20.162.146.static.ef-service.nl)
[11:13:03] *** Joins: s14ve_ (~s14ve@80.188.244.110)
[11:13:09] *** Joins: }ls{ (~kalle@unaffiliated/ls/x-8089558)
[11:13:20] *** Quits: sunil_bansal (~sunil_ban@123.63.30.29) (Remote host closed the connection)
[11:13:22] <Kaad> Hi, I'm trying to convert a timeformat in the form of "yy:mm:dd hh:mm:ss" into ISO 8601 to import as a dynamic graph in Gephi. But the format I get back is not ISO 8601 compatible? https://paste.pound-python.org/show/ccly9BnJ9VgUXe29bZuk/
[11:14:25] *** Joins: diazard (c1b3d762@gateway/web/freenode/ip.193.179.215.98)
[11:14:29] <diazard> Hey, I'm having difficulties sending post request to sensu backend. GET request works great, POST works through Postman or cURL, but in my python script, it throws 500 error. Even when sending same data, with exactly same headers as in Postman/cURL. Anyone knows about a workaround?
[11:15:21] <Yhg1s> Kaad: '2018-02-25T08:10:17' is a valid ISO8601 date. The 'Z' or '+00:00' are optional. (In fact a lot of that string is optional)
[11:16:04] <Yhg1s> Kaad: the datetime module will only add the '+00:00' when there's a timezone attached to the datetime object.
[11:16:20] *** Joins: borkr (~borkr@static130-244.mimer.net)
[11:16:21] *** Quits: Popzi (~Thunderbi@unaffiliated/popzi) (Quit: Popzi)
[11:16:26] <nedbat> diazard: can you pastebin your code?
[11:16:38] *** Joins: Popzi (~Thunderbi@unaffiliated/popzi)
[11:17:09] <Kaad> According to Wikipedia the ISO 8601 format needs a timezone if date and time is combined: https://en.wikipedia.org/wiki/ISO_8601??
[11:17:36] <diazard> nedbat: https://pastebin.com/vK68BrWk
[11:17:36] <infobob> https://paste.pound-python.org/show/eO1XzipALHamENgTt0vI/ (repasted for diazard)
[11:17:36] *** Joins: con3 (~quassel@ml.sun.ac.za)
[11:18:14] *** Quits: encod3 (~encod3@89.20.162.146.static.ef-service.nl) (Ping timeout: 268 seconds)
[11:18:23] *** Quits: d^sh (~knumskull@p5784DA5C.dip0.t-ipconnect.de) (Quit: ZNC 1.6.1 - http://znc.in)
[11:19:05] *** Joins: Metallkd (~Metallkd@h59.112.232.68.dynamic.ip.windstream.net)
[11:19:35] <Yhg1s> Kaad: that's not how I read it, no. It even gives an example without it (under 'Combined date and time representations'): A single point in time can be represented by concatenating a complete date expression, the letter T as a delimiter, and a valid time expression. For example, "2007-04-05T14:30"
[11:21:27] *** Joins: subho (~subho@fedora/subho)
[11:21:54] *** Joins: arkaros (~arkaros@h-56-4.A137.corp.bahnhof.se)
[11:22:15] *** Joins: enriq (~pitagoras@190-186-16-190.fibertel.com.ar)
[11:22:30] <nedbat> diazard: i don't see anything wrong there.  servers can be devious about how they decide to respond
[11:22:44] <nedbat> diazard: (btw, no need for an underscore in _headers, it's a local)
[11:23:01] *** Joins: bluenemo (~bluenemo@unaffiliated/bluenemo)
[11:23:07] <diazard> yea, me neither. It's just weird.
[11:23:09] <Hasimir> also the 500 error indicates a server issue anyway
[11:23:42] <diazard> I know, that's just force of habit from college :|
[11:24:10] <nedbat> diazard: you are in control of the server code?
[11:24:26] <diazard> I know it's a server error. It just works everywhere except in python
[11:24:40] <nedbat> diazard: what did you mean by "force of habit"?
[11:24:42] *** Quits: GnuLxUsr (~gn00@cpc103044-sgyl39-2-0-cust1799.18-2.cable.virginm.net) (Remote host closed the connection)
[11:24:44] <diazard> Sort of. It's a sensu instance running in docker
[11:25:37] <cdunklau> nedbat: presumably the underscore in _headers
[11:25:52] *** Joins: waveform (~waveform@waveform.plus.com)
[11:25:53] *** Quits: subho (~subho@fedora/subho) (Ping timeout: 248 seconds)
[11:26:02] <diazard> exactly
[11:26:07] <Hasimir> diazard, in that case comparing what the server sees between implementations can be useful by switching the url/uri to httpbin.org and trying it out can help (the response is what a server would actually get)
[11:26:36] *** Joins: lysanderx (~lysanderx@ip24-254-57-19.br.br.cox.net)
[11:26:49] <diazard> oh ok, i'll check the logs
[11:26:54] *** Joins: kurkale61 (~kurkale6k@62.232.85.2)
[11:27:35] *** Joins: subho (~subho@fedora/subho)
[11:27:51] *** Joins: Farad41 (~Thunderbi@2604:6000:140a:c009:c430:d222:5cb8:96c3)
[11:28:39] *** Joins: twandy (~Thunderbi@cas-fw-sta.inet.casair.net)
[11:28:50] *** Joins: elichai2 (uid212594@gateway/web/irccloud.com/x-kzixwtzdxvicldys)
[11:28:58] <elichai2> hey
[11:29:22] <Hasimir> diazard, btw, httpbin.org is another one of Kenneth Reitz's awesome little toys, so there's more detail in the requests docs.  ;)
[11:29:38] *** Joins: thedarkcoder (~Adium@111.93.143.70)
[11:29:57] *** Quits: courrier (~yoan@147.210.204.164) (Ping timeout: 240 seconds)
[11:30:10] *** Quits: NaNkeen (~nankeen@115.164.205.185) (Ping timeout: 260 seconds)
[11:30:14] <elichai2> I have a class that creates an object from a base64 data it gets in __init__, but I want to add an option to get the data from online, is the best practice putting it inside of __init__ too? creating a @classmethod `from_server`? maybe something else?
[11:30:15] *** Quits: kurkale6ka (~kurkale6k@84.45.99.125) (Ping timeout: 245 seconds)
[11:30:48] <nedbat> elichai2: a classmethod sounds good.
[11:31:37] <elichai2> and it will return the class object?
[11:31:48] <Yhg1s> elichai2: the new instance.
[11:31:54] <elichai2> ok, thanks
[11:32:09] *** Joins: Ruhan (uid76353@gateway/web/irccloud.com/x-gxjdcxmubgmucgoz)
[11:32:21] *** Joins: GnuLxUsr (~gn00@cpc103044-sgyl39-2-0-cust1799.18-2.cable.virginm.net)
[11:33:53] *** Quits: harrymm (~harrymm@69.161.195.103) (Ping timeout: 256 seconds)
[11:34:35] *** Quits: haikubuntu_ (~haikubunt@37.171.65.209) (Remote host closed the connection)
[11:34:59] *** Joins: kurkale6ka (~kurkale6k@62.232.85.2)
[11:34:59] *** Parts: thedarkcoder (~Adium@111.93.143.70) ()
[11:35:07] *** Quits: kurkale61 (~kurkale6k@62.232.85.2) (Read error: Connection reset by peer)
[11:35:08] *** Quits: patdaburu (~patdaburu@24-177-166-2.dhcp.mrqt.mi.charter.com) (Ping timeout: 256 seconds)
[11:35:09] <cdunklau> elichai2: for the sake of "purity", i'd have __init__ take the actual bytes, or better yet the domain-specific values you get from the bytes
[11:35:32] <cdunklau> and have classmethods that accept base64, or the url to grab from, etc
[11:35:36] <elichai2> you mean inside the `from_server_` i'll use __init__?
[11:35:48] *** Joins: thedarkcoder (~Adium@111.93.143.70)
[11:35:55] <cdunklau> elichai2: well, no, you'd use cls(...)
[11:36:08] <elichai2> yeah of course
[11:36:35] <cdunklau> i like when my __init__ methods are as dumb as possible, and do as little as possible
[11:36:39] *** Joins: cetchmoh (~ike@thymoeides.stuko.uni-weimar.de)
[11:36:50] <cetchmoh> hi there
[11:37:29] *** Quits: lysanderx (~lysanderx@ip24-254-57-19.br.br.cox.net) (Ping timeout: 276 seconds)
[11:37:30] *** Parts: thedarkcoder (~Adium@111.93.143.70) ()
[11:37:34] *** Joins: thedarkcoder (~Adium@111.93.143.70)
[11:38:40] <nedbat> cetchmoh: hey there, what
[11:38:45] <nedbat> cetchmoh: hey there, what's up?
[11:39:16] *** Joins: RefractiveIndex (2a6caed8@gateway/web/freenode/ip.42.108.174.216)
[11:39:42] <cetchmoh> nedbat: not much. experimenting with some wayland-lib-bindings... how bout you :)
[11:40:26] <nedbat> cetchmoh: digging into how to make some coverage.py tests stricter
[11:40:37] *** Quits: diazard (c1b3d762@gateway/web/freenode/ip.193.179.215.98) (Quit: Page closed)
[11:41:06] <RefractiveIndex> Ok so I don't understand that when I debug this program how come p reaches a value of 3 and d only reaches a value of 2 after two steps
[11:41:10] <RefractiveIndex> https://ibb.co/dJxSjo
[11:41:26] <RefractiveIndex> Pasting an image was necessary hecne i didn't paste the code
[11:42:12] <cetchmoh> nedbat: stricter? are you working on coverage, or are you using coverage for your project?
[11:42:32] <nedbat> cetchmoh: working on coverage.  i have some tests that aren't noticing some changes I would like them to notice.
[11:42:36] *** Quits: derk0pf (~derk0pf@p57ADCC33.dip0.t-ipconnect.de) (Ping timeout: 255 seconds)
[11:43:03] <cetchmoh> nedbat: fancy :)
[11:43:10] *** Quits: raynold (uid201163@gateway/web/irccloud.com/x-agxfghpalauurvyy) (Quit: Connection closed for inactivity)
[11:43:48] *** Joins: rcdilorenzo (~rcdiloren@cpe-24-163-97-97.nc.res.rr.com)
[11:43:54] *** Joins: fgimian (~fgimian@137.147.132.165)
[11:43:54] *** Quits: fgimian (~fgimian@137.147.132.165) (Client Quit)
[11:44:46] <odinsbane> RefractiveIndex: range(2,3) will give you 2.
[11:44:59] <cdunklau> RefractiveIndex: because range(x, y) does not include y
[11:45:00] <Falc> RefractiveIndex: first step, p=2, d=2; second step: p=3, d=2; third step: p=3, d=3
[11:45:05] <cdunklau> it's a half-open range
[11:45:19] <odinsbane> Still no need to paste an image though.
[11:45:35] <Ninpo> people can't copy and test your code from an image.
[11:46:03] *** Joins: nighty- (~nighty@s229123.ppp.asahi-net.or.jp)
[11:46:27] <cetchmoh> I know how to embed python in a c-application and I even know how to spawn an interactive python shell from this application and be able to expose some state of the c-application as a module for this python process. Does anyone know if there exists an elegant way to connect to this embedded python via another python shell? (Some sort of remote debugging, but within an embedded python process)
[11:46:51] *** Joins: harrymm (~harrymm@223.204.199.135)
[11:47:03] *** byzafk is now known as byzandula
[11:47:44] *** Joins: noobineer (~noobineer@d74205.tidewater.net)
[11:47:44] *** Quits: noobineer (~noobineer@d74205.tidewater.net) (Max SendQ exceeded)
[11:47:46] *** Quits: peroni (~peroni@85.17.136.250) (Ping timeout: 264 seconds)
[11:47:55] *** Quits: fpghost84 (~fpghost84@90.202.150.135) (Quit: Leaving)
[11:47:55] *** Quits: aielima (~aielima@gateway/tor-sasl/aielima) (Ping timeout: 250 seconds)
[11:48:35] *** Quits: nighty- (~nighty@s229123.ppp.asahi-net.or.jp) (Max SendQ exceeded)
[11:48:51] *** Joins: ksuthar (uid303433@gateway/web/irccloud.com/x-xosqcccggzmhmahj)
[11:50:07] *** Quits: plutoniix (~q@175.176.222.7) (Read error: Connection reset by peer)
[11:50:51] *** Joins: Lambertini (~Lambertin@2804:14c:5787:8432:25da:5ef8:3ccb:d744)
[11:51:22] *** Quits: beerdrop (~beerdrop@c-107-2-115-62.hsd1.mn.comcast.net) (Ping timeout: 264 seconds)
[11:51:34] *** Joins: alexmitchell (~alexmitch@118.211.33.127)
[11:51:38] *** Quits: s14ve_ (~s14ve@80.188.244.110) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[11:52:07] <Lambertini> hey guys, somoe can help me with django ?
[11:52:45] *** Joins: encod3 (~encod3@89.20.162.146.static.ef-service.nl)
[11:52:47] *** Quits: Metallkd (~Metallkd@h59.112.232.68.dynamic.ip.windstream.net) (Quit: Metallkd)
[11:53:18] <Wulf> Lambertini: #django
[11:53:33] <Wulf> Lambertini: or if it's more related to python itself, ask a specific question
[11:53:38] <Lambertini> hey wulf, thx man
[11:55:51] *** Joins: s14ve (~s14ve@80.188.244.110)
[11:57:33] *** Joins: zerobaud (54f4bd6e@gateway/web/freenode/ip.84.244.189.110)
[11:57:39] *** Parts: zerobaud (54f4bd6e@gateway/web/freenode/ip.84.244.189.110) ()
[11:57:51] *** Quits: Ridout (~coffee@unaffiliated/ridout) (Ping timeout: 240 seconds)
[11:58:11] *** Quits: gblfxt (~gblfxt@2620:15c:17:3:4760:afa8:9356:6432) (Ping timeout: 276 seconds)
[11:58:23] *** Quits: ssbr (~scorchsab@python/site-packages/ssbr) (Ping timeout: 265 seconds)
[11:58:49] *** Quits: subho (~subho@fedora/subho) (Quit: laptop going to sleep. ZZZzzz…)
[11:59:56] *** Quits: jjulian (~jjulian@i5DB50875.pool.tripleplugandplay.com) (Remote host closed the connection)
[12:00:32] *** Joins: gblfxt (~gblfxt@104.132.51.81)
[12:01:35] *** Quits: davr0s (~textual@host86-138-235-28.range86-138.btcentralplus.com) (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
[12:02:01] *** Quits: encod3 (~encod3@89.20.162.146.static.ef-service.nl) (Ping timeout: 256 seconds)
[12:02:10] *** Quits: twandy (~Thunderbi@cas-fw-sta.inet.casair.net) (Ping timeout: 264 seconds)
[12:03:20] *** Joins: jjulian (~jjulian@i5DB50875.pool.tripleplugandplay.com)
[12:03:36] *** Quits: kurkale6ka (~kurkale6k@62.232.85.2) (Ping timeout: 256 seconds)
[12:03:46] <RefractiveIndex> Thanks odinsbane cdunklau and Falc. Didn't notice the 2,p there of the obvious logic that a prime no is divisible by only 1 and itself with the primary condition not even needing a check.
[12:03:58] <RefractiveIndex> I always rush. I dunno why
[12:04:26] *** Joins: beerdrop (~beerdrop@c-107-2-115-62.hsd1.mn.comcast.net)
[12:04:40] *** Joins: Miezel (~Miezel@65-120-11-130.dia.static.qwest.net)
[12:04:40] *** Quits: GucciBandana (~GucciBand@78-57-205-76.static.zebra.lt) (Ping timeout: 265 seconds)
[12:05:12] *** Joins: Metallkd (~Metallkd@h59.112.232.68.dynamic.ip.windstream.net)
[12:05:16] *** Joins: GucciBandana (~GucciBand@78-57-205-76.static.zebra.lt)
[12:05:18] *** Joins: nighty- (~nighty@s229123.ppp.asahi-net.or.jp)
[12:05:46] *** Quits: WeiJunLi (~weijunli@154.0.74.220) (Ping timeout: 264 seconds)
[12:06:10] *** Joins: sunil_bansal (~sunil_ban@123.63.30.29)
[12:06:31] <Kiril> cdunklau: bjs https://paste.pound-python.org/show/CSV4bXGLOHHej8lDRPxQ/
[12:06:33] *** Joins: GenteelBen (GenteelBen@cpc129112-lutn14-2-0-cust66.know.cable.virginm.net)
[12:06:57] *** Quits: xsteadfastx (~marv@dslb-188-096-176-016.188.096.pools.vodafone-ip.de) (Ping timeout: 240 seconds)
[12:06:58] *** Joins: AnySomebody (~AnySomebo@192.129.2.104)
[12:07:18] *** Joins: xsteadfastx (~marv@dslb-188-096-229-137.188.096.pools.vodafone-ip.de)
[12:07:21] *** Quits: Metallkd (~Metallkd@h59.112.232.68.dynamic.ip.windstream.net) (Client Quit)
[12:08:00] <Wooble> RefractiveIndex: btw, pythontutor.com lets you share your code and the debugger stuff at any step in a really nice form. Plus you can step forward and backward.
[12:08:05] *** Quits: xcm (~xcm@ipa210.225.tellas.gr) (Ping timeout: 240 seconds)
[12:08:07] *** Joins: Metallkd (~Metallkd@h59.112.232.68.dynamic.ip.windstream.net)
[12:08:14] *** Joins: sketchman2017_ (3eb75326@gateway/web/freenode/ip.62.183.83.38)
[12:08:27] *** Quits: uttam (~uttam@103.238.192.151) (Quit: uttam)
[12:08:53] *** Quits: ycon_ (~ycon_@202-172-111-51-cpe.spintel.net.au) (Read error: Connection reset by peer)
[12:08:55] *** Quits: Isotop7 (d96ef072@gateway/web/freenode/ip.217.110.240.114) (Ping timeout: 260 seconds)
[12:08:58] *** Joins: seajay (~seajay@gw.1m-01.mel.nexcess.net)
[12:09:01] *** Joins: cerealguy (uid86634@gateway/web/irccloud.com/x-sjfwwyyeryclkxjs)
[12:09:03] <BeforeClick> Kiril:       print colored('Port:', 'yellow'), + colored(str(port) + ' OPEN.)' try without the ' at the end
[12:09:05] *** Quits: arkaros (~arkaros@h-56-4.A137.corp.bahnhof.se) (Ping timeout: 248 seconds)
[12:09:06] <RefractiveIndex> Seems nice Wooble. Thanks
[12:09:07] *** Joins: ycon_ (~ycon_@202.172.111.51)
[12:09:19] *** Joins: twandy (~Thunderbi@cas-fw-sta.inet.casair.net)
[12:09:36] <BeforeClick> Kiril: well swap ) and '
[12:09:43] *** Joins: IanLiu (~IanLiu@189-69-38-63.dsl.telesp.net.br)
[12:10:01] *** Joins: Fulgen (~Fulgen@46.124.73.152)
[12:10:30] *** Joins: Haudegen (~quassel@212-186-77-29.static.upcbusiness.at)
[12:10:37] *** Joins: kalipso (~kalipso@we0114.dip.tu-dresden.de)
[12:10:38] *** Quits: sketchman2017_ (3eb75326@gateway/web/freenode/ip.62.183.83.38) (Client Quit)
[12:11:00] *** Quits: mcsontos (mcsontos@nat/redhat/x-nnosrtgbmiohzvye) (Quit: Leaving)
[12:11:14] <Kiril> so .. print colored('Port:', 'yellow'), + colored(str(port) + ' OPEN.
[12:11:17] *** Quits: TheManWithNoSock (~paige@71-80-66-240.dhcp.kgpt.tn.charter.com) (Ping timeout: 276 seconds)
[12:11:17] *** Quits: xsteadfastx (~marv@dslb-188-096-229-137.188.096.pools.vodafone-ip.de) (Client Quit)
[12:11:33] <Wooble> Kiril: remove the +.
[12:11:38] *** Quits: gloomy (~Gloomy@ip-81-11-163-53.dsl.scarlet.be) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[12:12:02] <Wooble> (the first one, it's trying to do the same thing as the ,)
[12:12:14] *** Joins: xsteadfastx (~marv@dslb-188-096-229-137.188.096.pools.vodafone-ip.de)
[12:12:20] *** Joins: ssbr (~scorchsab@python/site-packages/ssbr)
[12:12:49] *** Quits: Metallkd (~Metallkd@h59.112.232.68.dynamic.ip.windstream.net) (Ping timeout: 248 seconds)
[12:13:44] <Wooble> Kiril: err... also move the ). Depending on what you actually wanted to display.
[12:13:44] *** Quits: beerdrop (~beerdrop@c-107-2-115-62.hsd1.mn.comcast.net) (Ping timeout: 268 seconds)
[12:14:24] <Kiril> my goal is showing Port: (in yellow) and the rest output in green
[12:14:34] *** Joins: sparrowsword_ (49be6e08@gateway/web/freenode/ip.73.190.110.8)
[12:14:42] <sparrowsword_> how do i get the span title out of this url? i can get the text from the element below, but i want the span title, because it is more accurate, and not rounded to the nearest 100... http://services.runescape.com/m=itemdb_oldschool/Runescape/viewitem?obj=8
[12:14:54] <sparrowsword_> looking for the xpath
[12:15:03] *** Joins: o_lalertom (~o_lalerto@moonstonemedical/developer/o-lalertom)
[12:15:17] <sparrowsword_> the code... https://paste.pound-python.org/show/jrxoStZusujshFFlc9tK/
[12:15:25] <Wooble> Kiril: probably  print colored('Port:', 'yellow'), colored(str(port) + ' OPEN.', 'green')
[12:16:17] *** Joins: arkaros (~arkaros@h-56-4.A137.corp.bahnhof.se)
[12:16:41] *** Joins: tiwula (~lane@184.170.76.198)
[12:16:58] <Wooble> Kiril: (also, probably use the subprocess module instead of os.system; your current code spawns a ton on unnecessary shells.)
[12:17:06] <Wooble> of*
[12:17:12] <Kiril> or .. if I have more than 3 different outputs in a same row how I can separete them in 3 different colors.
[12:17:34] *** Joins: wondiws (d57e4e6a@gateway/web/cgi-irc/kiwiirc.com/ip.213.126.78.106)
[12:17:45] *** Quits: edne (~edne@net-2-42-74-190.cust.vodafonedsl.it) (Ping timeout: 245 seconds)
[12:18:30] *** Joins: kurkale6ka (~kurkale6k@62.232.85.2)
[12:18:59] <wondiws> is it possible to do something like a = [b + c for b in range(1,10) and c in range(1,10)] ?
[12:19:27] *** Quits: lorddaedra (~lorddaedr@185.94.189.188) (Ping timeout: 240 seconds)
[12:19:29] *** Parts: kalipso (~kalipso@we0114.dip.tu-dresden.de) ("WeeChat 2.1")
[12:19:57] <Wooble> Kiril: I'd use string formatting instead of what you're doing:  print '{} {} {}'.format(colored('text', 'color'), colored('text', 'second color'), colored('text', 'third_color'))
[12:19:58] *** Joins: lorddaedra (~lorddaedr@78.157.211.238)
[12:20:05] <izabera> wondiws: s/and/for/
[12:20:24] *** Quits: s14ve (~s14ve@80.188.244.110) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[12:21:20] *** Joins: xcm (~xcm@ipa210.225.tellas.gr)
[12:22:02] *** Joins: jellyb (~h.novak@unaffiliated/jellyb)
[12:22:13] *** Quits: jjulian (~jjulian@i5DB50875.pool.tripleplugandplay.com) (Remote host closed the connection)
[12:22:26] *** Quits: BeforeClick (a5e148ed@gateway/web/freenode/ip.165.225.72.237) (Quit: Page closed)
[12:22:29] <Wooble> wondiws: [a+b for a,b in itertools.product(range(1, 10), repeat=2)]
[12:22:58] <wondiws> Wooble: is it possible to do something like a = [b + c for b in range(1,10) and c in range(1,20)] ?
[12:22:59] <wondiws> :P
[12:23:13] <Wooble> wondiws: [a+b for a,b in itertools.product(range(1, 10), range(1,20)]
[12:23:25] <meriipu> I am so confused right now
[12:23:25] <izabera> a = [b + c for b in range(1,10) for c in range(1,20)]
[12:23:42] <Wooble> err, close the outer ) too :)
[12:23:44] *** Joins: m1n (~m1n@unaffiliated/m1ntfr3sh)
[12:23:51] <wondiws> izabera: yes, that I could figure out myself ;)
[12:23:54] <Wooble> wondiws: [a+b for a,b in itertools.product(range(1, 10), range(1,20))]
[12:23:58] *** Joins: giaco (~giaco@host122-168-static.184-194-b.business.telecomitalia.it)
[12:24:14] *** Quits: thedarkcoder (~Adium@111.93.143.70) (Quit: Leaving.)
[12:24:15] *** Parts: _Timon (~Timon@arch.rtor.nl) ()
[12:24:22] *** Quits: stardust85 (~ms580j@144.160.226.92) (Ping timeout: 264 seconds)
[12:24:48] <cdunklau> wondiws: what result do you want
[12:25:08] <wondiws> cdunklau, never mind, I know enough for the moment ;)
[12:25:25] <Wooble> wondiws: note that in the nested comprehension, the outer loop is the first thing, and the inner the second, which can seem counterintuitive.
[12:26:06] <Kiril> Wooble: all is fine but seems I can not use this approach :)
[12:26:27] <cdunklau> wondiws: because there are two ways i could interpret that. one that gives you a list of nine elements, and another that gives you a list of 9*19 elements
[12:26:27] *** Joins: beerdrop (~beerdrop@c-107-2-115-62.hsd1.mn.comcast.net)
[12:26:27] *** Quits: LambaInsaan (~lambainsa@115.249.71.2) (Ping timeout: 240 seconds)
[12:26:47] <Kiril> ImportError: No module named termcolor
[12:27:01] <Kiril> and I can not install this package
[12:27:16] <Wooble> Kiril: where did you get the idea to use it, if you don't have it or a way to install it? :/
[12:27:37] <lermain> I've got a numpy array that looks like this, https://paste.teknik.io/bK5Pt
[12:28:05] <cdunklau> lermain: shouldn't that be a pandas DataFrame instead
[12:28:13] <lermain> it shouldn't be a list in the first place, but anyway, how do I save this to a file so that I can later on import it into another program
[12:28:29] <Wooble> Kiril: (it seems like quite a dead project; you might be looking for colorama)
[12:28:35] <lermain> cdunklau: yeah, that was a mistake on my part, but I have to deal with this for now
[12:28:41] <Kiril> Wooble: reading this: https://pypi.org/project/colorama/
[12:28:58] *** Joins: patdaburu (~patdaburu@24-177-166-2.dhcp.mrqt.mi.charter.com)
[12:29:20] <cdunklau> lermain: probably numpy.savetxt / numpy.loadtxt
[12:29:43] <lermain> np.savetxt returns, Mismatch between array dtype ('object') and format specifier ('%.18e %.18e %.18e %.18e %.18e %.18e %.18e %.18e %.18e')
[12:29:45] *** Joins: subho (~subho@fedora/subho)
[12:29:54] <cdunklau> oh lawd
[12:29:56] <lermain> hmm, I've not specified the format
[12:30:02] *** Joins: maiz (~maiz@197.201.143.194)
[12:30:03] *** Quits: maiz (~maiz@197.201.143.194) (Max SendQ exceeded)
[12:30:06] <cdunklau> lermain: dtype object
[12:30:32] <odinsbane> lermain: I use np.savez_compressed
[12:30:57] <cdunklau> lermain: maybe just json.dump()  the thing you get back from list(list(inner) for inner in thearr)
[12:31:29] *** Quits: alem0lars (~alem0lars@host208-243-dynamic.37-79-r.retail.telecomitalia.it) (Ping timeout: 248 seconds)
[12:31:39] * Wooble just noticed that the py3.7 what's new promises "Python 4.0" will be a thing and it already has a specific feature.
[12:31:41] *** Quits: max_m (~max_m@gateway/tor-sasl/maxm/x-47377621) (Ping timeout: 250 seconds)
[12:32:11] <lermain> cdunklau: aye
[12:32:14] *** Quits: GucciBandana (~GucciBand@78-57-205-76.static.zebra.lt) (Ping timeout: 268 seconds)
[12:32:16] <Wooble> (postponed annotation evaluation without a __future__ import.)
[12:32:17] <lermain> odinsbane: that works too!
[12:32:18] <lermain> thanks both
[12:32:36] <ikanobori> Wooble: I thought forward evaluation is already 3.7?
[12:32:36] <ChrisWarrick> oh, hello
[12:32:37] *** Joins: GucciBandana (~GucciBand@78-57-205-76.static.zebra.lt)
[12:32:39] *** Quits: sunil_bansal (~sunil_ban@123.63.30.29) (Remote host closed the connection)
[12:32:45] <Wooble> ikanobori: you need the future import.
[12:32:49] <ikanobori> (or was that forward definition)
[12:32:50] <ChrisWarrick> I thought __future__ wouldn’t come back for quite a long time
[12:34:29] *** Joins: s14ve (~s14ve@80.188.244.110)
[12:34:30] <Falc> hoo boy, better start thinking a bit harder about getting away from 2.7
[12:34:43] <Kiril> Wooble: if I want to use ANSI
[12:34:59] <Wooble> Kiril: what happens when you try to install it?
[12:35:10] *** Quits: Fulgen (~Fulgen@46.124.73.152) (Read error: Connection reset by peer)
[12:35:55] *** Joins: sunil_bansal (~sunil_ban@123.63.30.29)
[12:36:23] *** Joins: edne (~edne@net-2-42-74-190.cust.vodafonedsl.it)
[12:36:45] <Kiril> Wooble: I know how to install it just it's forbidden.
[12:37:26] <Wooble> Kiril: it's 173 lines, just put it in your source file :P
[12:38:10] *** Quits: kajo (~kajo@2001:4c50:371d:8400:ca2a:14ff:fe0f:7dd1) (Ping timeout: 256 seconds)
[12:38:28] *** Quits: Spaaaaaaaaaaaace (~Spaaaaaaa@unaffiliated/spaaaaaaaaaaaace) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[12:38:56] <Falc> "More than 255 arguments can now be passed to a function" <= I don't want to write that function. Nope. No way.
[12:39:16] <Wooble> Falc: hopefully it was using *args
[12:40:11] *** Quits: Syzygy (~Syzygy@2001:850:40bc:8000:14fc:2f74:e609:da9a) (Ping timeout: 255 seconds)
[12:40:24] *** Joins: esp32_prog (~esp32_pro@178.18.54.206)
[12:40:44] <Falc> Hopefully :-) (I mean, the bug behind it points to a very old django page)
[12:41:17] *** Joins: stardust85 (~ms580j@144.160.226.94)
[12:41:34] *** Joins: kyrix (~ashwoods@185.144.162.58)
[12:41:35] <cdunklau> yep. url patterns
[12:41:36] *** Joins: ironfroggy (~ironfrogg@python/site-packages/ironfroggy)
[12:41:36] *** Joins: jb1123 (~Thunderbi@2a02:a03f:5230:2400:25a9:5be1:8be7:d72a)
[12:41:37] *** Quits: lompik (~lompik@unaffiliated/lompik) (Ping timeout: 248 seconds)
[12:41:41] *** Joins: RickDeckard (~tgburrin@108.60.152.194)
[12:41:42] <sparrowsword_> anyone?
[12:42:18] <cdunklau> modern django (2.0+ i think?) made the view registration api substantially less crappy
[12:42:43] <Wooble> Probably when you get to 255 url patterns you should start considering microservices.
[12:42:46] *** Joins: kingarmadillo (~kingarmad@38.104.254.34)
[12:43:32] *** Joins: musicnate (~Thunderbi@CPEac202e24c153-CMac202e24c150.cpe.net.fido.ca)
[12:44:13] *** Joins: LambaInsaan (~lambainsa@115.249.71.2)
[12:44:18] <Falc> That does start to sound like you're implementing http://kitchen.sink
[12:46:57] *** Quits: RickDeckard (~tgburrin@108.60.152.194) (Ping timeout: 240 seconds)
[12:47:18] *** Quits: hetii (~hetii@89-74-255-90.dynamic.chello.pl) (Quit: Wychodzi)
[12:47:30] *** Quits: emerson (emerson@freenode/staff/emerson) (Quit: leaving)
[12:48:10] *** Joins: RickDeckard (~tgburrin@152.179.78.138)
[12:48:32] *** Joins: alish (~AliSh@185.180.15.204)
[12:50:11] *** Joins: schneider (~schneider@unaffiliated/schneider)
[12:50:34] <alish> hi, is it good to organize codes with classes in python? My current project is whole mess with dictionaries and key access. I want to model them to have all access in my model. is there any performance issue with modeling?(I know about __slots__ and going to use it. ---- or should I should use simple function to use every where to get desired item from dict?
[12:50:43] *** Joins: Raed|Laptop (~Raed@2601:18c:8600:9be:3452:83e3:1ee5:7f71)
[12:50:55] <alish> dictionaries are data from client or data from mongodb
[12:51:12] *** Quits: volition (volition@gateway/vpn/privateinternetaccess/volition) (Ping timeout: 256 seconds)
[12:51:14] <alish> client requests to my webservices
[12:51:31] <alish> and sockets
[12:52:05] <ChrisWarrick> There are no performance issues with using classes. You don’t need __slots__, that’s premature optimization.
[12:52:21] *** Quits: mipesom (~mipesom@p200300E6EBF1DD0039776FD8D2F00CE4.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[12:52:29] *** Quits: contingo (~textual@cpc82355-lewi18-2-0-cust128.2-4.cable.virginm.net) (Quit: My supercomputing cluster has gone to sleep. ZZZzzz…)
[12:52:50] <gehn> alish, it's not good to organize code with classes in any language IMO :)
[12:52:57] <gehn> including C++
[12:53:42] <alish> ChrisWarrick, thanks, but about __slots__, there's benchmarks and profiles that shows classes with __slots__ use lesser memory
[12:53:43] <gehn> alish, I would begin by splitting your code into smaller functions, and also organizing those functions into modules
[12:53:46] <megagarbage> methinks you can write bad code in any paradigm if you try hard enough
[12:53:46] <alish> gehn, :D
[12:53:52] *** Quits: twandy (~Thunderbi@cas-fw-sta.inet.casair.net) (Quit: twandy)
[12:53:59] *** Joins: fmgt (~Marcelo@189.16.19.82)
[12:54:07] <gehn> from a purely "organizational" standpoint, that's what you should do
[12:54:09] <ChrisWarrick> alish: they do, but you probably won’t need it
[12:54:22] <gehn> whether classes are a good fit for your requirements is a different concern
[12:54:24] <alish> gehn, I know about multiple paradigm with python. but sometimes it better to have models classes
[12:54:35] *** Quits: edne (~edne@net-2-42-74-190.cust.vodafonedsl.it) (Ping timeout: 260 seconds)
[12:54:37] <gehn> I wouldn't try to "use classes to organize code", that's not the right use of classes
[12:54:39] <gehn> though arguably there is no right use of classes :P
[12:54:42] *** Joins: mipesom (~mipesom@p200300E6EBF1DD0039776FD8D2F00CE4.dip0.t-ipconnect.de)
[12:54:44] *** Quits: lumm (~lumm@nem77-1-82-240-251-72.fbx.proxad.net) (Quit: lumm)
[12:54:48] <alish> megagarbage, i seen such guys :D :D
[12:54:49] *** Joins: hiratara (~hiratara@240f:3f:f4a4:1:1141:a033:848f:499b)
[12:54:55] <ChrisWarrick> alish: that said: you’re using classes, and good classes have a static list of fields (in fact, that’s mandatory with __slots__) — why are you not using a reasonable sql database that would work much better than mongodb?
[12:55:06] *** Quits: luizdepra (~luizdepra@2001:1284:f013:4e57:25de:193e:dab3:f1a6) (Remote host closed the connection)
[12:55:09] <megagarbage> alish: i've been such guys ;)
[12:55:17] *** Joins: lumm (~lumm@nem77-1-82-240-251-72.fbx.proxad.net)
[12:56:04] <alish> ChrisWarrick, this project is working for a year and i can't change it, it's hard to sync to new database and also server is live and users paying on that
[12:56:08] *** Joins: gloomy (~Gloomy@ip-81-11-163-53.dsl.scarlet.be)
[12:56:14] *** Joins: scruz (293a6aa4@gateway/web/thelounge/ip.41.58.106.164)
[12:56:30] <alish> megagarbage, I have advice, --------------------------------- please don't be :D
[12:56:54] *** Quits: s14ve (~s14ve@80.188.244.110) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[12:57:08] <Wooble> "don't write bad code" is hard advice to follow unless you don't write any code at all. :P
[12:57:15] <alish> I'm new to project. Dev teams are good at business but not in technical manner.
[12:57:26] *** Quits: }ls{ (~kalle@unaffiliated/ls/x-8089558) (Quit: real life interrupt)
[12:57:27] <ChrisWarrick> alish: you’re going to rewrite the entire codebase, might as well fix the database and use an ORM
[12:57:30] <alish> Wooble, :))))))
[12:58:03] <meriipu> say I have a class with 4 variables and 10 methods, and the variables are different across instances but the methods are all the same. With a few thousand instances Is python clever enough with memory usage to share the methods between instances if they are identical?
[12:58:35] <Wooble> meriipu: methods are always called on the class
[12:58:36] <Falc> meriipu: yes, methods are stored in the class
[12:58:41] *** Quits: inad922 (~inad925@outbound.hortonworks.com) (Ping timeout: 248 seconds)
[12:58:42] <alish> ChrisWarrick, Cleaning code isn't writing from scratch. I'm going to use Clean Code on project. Might change something but can't risk too much. just cleaning it and using models for now. but have in mind to change Architecture.
[12:58:48] *** Quits: beerdrop (~beerdrop@c-107-2-115-62.hsd1.mn.comcast.net) (Ping timeout: 265 seconds)
[12:59:00] *** Quits: ycon_ (~ycon_@202.172.111.51) (Remote host closed the connection)
[12:59:14] *** Joins: halprin (~halprin@c-174-52-113-17.hsd1.ut.comcast.net)
[12:59:32] *** Joins: edne (~edne@net-2-42-74-190.cust.vodafonedsl.it)
[12:59:38] *** Joins: ycon_ (~ycon_@202.172.111.51)
[12:59:43] *** Quits: esp32_prog (~esp32_pro@178.18.54.206) (Read error: Connection reset by peer)
[12:59:46] *** Joins: andylavarre (~andy@mobile-107-107-57-71.mycingular.net)
[13:00:03] *** Joins: adamholmberg (~adamholmb@104.218.66.173)
[13:00:28] <Falc> meriipu: (although, just fyi, variables that are "different across instances" are called 'attributes' in the python vocabulary)
[13:00:36] *** Joins: alxy (uid115853@gateway/web/irccloud.com/x-ztviqgrqwowywehe)
[13:00:57] *** Quits: halprin (~halprin@c-174-52-113-17.hsd1.ut.comcast.net) (Read error: Connection reset by peer)
[13:01:33] <ChrisWarrick> alish: you’re going to change a million foo['bar'] references to foo.bar.
[13:01:41] *** Joins: luizdepra (~luizdepra@2001:1284:f013:4e57:8ca0:e570:4255:9ddd)
[13:01:52] <alish> yes
[13:02:19] <alish> not million but may 50 that grows with company grow
[13:02:29] *** Joins: s14ve (~s14ve@80.188.244.110)
[13:02:37] <meriipu> Falc: I see, thanks. I was concerned about including methods in a class that is instantiated a lot as opposed to leaving it defined elsewhere (even if it is very related to the class).
[13:02:39] *** Joins: halprin (~halprin@c-174-52-113-17.hsd1.ut.comcast.net)
[13:03:13] *** Joins: Siecje (~Cody@otwaon0147w-lp130-02-70-48-255-232.dsl.bell.ca)
[13:03:18] *** Quits: subho (~subho@fedora/subho) (Quit: laptop going to sleep. ZZZzzz…)
[13:03:27] *** Joins: __charly__ (~charly@104-184-3-192.lightspeed.austtx.sbcglobal.net)
[13:03:32] *** Joins: bmurt (~hmm@65.78.58.150)
[13:03:55] *** Quits: ycon_ (~ycon_@202.172.111.51) (Ping timeout: 260 seconds)
[13:03:57] *** Joins: [itchyjunk] (~itchyjunk@unaffiliated/itchyjunk/x-1640057)
[13:04:16] *** Quits: kushalAgrawal (uid279683@gateway/web/irccloud.com/x-cgowgooutvngmxrc) (Quit: Connection closed for inactivity)
[13:04:25] *** Joins: walnut_burl (~oak@104.129.28.162)
[13:05:13] *** Joins: ycon_ (~ycon_@202-172-111-51-cpe.spintel.net.au)
[13:05:24] *** Quits: alish (~AliSh@185.180.15.204) (Quit: Leaving)
[13:06:13] *** Joins: squirrel (~mj@unaffiliated/squirrel)
[13:07:10] *** Joins: rambo123456 (~textual@32.97.110.51)
[13:08:04] *** Quits: sunil_bansal (~sunil_ban@123.63.30.29) (Remote host closed the connection)
[13:08:10] *** Quits: plustwo (~quassel@unaffiliated/plustwo) (Ping timeout: 264 seconds)
[13:09:14] <squirrel> suppose i have a string template = "{a} {b} {c}" and i want to format it, but only evaluate a/b/c if the template contains it. what'd be the best approach to this?
[13:09:32] *** Quits: hjasani_ (uid269869@gateway/web/irccloud.com/x-bgcgspsqnshukcnz) (Quit: Connection closed for inactivity)
[13:09:44] *** Joins: Spaaaaaaaaaaaace (~Spaaaaaaa@unaffiliated/spaaaaaaaaaaaace)
[13:10:18] <Wooble> squirrel: f-strings.
[13:10:23] <Falc> squirrel: I had the same question recently and found a rather good stackoverflow page, hold on as I look through my history
[13:11:35] *** Joins: inad922 (~inad925@78-131-82-48.pool.digikabel.hu)
[13:12:01] *** Joins: amikrop (0255c8c9@gateway/web/freenode/ip.2.85.200.201)
[13:12:06] <AndreasLutro> squirrel: what are a/b/c
[13:12:16] <Falc> squirrel: https://stackoverflow.com/questions/17215400 it's all valid but f-strings didn't exist yet so look at that as well
[13:12:26] *** Joins: beerdrop (~beerdrop@c-107-2-115-62.hsd1.mn.comcast.net)
[13:12:56] *** Quits: Darkhunter (~mmojzis@ip-86-49-120-171.net.upcbroadband.cz) (Ping timeout: 276 seconds)
[13:13:01] *** Joins: plustwo (~quassel@unaffiliated/plustwo)
[13:13:09] *** Joins: cwrbs (~jy@185.9.19.107)
[13:13:15] *** Joins: Mart|n (~Mart|n@79-68-33-46.dynamic.dsl.as9105.com)
[13:13:25] <amikrop> What is now the state of the art way to simply and easily execute a command? delegator.py maybe? or something from the stdlib?
[13:13:26] <squirrel> Falc: i mean, if i get only "{a}", i don't want to evaluate b and c
[13:14:00] <cdunklau> squirrel: why do you care
[13:14:02] <squirrel> AndreasLutro: just some values that might not be necessary to compute
[13:14:26] <Falc> squirrel: ok, sorry, had that backwards...
[13:14:43] *** Joins: dendazen (~dendazen@128.177.29.242)
[13:14:50] *** Joins: negev (~mark@static.175.66.9.5.clients.your-server.de)
[13:15:15] *** Quits: pawle (~Thunderbi@public-gprs370234.centertel.pl) (Ping timeout: 245 seconds)
[13:15:26] <squirrel> cdunklau: not to evaluating unneeded stuff sounds like good design
[13:15:53] <nedbat> squirrel: can we assume that when you say "a", that's a placeholder for a potentially expensive computation?
[13:16:00] <squirrel> yes
[13:16:07] *** Joins: iAmerikan (~dwshrewt@unaffiliated/iamerikan)
[13:16:20] <cdunklau> squirrel: sure if it's actually going to impact performance significantly
[13:16:34] <Falc> squirrel: ... the only way I can think of is to actually parse the template string
[13:17:07] <gehn> amikrop, do you mean something like this https://docs.python.org/3/library/subprocess.html ?
[13:17:24] <nedbat> squirrel: do you have some actual code we could look at?
[13:17:26] <cdunklau> squirrel: but doing crazy things to sidestep this isn't worth it unless the computation is significant, and the sidestepping doesn't introduce additional significant performance (or maintenance) hassles
[13:17:39] <amikrop> gehn: sure, but should I prefer the subprocess module or delegator.py (or smth else)?
[13:17:49] <squirrel> best i could think of so far is "a {a}".replace("{", "{0.").format(object)
[13:17:57] *** Quits: cdown (~cdown@199.201.66.5) (Ping timeout: 256 seconds)
[13:18:06] <sparrowsword_> using asyncio... how do i get the status code? or make line 23 work? https://paste.pound-python.org/show/1lzgGKNAll0GkgDr2U2s/
[13:18:18] <squirrel> nedbat: nope just thinking about how it might be done
[13:18:21] *** Quits: __charly__ (~charly@104-184-3-192.lightspeed.austtx.sbcglobal.net) (Quit: ZZZ)
[13:18:25] *** Quits: lankanmon (~LKNnet@CPE64777d632383-CM64777d632380.cpe.net.cable.rogers.com) (Ping timeout: 248 seconds)
[13:18:31] <Falc> squirrel: or or... '{a.value}'.format(a) should, if value is a @property, allow you to delay eval
[13:18:33] <negev> hi, i'm getting 'sslv3 alert bad record mac' when connecting to api.github.com on a newly deployed machine. another machine with the exact same python and pip package versions works fine
[13:18:42] *** Quits: knstn (~Thunderbi@2a02:587:a405:f00:2b32:dcdb:c017:e3f7) (Quit: knstn)
[13:18:48] <cdunklau> sparrowsword_: can't
[13:18:58] <nedbat> squirrel: you can get the names from a format string: https://stackoverflow.com/a/22830468/14343
[13:19:05] <sparrowsword_> cdunklau: what....why
[13:19:18] <tech2> sparrowsword_: You realise this wouldn't do things in parallel, right?
[13:19:20] <cdunklau> sparrowsword_: because that's an attribute on the response, which you don't return from fetch
[13:19:29] <ChrisWarrick> negev: looks like an outdated ssl library.  is the OS of the new box fully up-to-date?
[13:19:37] <sparrowsword_> tech2: y not?
[13:19:40] <Wooble> amikrop: delegator seems like it has some nice features, but I'd never ever heard of it until now. For most use cases I can't really see it as necessary.
[13:19:43] <cdunklau> sparrowsword_: you could do something like `		return await response.read()
[13:19:45] <cdunklau> err
[13:19:59] <sparrowsword_> cdunklau: line 16
[13:20:00] <amikrop> alright, thanks
[13:20:06] <cdunklau> sparrowsword_: you could do something like `return response.status, (await response.read())`
[13:20:15] <squirrel> nedbat: i suppose subclassing Formatter is an option
[13:20:16] *** Quits: inad922 (~inad925@78-131-82-48.pool.digikabel.hu) (Ping timeout: 260 seconds)
[13:20:24] <cdunklau> sparrowsword_: that returns the response's *content*
[13:20:36] *** Joins: fission6 (~textual@static-173-56-120-142.nycmny.fios.verizon.net)
[13:20:39] <Wooble> amikrop: if you actually need the pexpect features it wraps, it's probably nicer than using pexpect directly, anyway.
[13:20:41] <tech2> sparrowsword_: Because you're looping over the filenames in a single function, you're not creating new awaitables on the eventloop
[13:20:46] <sparrowsword_> cdunklau: how do i only return content if its not a 404?
[13:20:47] *** Quits: Spaaaaaaaaaaaace (~Spaaaaaaa@unaffiliated/spaaaaaaaaaaaace) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[13:20:49] *** Joins: lankanmon (~LKNnet@CPE64777d632383-CM64777d632380.cpe.net.cable.rogers.com)
[13:20:53] <amikrop> Wooble: ok thanks
[13:20:54] <cdunklau> sparrowsword_: check it in fetch?
[13:21:06] <fission6> can someone help me make sense of this cProfile trying to understand the bottleneck http://dpaste.com/06GDP07
[13:21:12] *** Joins: sqram (~resio@67.149.152.190)
[13:21:31] <sparrowsword_> tech2: so how would i create new awaitables on the event loop?
[13:21:31] *** Joins: pawle (~Thunderbi@public-gprs370234.centertel.pl)
[13:21:48] *** Joins: RMJ (44aa5f6a@gateway/web/freenode/ip.68.170.95.106)
[13:21:48] *** Quits: melissa666 (~melissa66@2601:603:4e00:69a0:8114:d75:8e1c:a6e3) (Quit: Leaving)
[13:21:53] *** Quits: sword865 (uid208942@gateway/web/irccloud.com/x-blygwkhaczqftsfn) (Quit: Connection closed for inactivity)
[13:21:58] <AndroidKitKat> I'm sure this is possible, but how do I point python to import a module from a different folder than its current one?
[13:22:00] <tech2> fission6: It might be more readable if youused something like line_profiler instead
[13:22:01] *** Joins: CoolerY (~coolerext@61.3.247.89)
[13:22:06] <sparrowsword_> cdunklau: and that would look like?
[13:22:11] <fission6> tech2 how do i do that
[13:22:12] <AndroidKitKat> `from python/file import module`?
[13:22:14] <CoolerY> why is python -m http.server serving .js files are plain?
[13:22:17] <negev> ChrisWarrick: yes it is
[13:22:59] <RMJ> How can I save a signed float array as an image? To be more elaborate, I read an image convert  it to array, do some image processing on it which generates negative numbers. Afterr the processing, I am not able to save the array back to image format as it has signed float values. Any help is appreciated
[13:23:05] <CoolerY> is it because i set the type to module in <script type="module" src="/js/foo.js"></script>
[13:23:20] <fission6> tech2 https://github.com/rkern/line_profiler?
[13:23:24] *** Quits: amikrop (0255c8c9@gateway/web/freenode/ip.2.85.200.201) (Quit: Page closed)
[13:23:26] *** Joins: pyn (~pyn@dornkirk.twistedmatrix.com)
[13:23:37] *** Quits: stefanc_diff (~stefanc_d@193.105.212.250) (Ping timeout: 256 seconds)
[13:23:38] <CoolerY> help
[13:23:42] <NoImNotNineVolt> RMJ: that's fun!
[13:23:43] <RMJ> Read a jpg image, preprocess it, save it back as jpg with the same signed float with precision
[13:23:45] <tech2> sparrowsword_: http://skipperkongen.dk/2016/09/09/easy-parallel-http-requests-with-python-and-asyncio/ for example
[13:23:51] <tech2> fission6: yes
[13:24:00] <fission6> ok will play thanks!
[13:24:13] <NoImNotNineVolt> RMJ: presumably you're working with an image library that handles all the jpg encoding/decoding for you
[13:24:29] <cdunklau> sparrowsword_: if response.status ...:
[13:24:55] *** Quits: ExtraCrispy (~ExtraCris@185.9.18.150) (Remote host closed the connection)
[13:25:18] <sparrowsword_> cdunklau: where? says its undefined cause im not calling it from fetch, when i put it under the source = lines, sorry... really new to asyncio
[13:25:23] *** Joins: chachan (~chachan@168.232.28.50)
[13:25:25] <CoolerY> what happened to the python experts here
[13:25:48] <NoImNotNineVolt> RMJ: [max(0.0, x) for x in your_pixel_array] # will clamp negative values to 0.0
[13:25:53] *** Quits: s14ve (~s14ve@80.188.244.110) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[13:26:03] <tech2> CoolerY: Why would it magically know what the mime type is? It's a _very_ basic http server
[13:26:09] *** Joins: GraysonBriggs (~GraysonBr@206-51-126-226.up.net)
[13:26:19] <sparrowsword_> tech2: so i need my_list generator in the main loop
[13:26:36] <NoImNotNineVolt> RMJ: but presumably you have multiple color channels in you output image... have you considered how to false-color things, or is that what your original question is?
[13:26:36] <CoolerY> tech2 from the frcking extension
[13:26:43] *** Quits: Draecos (~Draecos@203.121.220.138) (Quit: This computer has gone to sleep)
[13:26:45] *** Joins: Mat001 (~Mat001@c-71-202-209-15.hsd1.ca.comcast.net)
[13:26:55] <tech2> CoolerY: extensions are just a few characters in a filename, they're meaningless.
[13:27:03] <cdunklau> tech2: that article is misleading at best
[13:27:03] <CoolerY> its not a uncommon file extension, .js .css .html etc are very common
[13:27:32] <tech2> cdunklau: re: performance?
[13:27:33] <NoImNotNineVolt> RMJ: for basic false coloring, i recommend working in HSV, leaving S and V at 100%, and mapping your data to H.
[13:27:34] <CoolerY> tech2, you clearly have never used http.server, it always get the right type
[13:27:36] <cdunklau> CoolerY: hey.
[13:27:38] <RMJ> NoImNotNineVolt: Exactly, I tried to use a 3 different library functions to save it, but all rounds upto 0 or throuws me an error. Do you mean to say that I cant?
[13:27:40] <CoolerY> except in this case
[13:27:47] <cdunklau> CoolerY: you need to stop being so hostile. chill out
[13:28:14] <RefractiveIndex> So in this program the list comprehension indeed takes care of which numbers to fetch to transpose the matrix but just by knowing the value of i and j can also move correctly through the matrix without any explixit code?
[13:28:16] <RefractiveIndex> https://paste.pound-python.org/show/78iCsHDsxkeXyFTqy7lx/
[13:28:27] <cdunklau> tech2: it shows basically nothing about how to async stuff
[13:28:40] *** Joins: Darkhunter (~mmojzis@ip-37-188-139-125.eurotel.cz)
[13:28:47] <NoImNotNineVolt> RMJ: i'm not familiar with jpg specifically. i think of images as 2d arrays with 3 or 4 channels.
[13:28:50] *** Quits: v01d4lph4 (~silent_fr@103.201.141.10) (Remote host closed the connection)
[13:28:56] <cdunklau> tech2: it shows how to use a blocking API with concurrent.futures, with some silly asyncio giftwrap :)
[13:29:16] <NoImNotNineVolt> of bytes. not floats.
[13:29:51] *** Joins: s14ve (~s14ve@80.188.244.110)
[13:29:51] *** Quits: hemstock (hemstock@80.244.31.40) (Read error: Connection reset by peer)
[13:29:56] <sparrowsword_> tech2: cdunklau: okay... so y doesnt this work? https://paste.pound-python.org/show/Lx65j7s2fnD6OowOReLZ/
[13:30:02] <odinsbane> CoolerY: what are you doing? You are serving a html file with the http.server and the <script> isn't getting loaded?
[13:30:06] *** Quits: negev (~mark@static.175.66.9.5.clients.your-server.de) (Quit: leaving)
[13:30:10] <NoImNotNineVolt> RGB or RGBA. there are no floats there.
[13:30:19] <cdunklau> sparrowsword_: you don't return from fetch()
[13:30:24] <NoImNotNineVolt> afaik, jpg works the same way.
[13:30:26] *** Joins: toxinu (uid217298@gateway/web/irccloud.com/x-spdgrienqsblhtzk)
[13:30:36] *** Quits: anthepro (~anthepro@unaffiliated/anthepro) (Ping timeout: 255 seconds)
[13:30:45] <sparrowsword_> cdunklau: o, so add return on line 15
[13:30:46] <tech2> cdunklau: fair point. Then sparrowsword_ has my apologies. The earlier comment stands though, their current design will not run concurrently
[13:30:56] <RMJ> NoImNotNineVolt: Yeah RBG  it is but floats
[13:30:57] *** Joins: ironfroggy_ (~ironfrogg@python/site-packages/ironfroggy)
[13:31:05] *** Quits: carl- (~carl-@h-213-136-53-77.NA.cust.bahnhof.se) (Ping timeout: 240 seconds)
[13:31:20] *** ironfroggy_ is now known as Guest22076
[13:31:31] <sparrowsword_> tech2: cdunklau: got it :)
[13:31:40] <sparrowsword_> however... its kinda writing weird....
[13:31:48] <NoImNotNineVolt> that'd be weird. that would make files waaaay bigger. presumably it's just the internal representation used by your image library.
[13:31:54] *** Joins: kajo (~kajo@2a02:908:2f33:d560:8e10:876f:c7a8:294d)
[13:32:02] *** Joins: hemstock (hemstock@80.244.31.40)
[13:32:03] <RMJ> NoImNotNineVolt: I read the image, convert to numpy array, do preprocessing, and now trying to save it back to the same format.
[13:32:05] *** Joins: ralu_ (~ralu@188-230-247-87.dynamic.t-2.net)
[13:32:14] <NoImNotNineVolt> oh.
[13:32:22] <odinsbane> RMJ: did you paste an example?
[13:32:27] *** Joins: takane2 (~tkane@2603:3005:2303:b100:340f:4fbc:80a6:79c3)
[13:32:27] *** Quits: takane2 (~tkane@2603:3005:2303:b100:340f:4fbc:80a6:79c3) (Quit: Leaving.)
[13:32:28] *** Joins: ferdna (~ferdna@68-73-71-246.lightspeed.elpstx.sbcglobal.net)
[13:32:37] <odinsbane> NoImNotNineVolt: it is not so uncommon for images to use float.
[13:32:40] <CoolerY> odinsbane, its getting served as plain
[13:32:43] *** Joins: esp32_prog (~esp32_pro@178.18.54.206)
[13:32:45] <CoolerY> mime type plain
[13:32:50] <CoolerY> content-type
[13:32:52] <tech2> CoolerY: https://github.com/python/cpython/blob/master/Lib/http/server.py#L846 - You're right, it does a mime-type guess. If you fetch the file using something like curl does it not give the correct mimetype? If it does then your browser is likely doing something based on the type specified in the tag.
[13:32:53] *** Parts: esp32_prog (~esp32_pro@178.18.54.206) ()
[13:33:06] *** Joins: inad922 (~inad925@outbound.hortonworks.com)
[13:33:07] *** Quits: pawle (~Thunderbi@public-gprs370234.centertel.pl) (Quit: pawle)
[13:33:11] <odinsbane> CoolerY: how are you determining the mime-type?
[13:33:20] <NoImNotNineVolt> odinsbane: i've never seen that.
[13:33:42] <NoImNotNineVolt> i could see that in compression, sure. but as far as color channel data goes, never seen it.
[13:33:50] *** Quits: ironfroggy (~ironfrogg@python/site-packages/ironfroggy) (Ping timeout: 276 seconds)
[13:33:53] <CoolerY> tech2 nope, curl and browser both get plain
[13:33:56] *** Joins: nixjdm (~nixjdm@2605:a601:1135:a400:a042:d363:85d9:ab70)
[13:33:59] <ralu_> why asyncio.gather requires loop as an argument?
[13:34:02] <NoImNotNineVolt> i've seen channel sizes other than 8 bits, but never floating point data in a color channel.
[13:34:06] <sparrowsword_> cdunklau: tech2: ah, its b/c i didnt use response.json() :D
[13:34:11] <odinsbane> NoImNotNineVolt: They do it, I don't know what to tell you.
[13:34:13] <CoolerY> odinsbane, i am not determining anything, i am just doing python -m http.server
[13:34:16] <Yhg1s> ralu_: how else would it know what loop to use?
[13:34:35] *** Joins: AaronMT (~textual@2607:fea8:3de0:fc7:e0c9:ca49:d64d:adca)
[13:34:37] <NoImNotNineVolt> odinsbane: can you help me with an example image format that does that?
[13:34:41] <odinsbane> CoolerY: yes... and what are you requesting the script with that makes you determin it is being sent "plain"
[13:34:47] <CoolerY> i solved the problem by switching to nodejs
[13:34:56] <odinsbane> NoImNotNineVolt: float32 bit images
[13:35:01] <Yhg1s> ralu_: also, it's not *required*.
[13:35:02] *** Joins: ^Zer0^ (~cupcake@blk-222-197-237.eastlink.ca)
[13:35:04] <CoolerY> node's http-server module at least gets the types right
[13:35:09] <cdunklau> CoolerY: what's this output:   python -c "import mimetype; mimetypes.init(); print(mimetypes.types_map.get('js'), mimetypes.types_map.get('.js'))"
[13:35:12] *** Joins: Syzygy (~Syzygy@2001:850:40bc:8000:14fc:2f74:e609:da9a)
[13:35:31] *** Quits: GucciBandana (~GucciBand@78-57-205-76.static.zebra.lt) (Ping timeout: 256 seconds)
[13:35:36] <cdunklau> oops, that should be "import mimetypes; ...
[13:35:37] <Yhg1s> CoolerY: yes, Python's standard library server modules are crap. Even Guido says not to use them. So, don't use them.
[13:35:57] *** Joins: halfbit (~tburdick@unaffiliated/submersive)
[13:36:21] *** Joins: Anubis^ (dirtydawg@gateway/shell/blinkenshell.org/x-bddnyybmnzjwztfk)
[13:36:25] <CoolerY> well maybe fix them?
[13:36:27] *** Parts: CoolerY (~coolerext@61.3.247.89) ("Leaving")
[13:36:30] *** Quits: Guest22076 (~ironfrogg@python/site-packages/ironfroggy) (Quit: Leaving)
[13:36:31] <NoImNotNineVolt> odinsbane: https://en.wikipedia.org/wiki/Half-precision_floating-point_format interesting!
[13:36:49] *** Joins: anthepro (~anthepro@unaffiliated/anthepro)
[13:36:53] *** Quits: s14ve (~s14ve@80.188.244.110) (Read error: Connection reset by peer)
[13:37:20] <nedbat> i was going to tell CoolerY that even http.server is trying to map mimetypes, so something must be wrong, but oh well.
[13:37:27] <sparrowsword_> cdunklau: how do i ... if response.json() != "None":
[13:37:27] <odinsbane> That isn't necessarily the only one.
[13:37:29] <Wooble> removing them would be better, but all of the web frameworks seem to use them for the dev servers and they'd probably object
[13:37:41] *** Quits: zuQe8 (~zuQe8@cpc104502-sgyl40-2-0-cust50.18-2.cable.virginm.net) (Remote host closed the connection)
[13:37:46] *** Joins: DeaD_EyE (~DeaD_EyE@p5DC6B1CD.dip0.t-ipconnect.de)
[13:37:46] <NoImNotNineVolt> indeed, but i've never come across anything like that.
[13:37:47] *** Quits: edne (~edne@net-2-42-74-190.cust.vodafonedsl.it) (Ping timeout: 256 seconds)
[13:37:51] *** Joins: jackhum (~jackhum@117.225.126.35)
[13:37:53] <NoImNotNineVolt> i've worked mostly with tiff.
[13:38:04] *** Joins: jjulian (~jjulian@i5DB50875.pool.tripleplugandplay.com)
[13:38:19] *** Joins: zuQe8 (~zuQe8@cpc104502-sgyl40-2-0-cust50.18-2.cable.virginm.net)
[13:38:19] <odinsbane> Tiff supports float images fine.
[13:38:21] *** Quits: schneider (~schneider@unaffiliated/schneider) (Quit: WeeChat 2.0.1)
[13:38:29] <tech2> Tiff is an _evil_ container format
[13:38:52] *** Quits: pR0Ps (~pR0Ps@104-222-117-159.cpe.teksavvy.com) (Read error: Connection reset by peer)
[13:39:07] *** Quits: inad922 (~inad925@outbound.hortonworks.com) (Ping timeout: 256 seconds)
[13:39:32] <odinsbane> Tiff is great, it saves just about any image type compressed or not with meta data. What is better?
[13:39:42] <NoImNotNineVolt> the most basic of tiff files, then :P
[13:39:48] *** Joins: chachan_ (~chachan@192.241.217.19)
[13:40:03] *** Joins: s14ve (~s14ve@80.188.244.110)
[13:40:17] <sparrowsword_> cdunklau: tech2: keep getting files with "None" how do i not?
[13:40:36] <tech2> odinsbane: Having something people actually documented the internals of? :)
[13:40:43] <RMJ> NoImNotNineVolt: Thanks ...will dig deep.... If matlab can do it,. python should also be able to do it.
[13:40:47] <sparrowsword_> cdunklau: tech2: current code https://paste.pound-python.org/show/APDTRiVjQ5PgCnsB4IUn/
[13:40:48] <altendky> odinsbane: tiff is 'hey, i am a standard format but it does not matter if you support me you still probably are unable to handle me'
[13:40:57] <odinsbane> RMJ: do you have a code example?
[13:41:01] *** Quits: chachan (~chachan@168.232.28.50) (Remote host closed the connection)
[13:41:23] *** Joins: chachan (~chachan@196.40.47.129)
[13:41:29] *** Joins: GucciBandana (~GucciBand@78-57-205-76.static.zebra.lt)
[13:41:31] *** Joins: pR0Ps (~pR0Ps@104-222-117-159.cpe.teksavvy.com)
[13:41:35] <megagarbage> CoolerY are you able to load es modules in your browser ? e.g does https://bit.ly/2MuaaFL show "modules are pretty cool"
[13:41:38] *** Joins: edrocks (~ed@173.169.31.48)
[13:41:45] <cdunklau> megagarbage: they left
[13:42:00] <nedbat> in fact, when I try "python -m http.server", it serves my .js files with the application/javascript content-type just fine.
[13:42:01] <megagarbage> :(
[13:42:11] <cdunklau> megagarbage: or maybe you were trying to answer in ##javascript
[13:42:25] *** Quits: Danibal (~yourname@159.203.63.40) (Quit: leaving)
[13:42:44] <nedbat> cdunklau: are they asking there also?
[13:42:51] *** Joins: _2cat (~MegaNRGMa@D965BE0F.cm-27.dynamic.ziggo.nl)
[13:42:58] *** dude-xx is now known as dude-x
[13:43:04] <sparrowsword_> using asyncio, how do i not write files that have the value "None" https://paste.pound-python.org/show/APDTRiVjQ5PgCnsB4IUn/ like 162.json
[13:43:07] <cdunklau> nedbat: they did
[13:43:07] <megagarbage> nah im not really a js person just had some exposure to this problem cdunklau
[13:43:11] <RMJ> odinsbane: I can share a sample. How can I share the code? copy and paste?
[13:43:24] <odinsbane> RMJ use the pastebin in the title.
[13:43:28] <cdunklau> megagarbage: i don't think they were interested in solving their problem
[13:43:42] <RefractiveIndex> No one? I want to know does python handle value storage location in the matrix automatically in this case. All list comprehension does is fetching the correct value for the transpose but how about the matrix cell location for storage?
[13:43:43] <RefractiveIndex> https://paste.pound-python.org/show/78iCsHDsxkeXyFTqy7lx/
[13:43:46] *** Quits: RickDeckard (~tgburrin@152.179.78.138) (Ping timeout: 268 seconds)
[13:44:08] <cdunklau> nedbat: it was quite a short conversation :)
[13:44:25] *** Joins: esp32_prog (~esp32_pro@178.18.54.206)
[13:44:34] <nedbat> cdunklau: i guess the nick was just aspirational
[13:45:00] *** Quits: chachan_ (~chachan@192.241.217.19) (Ping timeout: 255 seconds)
[13:45:00] *** Joins: davr0s (~textual@host86-138-235-28.range86-138.btcentralplus.com)
[13:45:06] <cdunklau> sparrowsword_: how do you check if a value is or is not None, and then do something based on that check?
[13:45:09] *** Joins: RickDeckard (~tgburrin@108.60.152.194)
[13:45:21] *** Joins: detseg (~segv@35.128.29.238)
[13:45:41] <sparrowsword_> cdunklau: if not x == None: do_something()
[13:46:14] <sparrowsword_> cdunklau: so source returns none?
[13:46:23] <Church-> Is there a way to mutate a dict, ie. del items while inside a loop? Or will I need a wrapper function for it?
[13:46:31] <cdunklau> sparrowsword_: i'd prefer `if x != None:` over that, and even moreso `if x is not None:`, but yea, you have the right idea
[13:46:39] <Church-> Since I get a runtime error for chaning the dicts size otherwise.
[13:46:41] *** Joins: hussam (uid193284@gateway/web/irccloud.com/x-vavkcdbnardzrjcv)
[13:46:59] <cdunklau> Church-: no. what are you trying to accomplish?
[13:47:01] <Falc> RefractiveIndex: I don't quite understand your question, sorry
[13:47:07] <cdunklau> Church-: the usual solution is "make a new dict"
[13:47:33] <sparrowsword_> cdunklau: still doesnt work tho...
[13:47:47] *** Quits: Kaad (5df5befc@gateway/web/freenode/ip.93.245.190.252) (Quit: Page closed)
[13:47:53] <cdunklau> sparrowsword_: tell it to stop being lazy and get a job!
[13:48:06] <con3> I've got a stupid question.. I'm working through a book on flask and when I try to caall the function verify_password it complains that it requires another argument which is because it has both the declaration self and password. I've looked online and it looks like I need to make an instance of this, I'm just not sure how I would do it for the following funciton. The book I'm following uses the function as is. This is the code snippet of the relevant sections:
[13:48:07] <con3>  https://pastebin.com/a0rVMYMx
[13:48:07] <cdunklau> sparrowsword_: (tell us what you mean by that)
[13:48:08] <infobob> https://paste.pound-python.org/show/FPMnUaG4yO5UGcepltHc/ (repasted for con3)
[13:48:43] <sparrowsword_> cdunklau: https://paste.pound-python.org/show/t9Fep3fn7xktkKmlYUUY/ still writing files with "None", and yes with the quotations in the file
[13:48:52] *** Joins: ncrocfer (~ncrocfer@unaffiliated/ncrocfer)
[13:48:53] <RMJ> odinsbane: https://paste.pound-python.org/show/dlafjzMRlLPGVPD9RCYE/
[13:48:59] <RefractiveIndex> Falc: The size of j is 3 and i is 2. What i want to know is will python automatically store the fetched values from the logic in the correct cell spaces just by knowing the size of j and i
[13:49:03] *** Parts: ncrocfer (~ncrocfer@unaffiliated/ncrocfer) ()
[13:49:04] <bjs> RefractiveIndex: what do you mean by “handle” storage?
[13:49:20] <Church-> Yeah what I figured. cdunklau: So I have a list of numbers some repeating, and a number n. If there is a number with more then n occurences in the list, delete it. So my thought was conver the list to Counter type then to a dict for easier access to the occurnences. Loop through and del any keys with values greater then n.
[13:49:38] *** Quits: astrofog (~astrofog@unaffiliated/astrofog) (Quit: Quite)
[13:49:54] <RefractiveIndex> Cause in C i remember u also had to take care of iterating through the resultant matrix to store the value at the correct location
[13:49:58] *** Quits: wondiws (d57e4e6a@gateway/web/cgi-irc/kiwiirc.com/ip.213.126.78.106) (Remote host closed the connection)
[13:49:59] <cdunklau> con3: you need to search for the user in the db
[13:50:09] <Falc> RefractiveIndex: yes because of the use of range()
[13:50:19] <cdunklau> con3: once you have the instance of the user, you can use it's verify_password method
[13:50:21] <jwhisnant> con3: this isn't all the relevant code, since generate_password_hash is not defined ... and "def password" is defined twice ...
[13:50:27] *** Quits: someone (~someone@somewhe.re) (Ping timeout: 240 seconds)
[13:50:45] <cdunklau> Church-: do you care about order?
[13:50:51] *** Joins: edne (~edne@net-2-42-74-190.cust.vodafonedsl.it)
[13:50:55] <RefractiveIndex> Nice. Thanks
[13:50:57] <cdunklau> i expect not
[13:50:59] *** Joins: EchoPapa (~EchoPapa@88.128.81.125)
[13:51:08] *** Joins: CodeMouse92 (~JasonMc92@unaffiliated/codemouse)
[13:51:19] <odinsbane> RMJ are you suggesting none of those methods work?
[13:51:49] <con3> jwhisnant: This was how the book provided it https://imgur.com/a/zsNcHnI
[13:51:52] *** Joins: lorddaed_ (~lorddaedr@213.141.139.44)
[13:51:55] *** Quits: adamholmberg (~adamholmb@104.218.66.173) (Remote host closed the connection)
[13:52:01] *** Quits: toxync04 (~toxync04@124.239.252.100) (Ping timeout: 248 seconds)
[13:52:32] *** Joins: adamholmberg (~adamholmb@104.218.66.173)
[13:52:38] *** Joins: white_lilies (~jtdoncas@toroon0247w-lp130-01-74-12-139-138.dsl.bell.ca)
[13:52:39] <Church-> cdunklau: I don't, I also found a method that works on Python2.7.
[13:52:50] *** Quits: Darkhunter (~mmojzis@ip-37-188-139-125.eurotel.cz) (Quit: Leaving.)
[13:52:51] *** Joins: nigel45 (~w@127.ip-142-44-210.net)
[13:52:53] <sparrowsword_> cdunklau: ideas?
[13:53:04] *** Joins: Darkhunter (~mmojzis@ip-37-188-139-125.eurotel.cz)
[13:53:06] *** Joins: humitos (~humitos@152.169.140.157)
[13:53:35] <cdunklau> Church-: if you have a counter, i would just do something like   {item: count for item, count in thecounter.items() if count < too_many}
[13:54:15] <con3> cdunklau: If do searchg for the user using t = User2.query.filter_by(username=user2).first() once, I have the user I do the if statement check where t is the username
[13:54:38] <cdunklau> sparrowsword_: doesn't jsonlines want a python structure that it can convert to json
[13:54:39] <RMJ> odinsbane: The last one works scipy... but https://paste.pound-python.org/show/04Ztj6PXhfq2XSMKoB9l/
[13:54:45] <cdunklau> sparrowsword_: not a str
[13:55:06] <con3> cdunklau: Wow, I wrote that horribly. I do search for the user using "t = User2.query.filter_by(username=user2).first()" once I have it I do the if statement and then want to verify the password
[13:55:07] <RMJ> odinsbane: How can I save the float format?
[13:55:09] <sparrowsword_> cdunklau: shouldnt matter what jsonlines thinks, i was thinking the same thing, but the if statement is happening before jsonlines does anything
[13:55:15] <cdunklau> con3: ok then t is the User2 instance, so you just do t.verify_password(...)
[13:55:15] *** Quits: lorddaedra (~lorddaedr@78.157.211.238) (Ping timeout: 245 seconds)
[13:55:15] *** Quits: DeaD_EyE (~DeaD_EyE@p5DC6B1CD.dip0.t-ipconnect.de) (Read error: Connection reset by peer)
[13:55:26] <odinsbane> RMJ it is possible that jpg doesn't support float.
[13:55:32] <sparrowsword_> cdunklau: the if statement should negate jsonlines even trying to write it
[13:55:35] <con3> cdunklau: Thank you, I'm an idiot!
[13:55:40] *** Quits: RefractiveIndex (2a6caed8@gateway/web/freenode/ip.42.108.174.216) (Ping timeout: 260 seconds)
[13:55:48] *** Joins: sunil_bansal (~sunil_ban@49.205.216.234)
[13:55:55] <sparrowsword_> cdunklau: hmm dono why that worked.. but it did
[13:56:04] <cdunklau> sparrowsword_: 			if not source == '"None"' and source != None and source != 'None':
[13:56:09] <cdunklau> that seems wrong
[13:56:10] <odinsbane> RMJ: what is the dtype of img?
[13:56:29] <cdunklau> con3: nah
[13:56:36] <cdunklau> con3: you just made a mistake is all
[13:56:36] <sparrowsword_> cdunklau: it wasnt, just making sure i didnt miss anything whether it be a string of None or a type
[13:56:54] *** Joins: amirpro_ (~amirpro@154.238.55.29)
[13:57:06] <cdunklau> con3: the error message python gives you in that case isn't all that helpful either
[13:57:35] *** Quits: adamholmberg (~adamholmb@104.218.66.173) (Ping timeout: 260 seconds)
[13:57:44] <sparrowsword_> cdunklau: alright... well script is working now :) So Thank you so much as always :) :) :)
[13:57:53] *** Quits: white_lilies (~jtdoncas@toroon0247w-lp130-01-74-12-139-138.dsl.bell.ca) (Ping timeout: 276 seconds)
[13:58:11] *** Joins: chachan_ (~chachan@ec2-35-164-24-42.us-west-2.compute.amazonaws.com)
[13:58:45] *** Joins: inad922 (~inad925@78-131-82-48.pool.digikabel.hu)
[13:58:55] *** Joins: toxync04 (~toxync04@124.166.232.109)
[13:58:57] *** Quits: jackhum (~jackhum@117.225.126.35) (Ping timeout: 256 seconds)
[13:59:42] *** Joins: psychicist__ (~psychicis@wlan-145-94-157-166.wlan.tudelft.nl)
[13:59:43] *** Joins: codesoup (~codesoup@2607:fea8:e220:70:8060:ed88:7732:b225)
[13:59:58] *** Joins: rudrab (~rudrab@14.139.59.140)
[14:00:20] *** Quits: sunil_bansal (~sunil_ban@49.205.216.234) (Ping timeout: 256 seconds)
[14:00:39] *** Quits: chachan (~chachan@196.40.47.129) (Ping timeout: 256 seconds)
[14:01:09] <RMJ> odinsbane:jpg...and I am not sure whether it not support float
[14:01:10] *** Joins: purplex88_ (~purplex88@unaffiliated/purplex88)
[14:01:13] *** Quits: AnySomebody (~AnySomebo@192.129.2.104) (Ping timeout: 256 seconds)
[14:01:15] *** Joins: snatcher (~user@gateway/tor-sasl/snatcher)
[14:01:56] <elichai2> bytes vs bytearray in python3?
[14:02:22] <con3> cdunklau: Thanks, small things seem to always get me but hey its part of the learning curve :) gotta make mistakes
[14:02:41] *** Quits: purplex88 (~purplex88@unaffiliated/purplex88) (Ping timeout: 248 seconds)
[14:02:45] *** purplex88_ is now known as purplex88
[14:02:46] *** Joins: plww (~plw@abqe71.neoplus.adsl.tpnet.pl)
[14:02:48] <Wulf> elichai2: ?
[14:03:03] *** Joins: chachan (~chachan@196.40.47.129)
[14:03:08] <elichai2> I meant whats the diffrence between them
[14:03:17] *** Quits: adoua (~adoua@unaffiliated/adoua) (Ping timeout: 256 seconds)
[14:03:37] <Wulf> elichai2: one is mutable, the other is not
[14:03:53] <elichai2> thats it?
[14:03:58] <Wulf> basically yes
[14:04:15] <odinsbane> RMJ when I try png, or jpeg, it gets converted to byte but it gets scaled.
[14:04:53] *** Joins: Vornicus (~Vorn@2605:e000:1218:48d:e8df:5992:44df:2f08)
[14:04:57] <odinsbane> tiff lets me save as float.
[14:05:28] *** Joins: knight33 (~knight33@199.182.61.141)
[14:06:34] *** Quits: chachan_ (~chachan@ec2-35-164-24-42.us-west-2.compute.amazonaws.com) (Ping timeout: 256 seconds)
[14:06:35] *** Quits: Debnet (~Marc@2a01:e0a:22:19d0:d59f:dc9b:a7e7:3912) (Ping timeout: 256 seconds)
[14:06:51] *** Joins: rpgio (~rpgio@165-73-123-223.ip.afrihost.co.za)
[14:06:55] *** Quits: m0j0dj0dj0 (~punk3r@unaffiliated/m0j0dj0dj0) (Ping timeout: 260 seconds)
[14:07:05] *** Quits: alexmitchell (~alexmitch@118.211.33.127) (Quit: alexmitchell)
[14:08:23] *** Joins: Signaltonsalat (~dickbutt@p5DC7F87D.dip0.t-ipconnect.de)
[14:08:42] <NoImNotNineVolt> float H in HSV would be useless, since it's angular.
[14:08:51] *** Quits: l00t (~l00t@82.119.168.140) (Ping timeout: 240 seconds)
[14:09:15] *** Quits: Bendr (~Bendr@unaffiliated/innocent99) (Ping timeout: 260 seconds)
[14:09:29] <NoImNotNineVolt> admittedly it could be nice in the other two channels
[14:09:36] <altendky> odinsbane: why do you want a floating point image file?  sorry, i assume i missed the explanation.
[14:09:50] *** Quits: Darkhunter (~mmojzis@ip-37-188-139-125.eurotel.cz) (Ping timeout: 260 seconds)
[14:09:52] *** Joins: Bendr (~Bendr@unaffiliated/innocent99)
[14:09:56] *** Joins: ironfroggy (~ironfrogg@python/site-packages/ironfroggy)
[14:09:58] <odinsbane> altendky: I don't RMJ does.
[14:10:28] *** Joins: rupu (~rupu@2405:204:e308:2722:8922:9cf:c105:55fd)
[14:10:29] *** Quits: Bendr (~Bendr@unaffiliated/innocent99) (Max SendQ exceeded)
[14:10:45] <altendky> RMJ: ^^^
[14:10:54] <rupu> hello there
[14:11:01] *** Joins: Bendr (~Bendr@unaffiliated/innocent99)
[14:11:14] <grym> altendky: did you see my confusion about attr.evolve() yesterday?
[14:11:23] <rupu> i'm new to the python as well as new to the irc
[14:11:25] *** Quits: s14ve (~s14ve@80.188.244.110) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[14:11:36] *** Quits: Bendr (~Bendr@unaffiliated/innocent99) (Max SendQ exceeded)
[14:11:57] <Wulf> rupu: okay... so, hello.
[14:12:06] *** Joins: Bendr (~Bendr@unaffiliated/innocent99)
[14:12:08] <Church-> chachan: So I take that back, I do in fact care about ordering. https://bpaste.net/show/2290034bee80
[14:12:14] <Church-> What I have now, running under 2.7
[14:12:28] <chachan> uh?
[14:12:41] <altendky> grym: yes and I answered. You've got a converter in that attribute I assume
[14:12:48] <Church-> Woops, lol. Wrong person.
[14:12:53] *** Quits: Bendr (~Bendr@unaffiliated/innocent99) (Max SendQ exceeded)
[14:13:22] *** Joins: Bendr (~Bendr@unaffiliated/innocent99)
[14:13:26] *** Quits: rupu (~rupu@2405:204:e308:2722:8922:9cf:c105:55fd) (Quit: Leaving)
[14:13:39] *** Joins: duckpuppy (~patrickai@h168.108.18.98.dynamic.ip.windstream.net)
[14:13:57] <NoImNotNineVolt> altendky: he's loading the image, putting it in a numpy array, and doing some "processing" on it. he ends up with negative float values in some pixels.
[14:13:58] <grym> altendky: i lost it in scrollback, sorry, but ... yes, i do.  and all is semi-clear now!  how do i dodge that
[14:14:01] <grym> or can i
[14:14:03] <Church-> Anways, when converting a list to a dict/Counter is there any way to make sure ordering is preserved?
[14:14:25] <grym> Church-: use an ordereddict
[14:14:43] <Church-> Yeah, that would work.
[14:15:50] <grym> Church-: Counter is unordered but orderddict contains a recipie for an ordered implementation: https://docs.python.org/3.4/library/collections.html?highlight=ordereddict#ordereddict-examples-and-recipes
[14:15:51] *** Joins: sleepingforest (~sleepingf@unaffiliated/sleepingforest)
[14:15:55] *** Quits: fission6 (~textual@static-173-56-120-142.nycmny.fios.verizon.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[14:16:10] *** Quits: AliGeyik (~Thunderbi@82.222.185.98) (Quit: AliGeyik)
[14:16:13] *** Quits: hiratara (~hiratara@240f:3f:f4a4:1:1141:a033:848f:499b) (Quit: ZNC - http://znc.in)
[14:16:30] *** Joins: Darkhunter (~mmojzis@ip-86-49-120-171.net.upcbroadband.cz)
[14:16:43] *** Joins: s14ve (~s14ve@80.188.193.126)
[14:17:34] *** Quits: Technodrome (~textual@unaffiliated/technodrome) (Read error: Connection reset by peer)
[14:17:47] *** Joins: amirpro (~amirpro@41.235.74.32)
[14:18:24] *** Joins: Xaldafax (~Xaldafax@cpe-104-35-100-124.socal.res.rr.com)
[14:18:36] <Church-> Oooh, thanks.
[14:18:37] *** Quits: Lambertini (~Lambertin@2804:14c:5787:8432:25da:5ef8:3ccb:d744) (Quit: Leaving)
[14:18:57] *** Quits: s14ve (~s14ve@80.188.193.126) (Client Quit)
[14:19:23] <grym> np.  i always forget that the docs have useful recipies
[14:20:21] <altendky> NoImNotNineVolt: thanks. I guess the follow-up is, what should those mean? But sure, fixed point scaled is probably normal
[14:20:27] <RMJ> altendky: I usually dont save a preoprocessed image, but continue processing on it. This time I am trying to save it and  my intension was to save it in such a way that the precision is saved. But unfortunately the float values cannot be saved as such and is rounded. That when i thought of seeking help to see whether its my ignorance that is not letting me save the float values
[14:20:31] <altendky> grym: also, marshmallow
[14:20:34] <altendky> :]
[14:21:03] <grym> altendky: it's on my list.  i'm just looking for a bandaid right now
[14:21:11] <grym> hopefully without removing the converter, which i kind of like having
[14:21:18] *** Quits: amirpro_ (~amirpro@154.238.55.29) (Ping timeout: 256 seconds)
[14:21:22] <altendky> RMJ: if you have a thing that isn't an image you could save it as what it is. Numpy has serialization
[14:21:51] <altendky> grym: make a copy (evolve I guess), modify what you need to, asdict
[14:21:58] *** Quits: soxhlet (~soxhlet@i59F4B9C1.versanet.de) (Ping timeout: 264 seconds)
[14:22:15] <Church-> grym: Yeah this works, thanks. Been tearing my hair out on why this was tripping one of google foobar's hidden test cases.
[14:22:18] *** Joins: soxhlet (~soxhlet@mue-88-130-75-107.dsl.tropolys.de)
[14:22:18] *** Joins: m0j0dj0dj0 (~punk3r@unaffiliated/m0j0dj0dj0)
[14:22:21] <grym> altendky: a little gross, but i can at least tie it up in a function and only ever do it once
[14:22:29] <grym> Church-: sweet.
[14:22:39] *** Quits: kyrix (~ashwoods@185.144.162.58) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[14:23:39] *** Joins: jayeola (~jayeola@136.148.126.161)
[14:23:40] *** Joins: rupu05 (~rupu@2405:204:e308:2722:8922:9cf:c105:55fd)
[14:23:41] *** Quits: jonatan (~jonatan@h77-53-70-163.cust.se.alltele.net) (Quit: leaving)
[14:23:44] <Church-> Yarp. grym: Thankfully I figured out how to game new invites for new emails.
[14:23:51] *** Joins: codymj (~codymj@rrcs-71-41-86-116.se.biz.rr.com)
[14:23:57] <Church-> Got stuck on a linear systems question which I suck at.
[14:24:12] <altendky> grym: gross, yes.  you did say bandaid.
[14:24:16] <grym> altendky: i did.
[14:24:18] *** Joins: Dejan (~dejan@unaffiliated/dejan)
[14:24:21] *** Quits: kurkale6ka (~kurkale6k@62.232.85.2) (Ping timeout: 240 seconds)
[14:24:28] <hemstock> Hey guys do you know if there's any irc channel or discord for data science?
[14:24:57] <Yhg1s> hemstock: well, there's #pydata, and #scipy.
[14:25:04] *** Joins: s14ve (~s14ve@80.188.244.110)
[14:25:17] *** Joins: Indentist (~Indentist@unaffiliated/indentist)
[14:25:29] *** Joins: kurkale6ka (~kurkale6k@62.232.85.2)
[14:25:30] *** Joins: SkyRocknRoll (~SkyRocknR@unaffiliated/skyrocknroll)
[14:25:30] <hemstock> <3 Yhg1s
[14:25:33] *** Joins: fission6 (~textual@static-173-56-120-142.nycmny.fios.verizon.net)
[14:26:04] *** Quits: techalchemy (~Hawkerz@unaffiliated/hawkerz) (Quit: Leaving)
[14:26:13] *** Quits: duckpuppy (~patrickai@h168.108.18.98.dynamic.ip.windstream.net) (Quit: WeeChat 2.1)
[14:26:34] *** Joins: duckpuppy (~patrickai@h168.108.18.98.dynamic.ip.windstream.net)
[14:26:45] *** Quits: nazarewk (~nazarewk@1d23810ffe137.rev.snt.net.pl) (Ping timeout: 260 seconds)
[14:27:12] <RMJ> altendky: I am trying to do thid preprocessing on over 10000 images, so doubt whether serialisation helps
[14:27:27] *** Quits: xliiv (~xliiv@d89-122.icpnet.pl) (Quit: Leaving)
[14:27:46] <altendky> RMJ: you don't need to serialize but you are putting it into an image file format?  that'd be serializing.
[14:27:53] *** Quits: TidB (~TidB@p5097895d.dip0.t-ipconnect.de) (Read error: Connection reset by peer)
[14:28:02] *** Quits: rupu05 (~rupu@2405:204:e308:2722:8922:9cf:c105:55fd) (Quit: Leaving)
[14:28:24] *** Joins: Jonatan (~nate@h77-53-70-163.cust.se.alltele.net)
[14:28:29] <RMJ> altendky: Could you explain it a little further. references might help me more
[14:28:50] <Indentist> hello, how can I make this an infinite loop? https://paste.debian.net/1030978/
[14:28:51] *** Quits: m1n (~m1n@unaffiliated/m1ntfr3sh) (Ping timeout: 240 seconds)
[14:28:55] *** Quits: currybullen (~currybull@h-205-204.A251.priv.bahnhof.se) (Quit: WeeChat 2.1)
[14:29:05] <RMJ> altendky: yes, putting it back into an image format
[14:29:05] <altendky> RMJ: instead of saving a numpy thing with floats as an image.  save it as a numpy thing with floats.  https://docs.scipy.org/doc/numpy/reference/generated/numpy.save.html
[14:29:14] *** Joins: enhance (enhance@nat/redhat/x-uccznzguihrdphqb)
[14:29:23] <grym> Indentist: remove line 6
[14:29:31] <grym> Indentist: but that's probably not what you meant
[14:29:32] *** Joins: drmbls (~drmbls@78-56-83-14.static.zebra.lt)
[14:29:36] *** Joins: plww1 (~plw@aejs93.neoplus.adsl.tpnet.pl)
[14:29:39] <RMJ> altendky: thanks will check the link
[14:29:41] <altendky> RMJ: what do you need it in an image format for?
[14:29:46] *** Joins: jackhum (~jackhum@2409:4063:2311:70c:9521:df23:4bc3:f557)
[14:30:01] <Indentist> grym no, that was not :)
[14:30:35] *** Quits: ironfroggy (~ironfrogg@python/site-packages/ironfroggy) (Ping timeout: 240 seconds)
[14:30:48] <Indentist> it is said to be a common fun among computer science people. I just expected it to repeat the second string
[14:30:53] *** Joins: ibiam (~ibiam@105.112.89.154)
[14:30:56] *** Joins: rjdp9736_ (~rjdp9736@49.205.219.130)
[14:31:06] *** Quits: ibiam (~ibiam@105.112.89.154) (Client Quit)
[14:31:27] *** Quits: amz31 (~amz3@fsfe/amz3) (Ping timeout: 245 seconds)
[14:31:37] *** Quits: nigel45 (~w@127.ip-142-44-210.net) (Ping timeout: 256 seconds)
[14:31:50] *** Joins: ibiam (~ibiam@105.112.89.154)
[14:31:51] <Indentist> I mean, when I created an infinite loop
[14:31:55] <altendky> Indentist: change the - on 6 to a +?  then it will be infinite until you run out of memory for n.  though same issue applies with counting down
[14:31:55] *** Joins: DeaD_EyE (~DeaD_EyE@p5DC6B1CD.dip0.t-ipconnect.de)
[14:32:03] *** Quits: bmurt (~hmm@65.78.58.150) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[14:32:04] <altendky> Indentist: or change 4 to `while True:`
[14:32:10] *** Joins: rupu (~rupu@2405:204:e308:2722:8922:9cf:c105:55fd)
[14:32:16] <altendky> Indentist: but i'm not sure what you point is here
[14:32:26] <Indentist> altendky changing to a + repeates shampoo endlessly
[14:32:33] *** Quits: plww (~plw@abqe71.neoplus.adsl.tpnet.pl) (Ping timeout: 248 seconds)
[14:32:44] <altendky> Indentist: yes, you asked for an infinite loop
[14:32:46] *** Quits: rjdp9736 (~rjdp9736@183.82.16.197) (Ping timeout: 264 seconds)
[14:33:03] <Indentist> anyway, not too important, but I just wanted the second string (line 7) to repeat, not the first
[14:33:11] *** Joins: stefanc_diff (~stefanc_d@193.105.212.250)
[14:33:13] *** Joins: ironfroggy (~ironfrogg@python/site-packages/ironfroggy)
[14:33:15] *** Quits: omarek (~mareko@185.59.108.236.maxnet.net.pl) (Quit: leaving)
[14:33:18] <altendky> Indentist: put it in a `while True:`
[14:33:20] <grym> Indentist: so put _that_ inside a `while True`
[14:33:27] <altendky> Indentist: that's the basic infinite loop
[14:33:34] <RMJ> altendky: because I want to use those saved images to be called in other programs
[14:33:38] *** Quits: PulseAsio (~PulseAsio@dw7724211510.amsterdam-tc.dataweb.net) (Ping timeout: 256 seconds)
[14:33:50] <altendky> RMJ: and what image format does that other program use?  did you write that other program?
[14:33:52] *** Joins: hotpot33 (~hotpot33@unaffiliated/hotpot33)
[14:33:58] <RMJ> altendky: Those programs will look for jpg pr png or bmp images
[14:34:07] *** Joins: BabylonAS (~BabylonAS@176.59.47.182)
[14:34:07] <altendky> RMJ: and not just format, but also, the meaning of the values inside
[14:34:14] <RMJ> altendky: depending on the types
[14:34:14] *** Parts: squirrel (~mj@unaffiliated/squirrel) ("WeeChat 2.1-dev")
[14:34:28] *** Quits: NomadJim (~NomadJim@pdpc/supporter/active/nomadjim) (Read error: Connection reset by peer)
[14:34:31] *** Quits: rupu (~rupu@2405:204:e308:2722:8922:9cf:c105:55fd) (Client Quit)
[14:34:38] *** Quits: jayeola (~jayeola@136.148.126.161) (Quit: Lost terminal)
[14:34:40] <Indentist> all right. I'd thought something else to occur, but maybe I figure it myself sometime :)
[14:34:58] *** Joins: NomadJim (~NomadJim@pdpc/supporter/active/nomadjim)
[14:34:59] <altendky> Indentist: in python we'd usually write the first loop as `for _ in range(n - 1):`
[14:35:19] <NoImNotNineVolt> altendky: i'm just happy to have learned that floating point image formats exist.
[14:35:41] <RMJ> NoImNotNineVolt: :)
[14:35:43] <Indentist> altendky, yes, this was a chapter about while lopp
[14:35:45] <Indentist> loop*
[14:35:46] *** Joins: rupu (~rupu@2405:204:e308:2722:8922:9cf:c105:55fd)
[14:35:57] <Indentist> from a chapter*
[14:36:02] *** Quits: luizdepra (~luizdepra@2001:1284:f013:4e57:8ca0:e570:4255:9ddd) (Ping timeout: 245 seconds)
[14:36:03] *** Quits: rupu (~rupu@2405:204:e308:2722:8922:9cf:c105:55fd) (Client Quit)
[14:36:12] *** Quits: AvianFlu (~avianflu@freedom.sexy) (Remote host closed the connection)
[14:36:21] *** Quits: biberu (~biberu@193.150.203.9) ()
[14:36:23] <LyndsySimon> I hate Slack so much. It's down this morning and it's like my entire company just ceased to exist.
[14:36:34] <altendky> RMJ: so how is this other program going to interpret the values?  what does it do with them?
[14:36:44] <altendky> RMJ: you'll have to cater to it's needs, not your desires
[14:36:48] *** Quits: shakotan (~shakotn@193.64.190.190) (Ping timeout: 268 seconds)
[14:36:50] <dude-x> LyndsySimon my dependency on slack is minimal but still annoying
[14:37:10] <NoImNotNineVolt> RMJ: have you considered whether you really need floating point images, though? instead of letting the image format dictate the display of your data, you could project it onto a colorspace in a manner of your choosing.
[14:37:41] *** Joins: lmvka (~lmvka@195.210.24.71)
[14:37:42] *** Joins: shakotan (~shakotn@193.64.190.190)
[14:37:53] *** Joins: luizdepra (~luizdepra@2001:1284:f013:ffa2:8ca0:e570:4255:9ddd)
[14:38:13] *** Joins: nbdmaw1 (~mark@143.59.32.239)
[14:38:46] *** Quits: nishttal (~nis@38.98.229.98) (Quit: Leaving)
[14:38:57] <LyndsySimon> dude-x: I'm remote, and 99% of my communication is via Slack. I'm had to send an email out to my team to make sure they had my cell number, since I'm not sure if they do. I don't have theirs' handy.
[14:39:03] <LyndsySimon> Email. How... quant.
[14:39:08] *** Joins: jokoon (~jokoon@2a01:e35:2e08:9f10:ec00:dc9c:c79b:7bc0)
[14:39:10] <LyndsySimon> quaint*
[14:39:26] *** Joins: st8less (~st8less@2600:8804:88c0:50f:452a:236c:d7dd:ece1)
[14:39:32] <RMJ> altendky : THe next program reads in the image and converts to numpy array and do further procedures. I am trying to avoiding preprocessing  within that program. so doing the preoprocessing first and then send it as input to main program.
[14:39:43] *** Joins: someone (~someone@somewhe.re)
[14:39:45] <NoImNotNineVolt> ah, filter pipelines, fun :)
[14:40:01] *** Quits: inad922 (~inad925@78-131-82-48.pool.digikabel.hu) (Ping timeout: 248 seconds)
[14:40:10] <NoImNotNineVolt> have you considered serializing the numpy arrays some other way besides writing to an image file?
[14:40:23] *** Joins: led1 (~Thunderbi@hotspot10.rywasoft.net)
[14:40:35] *** Joins: megaTherion (~therion@unix.io)
[14:40:41] <altendky> RMJ: and it expects floating point?
[14:40:46] *** Quits: st8less (~st8less@2600:8804:88c0:50f:452a:236c:d7dd:ece1) (Client Quit)
[14:40:55] *** Parts: flommi (~florian@p5486F46D.dip0.t-ipconnect.de) (".")
[14:40:56] *** Joins: st8less (~st8less@2600:8804:88c0:50f:452a:236c:d7dd:ece1)
[14:40:58] <altendky> RMJ: can you modify the second program?
[14:41:01] <grym> ^
[14:41:18] *** Joins: andeh (~andeh@146.115.76.19)
[14:41:24] *** Quits: ibiam (~ibiam@105.112.89.154) (Quit: ibiam)
[14:41:27] <NoImNotNineVolt> sounds like a lot of potentially unnecessary back-and-forth conversion
[14:41:27] <grym> RMJ: by adding an "is_preprocessed" flag or something, and then loading npz instead of tiff or whatever
[14:41:30] *** Joins: qlixed (~qlixed@190.221.31.178)
[14:41:45] *** Joins: ibiam (~ibiam@105.112.89.154)
[14:42:09] *** Quits: shakotan (~shakotn@193.64.190.190) (Ping timeout: 255 seconds)
[14:42:12] *** Quits: m0j0dj0dj0 (~punk3r@unaffiliated/m0j0dj0dj0) (Quit: go drink with my bitches!)
[14:42:30] *** Joins: Alexander-47u (~Alexander@85.203.44.22)
[14:42:31] *** Quits: Alexander-47u (~Alexander@85.203.44.22) (Max SendQ exceeded)
[14:42:49] *** Joins: italic (~italic@unaffiliated/italic/x-8958156)
[14:43:31] *** Quits: led1 (~Thunderbi@hotspot10.rywasoft.net) (Client Quit)
[14:43:42] *** Joins: Alexander-47u (~Alexander@85.203.44.33)
[14:43:44] *** Quits: ycon_ (~ycon_@202-172-111-51-cpe.spintel.net.au) ()
[14:43:45] <dude-x> LyndsySimon i also work remote. but at least our standup is via zoom, so we are caught up
[14:44:08] *** Quits: Belxjander (~Belxjande@sourcemage/Mage/Abh-Elementalist) (Max SendQ exceeded)
[14:45:17] <altendky> RMJ: what's getting me is that negative light levels don't usually make sense. So a float image with negatives would mean what to the second program?
[14:45:35] *** Joins: pangolin_ (~pawn@152.12.254.241)
[14:45:43] <altendky> RMJ: I do get that some image processing results in negatives for intermediate steps
[14:45:52] <NoImNotNineVolt> some transforms have nothing to do with light levels anymore.
[14:46:40] *** Joins: urodna (~urodna@unaffiliated/urodna)
[14:46:48] *** Joins: Spaaaaaaaaaaaace (~Spaaaaaaa@unaffiliated/spaaaaaaaaaaaace)
[14:46:49] <NoImNotNineVolt> that's why the idea of storing intermediate data as image files may not be ideal.
[14:47:00] *** Parts: zazzi (~zazzi@195.191.147.7) ()
[14:47:45] *** Quits: GiLgAmEzH (~gilgamezh@unaffiliated/gilgamezh) (Ping timeout: 260 seconds)
[14:48:59] *** Joins: tsoernes (~torstein@84-52-234.108.3p.ntebredband.no)
[14:49:28] *** Joins: dcollins (~dcollins@pool-108-53-107-230.nwrknj.fios.verizon.net)
[14:49:36] *** Joins: maroloccio (~marolocci@216.red-88-8-32.dynamicip.rima-tde.net)
[14:50:15] *** Joins: shicks2525 (~shicks252@ool-4354603e.dyn.optonline.net)
[14:50:18] *** Quits: jackhum (~jackhum@2409:4063:2311:70c:9521:df23:4bc3:f557) (Remote host closed the connection)
[14:50:23] <RMJ> altendky: Please tell me if I am thinking right. "An image after preprocessing that generates a signed float value array, when saved as integer values, will that loos some precision while saving?? " If that's a yes, then that's where I started trying to save it as float itself to not loose precision.
[14:50:50] *** Joins: djapo (~archie@unaffiliated/djapo)
[14:51:07] *** Quits: tvm (~tvm@router-sever1-nat-m.pilsfree.net) (Quit: Leaving)
[14:51:18] *** Joins: tvm (~tvm@router-sever1-nat-m.pilsfree.net)
[14:51:23] *** Joins: fr0ddy (~fr0ddy@103.210.147.84)
[14:51:30] *** Quits: arkaros (~arkaros@h-56-4.A137.corp.bahnhof.se) (Ping timeout: 245 seconds)
[14:51:45] *** Quits: Allegretto_ (~allegrett@84-236-93-45.pool.digikabel.hu) (Ping timeout: 248 seconds)
[14:51:49] <odinsbane> RMJ jpg has some limitations.
[14:52:05] <grym> RMJ: most image formats are lossy, too
[14:52:05] <altendky> RMJ: do you know the scale?
[14:52:20] <odinsbane> RMJ: if you want to save as float you have to use a different format. eg. .tiff or just use numpy's array serialization.
[14:52:26] <altendky> RMJ: as in, what is the float range?
[14:53:03] *** Joins: kyrix (~ashwoods@84-112-127-24.cable.dynamic.surfer.at)
[14:53:10] <Indentist> https://paste.debian.net/plain/1030984  this is supposed to give "3, 10, 5, 16, 8, 4, 2, 1" but it gives no output instead. what am I doing wrong here?
[14:53:10] *** Joins: kurkale61 (~kurkale6k@84.45.99.125)
[14:53:11] <NoImNotNineVolt> fundamentally, if you're going from more bits to less bits, you're going to lose precision.
[14:54:13] *** Quits: AIRG (airg@unaffiliated/airg) (Quit: ZNC 1.6.5 - http://znc.in)
[14:55:21] <Siecje> Indentist: It prints what sequence() returns, but it returns None
[14:55:39] <Siecje> Indentist: nvm I just saw the print inside the function
[14:55:51] <odinsbane> jpg does handle 32bpp.
[14:55:52] *** Quits: AquaL1te (~AquaL1te@unaffiliated/aqual1te) (Ping timeout: 256 seconds)
[14:55:53] *** Joins: arkaros (~arkaros@h-56-4.A137.corp.bahnhof.se)
[14:55:54] *** Joins: Belxjander (~Belxjande@sourcemage/Mage/Abh-Elementalist)
[14:56:30] *** Quits: kurkale6ka (~kurkale6k@62.232.85.2) (Ping timeout: 260 seconds)
[14:56:47] <Siecje> Indentist: you should see output. Is the #! wrong? If you run python and then that file do you get output?
[14:56:51] <RMJ> altendky: odinsbane: NoImNotNineVolt: I am literally lost here. Dont know if my thinking is right as well. Not sure about the float range, may be to a decimal precision of 6. I now understand that jpg has its own limitation. Though .tiff helps, I cant save it in .tiff format.
[14:57:00] *** Joins: black_13 (614d5f72@gateway/web/freenode/ip.97.77.95.114)
[14:57:17] *** Joins: AquaL1te (~AquaL1te@unaffiliated/aqual1te)
[14:57:24] *** Joins: tuxd00d (~tuxd00d@unaffiliated/tuxd00d)
[14:57:39] *** Joins: linuxmodder (~linuxmodd@2ProIntl/thru-the-firewall/linuxmodder)
[14:57:48] <RMJ> altendky: odinsbane: NoImNotNineVolt: I am literally lost here. Dont know if my thinking is right as well. Not sure about the float range, may be to a decimal precision of 6. I now understand that jpg has its own limitation. Though .tiff helps, I cant save it in .tiff format. Cant save it in a .npy serialized format as well.
[14:57:52] <black_13> can python create binary representation of an array of floats/doubles ?
[14:58:15] <NoImNotNineVolt> 32bpp per channel?
[14:58:26] *** Quits: mreznik (mreznik@nat/redhat/x-favzttkyohacfryf) (Quit: Leaving)
[14:58:33] *** Joins: Mattiaslndstrm (~Mattiasln@2806:103e:9:2c2b:2dab:c2b2:e1b7:b3b7)
[14:58:43] <NoImNotNineVolt> RMJ: then you'll need to know the range and distribution of your input floats.
[14:59:21] *** Joins: adamholmberg (~adamholmb@104.218.66.173)
[14:59:30] <odinsbane> bpp - bits per pixel, its from some microsoft page. Possibly the wikipedia would know more.
[14:59:35] *** Quits: psychicist__ (~psychicis@wlan-145-94-157-166.wlan.tudelft.nl) (Ping timeout: 240 seconds)
[14:59:45] *** Quits: davr0s (~textual@host86-138-235-28.range86-138.btcentralplus.com) (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
[14:59:47] *** Joins: IrishPrime (~IrishPrim@24-241-137-130.static.spbg.sc.charter.com)
[14:59:54] *** Quits: tdn (~tdn@x50d248d8.cust.hiper.dk) (Quit: leaving)
[14:59:57] <NoImNotNineVolt> because rgba with 8 bit channels gives 32 bits per pixel :P
[15:00:02] *** Joins: BPL (~BPL@76.0.60.213.dynamic.reverse-mundo-r.com)
[15:00:12] *** Joins: tdn (~tdn@x50d248d8.cust.hiper.dk)
[15:00:15] <odinsbane> jpeg doesn't support a.
[15:00:21] <NoImNotNineVolt> fair enough.
[15:00:48] *** Quits: vancha (~vancha@ip-213-127-215-89.ip.prioritytelecom.net) (Quit: vancha)
[15:00:54] <RMJ> NoImNotNineVolt: but why is the usual libraries like PIL etc did not even let me save the image.
[15:00:59] *** Quits: DeaD_EyE (~DeaD_EyE@p5DC6B1CD.dip0.t-ipconnect.de) (Quit: sys.exit(0))
[15:01:09] <odinsbane> RMJ what do they tell you when you try?
[15:01:29] *** Quits: enkrypt (~enkrypt@cust-24-53-111-94.dyn.as47377.net) (Ping timeout: 276 seconds)
[15:01:34] <cdunklau> black_13: sure
[15:01:35] *** Quits: lmvka (~lmvka@195.210.24.71) (Ping timeout: 240 seconds)
[15:01:35] *** Quits: pathrocle (~pathrocle@ldap.nchadvisors.ro) (Ping timeout: 240 seconds)
[15:01:48] <cdunklau> black_13: single dimension?
[15:01:51] *** Quits: drmbls (~drmbls@78-56-83-14.static.zebra.lt) (Quit: Leaving)
[15:01:52] <black_13> yes
[15:01:57] <altendky> RMJ: so images generally represent some light levels between none and a max.  if you want to work with arbitrary floats instead then you may want to introduce a sensible arbitrary format for your data like what you use in memory, numpy's stuff.
[15:02:07] *** Quits: njbair (~njbair@cpe-104-231-109-72.neo.res.rr.com) (Excess Flood)
[15:02:12] <NoImNotNineVolt> so wikipedia is telling me jpeg is 24bit. jpeg2000 is 32.
[15:02:12] *** Joins: lmvka (~lmvka@195.210.24.71)
[15:02:13] <Indentist> Siecje, != is given, and I get no output
[15:02:23] <altendky> RMJ: but you really need to answer my questions.  can you modify the second program?
[15:02:23] <Indentist> when I run the file in py console
[15:02:24] <black_13> I need to send a fixed array of floating point information over a socket connection
[15:02:44] <NoImNotNineVolt> RMJ: it's not surprising that you can't save an image with negative values.
[15:02:50] *** Quits: ibiam (~ibiam@105.112.89.154) (Read error: Connection reset by peer)
[15:02:54] <NoImNotNineVolt> or a jpeg with floats.
[15:03:03] *** Joins: shakotan (~shakotn@193.64.190.190)
[15:03:23] <cdunklau> black_13: struct
[15:03:26] *** Quits: bartmon (~bartmon@89-212-95-222.link.t-2.net) (Quit: Leaving)
[15:03:29] <cdunklau> black_13: https://docs.python.org/3/library/struct.html
[15:03:32] <Siecje> Indentist: Your indents are messed up.
[15:03:33] *** Quits: Ulver (~someIdent@69.30.253.222) (Quit: 6279650a)
[15:03:33] *** Joins: njbair (~njbair@cpe-104-231-109-72.neo.res.rr.com)
[15:03:38] *** Joins: ibiam (~ibiam@105.112.89.154)
[15:03:50] <NoImNotNineVolt> you _could_ transform your arrays in a way that the data fits in jpg files, but you'd have to know the range and distribution of your data.
[15:03:50] *** Joins: chachan_ (~chachan@ec2-35-164-24-42.us-west-2.compute.amazonaws.com)
[15:04:01] <RMJ> odinsbane: Pil returns cant handle this data type
[15:04:26] <RMJ> altendky: can,t alter the second program
[15:04:39] <altendky> RMJ: let's stick with the logic at the moment.  randomly sticking negative floats into a file doesn't make sense unless the other end can do something with it.
[15:04:42] <NoImNotNineVolt> oh, then you're screwed. the second program can't take negative values as input
[15:04:53] *** Joins: sunil_bansal (~sunil_ban@49.205.216.234)
[15:05:03] <altendky> RMJ: what are these negative values supposed to mean given that you can't have negative light levels?
[15:05:05] *** Joins: Allegretto_ (~allegrett@94-21-157-60.pool.digikabel.hu)
[15:05:06] <NoImNotNineVolt> if the second program takes jpeg as input, it can't take negative values.
[15:05:08] <cdunklau> black_13: so presumably something like struct.pack('!' + 'd' * len(arr), *arr)
[15:05:09] *** Quits: chachan (~chachan@196.40.47.129) (Read error: Connection reset by peer)
[15:05:14] <Indentist> Siecje, whata disgrace as an indentist
[15:05:17] <cdunklau> for double
[15:05:24] *** Joins: chachan (~chachan@168.232.28.50)
[15:05:40] *** Quits: RCStef (~Thunderbi@conect.gtstelecom.ro) (Quit: RCStef)
[15:05:40] *** Quits: greg_f (~greg@altlinux/developer/greg) (Read error: Connection reset by peer)
[15:05:46] <black_13> that seems correct.
[15:06:03] <black_13> I have read about the package but never used.
[15:06:06] *** Joins: greg_f (~greg@altlinux/developer/greg)
[15:06:07] <RMJ> altendky: Sorry It does can accept values if its the same jpg format
[15:06:21] *** Quits: hotpot33 (~hotpot33@unaffiliated/hotpot33) (Remote host closed the connection)
[15:06:39] <cdunklau> black_13: note that there is no length information in the output
[15:06:43] <altendky> RMJ: yes.  you can accept text, but if i send you oiuljkgfaj kl l3lk j3287 lakf l, you won't know what to do with it.
[15:06:48] <Indentist> but no, they seem correct
[15:06:54] <cdunklau> black_13: presumably the protocol has a thing for framing this
[15:06:55] <altendky> RMJ: what do the negatives mean?  what do the floats mean?
[15:07:01] <AndroidKitKat> is there a way to run python line by line without typing it all into the intrepter
[15:07:01] *** Quits: jlf (~jlf@pdpc/supporter/active/jlf) (Ping timeout: 268 seconds)
[15:07:14] <altendky> AndroidKitKat: step through debuggers
[15:07:27] <altendky> AndroidKitKat: what are you using to write your code?
[15:07:33] <AndroidKitKat> VSCode
[15:07:38] *** Quits: jb1123 (~Thunderbi@2a02:a03f:5230:2400:25a9:5be1:8be7:d72a) (Ping timeout: 256 seconds)
[15:07:42] *** Quits: AquaL1te (~AquaL1te@unaffiliated/aqual1te) (Ping timeout: 245 seconds)
[15:07:45] <cdunklau> black_13: does it really just want a raw binary representation?
[15:07:50] *** Joins: nobodi (~nobodi@modemcable142.127-177-173.mc.videotron.ca)
[15:07:52] <black_13> yes
[15:07:52] <AndroidKitKat> I'm having a lot of issues getting something to work
[15:07:56] <altendky> AndroidKitKat: maybe https://code.visualstudio.com/docs/python/debugging
[15:08:01] <cdunklau> black_13: or some more-sophistocated thing like protobuf or whatever
[15:08:02] <AndroidKitKat> thanks altendky
[15:08:20] *** Quits: _akmod (~akmod@204.246.145.50) (Ping timeout: 265 seconds)
[15:08:37] <black_13> no I want simulate the response from a piece of test equipment
[15:08:38] <hogarius> omarek: 8
[15:09:04] <black_13> you open a socket send an ASCII command and it responds with a binary stream.
[15:09:13] *** Quits: sunil_bansal (~sunil_ban@49.205.216.234) (Ping timeout: 256 seconds)
[15:09:18] *** Quits: chachan_ (~chachan@ec2-35-164-24-42.us-west-2.compute.amazonaws.com) (Ping timeout: 265 seconds)
[15:09:37] *** Joins: redrum88 (~Helder@177.180.184.84)
[15:09:38] *** Quits: codymj (~codymj@rrcs-71-41-86-116.se.biz.rr.com) (Quit: Leaving)
[15:10:01] <black_13> 'COMMAND\n' -> equipment, equipment-> "#nDxxxx"
[15:10:09] <altendky> RMJ: maybe we should take the simple approach here.  let's say you do lose some resolution.  are 16 million colors not enough?
[15:10:19] <Indentist> https://paste.debian.net/plain/1030984  really cant figure why I dont get "3, 10, 5, 16, 8, 4, 2, 1" here, as I am supposed to?
[15:11:10] *** Quits: pangolin_ (~pawn@152.12.254.241) (Ping timeout: 264 seconds)
[15:11:31] *** Quits: blb (~blb@unaffiliated/bryno) (Quit: brb)
[15:11:55] <black_13> cdunklau: # is the actuall pound character then ascii number saying how man numbers are in the next set of ascii digits '5' means there are 5 ascii chars to follow then these transalted to a number represent the total number of floats or doubles to follow
[15:12:36] <tech2> Indentist: Python 3?
[15:12:39] <cdunklau> black_13: jesus that's awful :D
[15:12:41] <cdunklau> i'm so sorry
[15:12:57] *** Joins: Leeds (~Leeds@223.16.213.143)
[15:12:59] <black_13> oddly this is a standard
[15:13:11] <cdunklau> black_13: not odd at all
[15:13:16] *** Joins: makaj (~Indentist@unaffiliated/indentist)
[15:13:18] <cdunklau> there are plenty of terrible standards
[15:13:37] <black_13> i was thinking about using a stack
[15:13:40] *** Quits: makaj (~Indentist@unaffiliated/indentist) (Client Quit)
[15:13:57] *** Joins: ryanhiebert (uid64795@gateway/web/irccloud.com/x-zkibcfafrbiibysf)
[15:14:13] *** Joins: makaj (~Indentist@unaffiliated/indentist)
[15:14:19] *** Quits: zmt01 (~zmt@c-98-248-234-34.hsd1.ca.comcast.net) (Read error: Connection reset by peer)
[15:14:25] *** Quits: makaj (~Indentist@unaffiliated/indentist) (Client Quit)
[15:14:33] <black_13> cdunklau: "baby steps bob baby steps"
[15:14:34] *** Joins: Afrix (~Afrix4@host-92-6-26-221.as43234.net)
[15:14:37] *** Joins: enkrypt (~enkrypt@cust-24-53-111-94.dyn.as47377.net)
[15:14:37] *** Quits: shakotan (~shakotn@193.64.190.190) (Ping timeout: 265 seconds)
[15:14:40] *** Joins: timdiels (~unknown@gruber.s.timdiels.be)
[15:14:49] *** Joins: zmt01 (~zmt@c-98-248-234-34.hsd1.ca.comcast.net)
[15:14:49] *** Joins: pangolin_ (~pawn@152.12.254.241)
[15:15:01] *** Joins: makaj (~Indentist@unaffiliated/indentist)
[15:15:45] *** Quits: knight33 (~knight33@199.182.61.141) (Ping timeout: 248 seconds)
[15:15:54] *** Joins: d^sh (~knumskull@p5784D849.dip0.t-ipconnect.de)
[15:15:55] <tech2> Indentist: You're printing the returned value of the function too, the returned value is None. What are you getting here that's unexpected?
[15:16:37] <timdiels> When calling `subprocess.run(['mysql', '-p'], input='password')`, mysql still takes the password from my terminal's stdin
[15:16:49] *** Quits: rudrab (~rudrab@14.139.59.140) (Quit: rudrab)
[15:16:57] *** Quits: ibiam (~ibiam@105.112.89.154) (Ping timeout: 256 seconds)
[15:16:57] *** Quits: Indentist (~Indentist@unaffiliated/indentist) (Ping timeout: 256 seconds)
[15:16:59] <timdiels> instead of using the password from `input`
[15:18:01] *** Joins: mac_ified (~mac_ified@rrcs-24-227-77-162.se.biz.rr.com)
[15:18:18] *** Quits: s14ve (~s14ve@80.188.244.110) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[15:18:28] *** makaj is now known as Indentist
[15:18:52] *** Joins: hotpot33 (~hotpot33@unaffiliated/hotpot33)
[15:18:54] *** Joins: PulseAsio (~PulseAsio@dhcp-077-248-071-126.chello.nl)
[15:18:58] *** Joins: jarthur (~jarthur@207.114.244.5)
[15:19:15] <Indentist> tech2 I get nothing, the command line jumps to prompt
[15:19:29] *** Joins: newrg (~rajat@unaffiliated/newrg)
[15:19:31] <bjs> Indentist: how do you run it?
[15:19:37] <Falc> timdiels: why not simply run(['mysql', '-p', password]) ?
[15:19:45] *** Quits: psi29a (~psi29a@129.253.244.4) (Quit: Leaving.)
[15:19:46] *** Quits: italic (~italic@unaffiliated/italic/x-8958156) (Ping timeout: 260 seconds)
[15:19:54] *** Joins: Rapture (~textual@50-204-232-30-static.hfc.comcastbusiness.net)
[15:19:57] <Indentist> in py console, ~$ python3 ./file.py
[15:20:01] <timdiels> Falc: because it shows up in `ps aux`, it's not as safe
[15:20:02] *** Joins: akmod (~akmod@204.246.145.50)
[15:20:04] <Indentist> bjs^
[15:20:09] *** Quits: akmod (~akmod@204.246.145.50) (Remote host closed the connection)
[15:20:33] *** Quits: dinis (~root@220.136.27.77.dynamic.reverse-mundo-r.com) (Ping timeout: 256 seconds)
[15:20:48] *** Quits: kyrix (~ashwoods@84-112-127-24.cable.dynamic.surfer.at) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[15:21:09] <bjs> Indentist: and you say that takes you to a prompt? like a python prompt?
[15:21:28] <timdiels> I could ofcourse use an option file, but this would have been easier and I don't understand why it doesn't work
[15:21:30] <Falc> timdiels: maybe, but there's a non-zero chance that your problem is caused by the mysql executable itself and not by subprocess...
[15:21:30] <RMJ> altendky: I am thinking the same. I am taking a step back and forget about the precision loss. Now I am thinking how I can make PIL or openCV save the preprocessed image
[15:21:39] *** Joins: Zaab1t (~Thunderbi@unaffiliated/zaab1t)
[15:21:59] <timdiels> Falc: certainly though I was more thinking along the lines of it being caused by a misunderstanding on my part :P
[15:22:02] <RMJ> altendky: and why basic packages giving me erro in saving the image
[15:22:07] <altendky> RMJ: you'll have to think about what your data means, which you haven't answered yet.  then you can decide how to express that in the given format
[15:22:08] <Indentist> bjs, no to "~$..."
[15:22:13] *** Quits: Py_mona (~Mona@unaffiliated/kumudini) (Quit: Konversation terminated!)
[15:22:50] <Wooble> Indentist: mysql does some magic to bypass stdin to read passwords
[15:23:04] *** Quits: arkaros (~arkaros@h-56-4.A137.corp.bahnhof.se) (Ping timeout: 256 seconds)
[15:23:05] <RMJ> altendky: Yeah I have to clear myself for you to help me in some way. I totally understand.
[15:23:20] *** Quits: patdaburu (~patdaburu@24-177-166-2.dhcp.mrqt.mi.charter.com) (Ping timeout: 260 seconds)
[15:23:29] *** Joins: m3ddl3r (~Thunderbi@192.30.201.10)
[15:23:33] <Indentist> bjs https://paste.debian.net/1030990/
[15:23:35] *** Joins: Borw3 (2948c222@gateway/web/freenode/ip.41.72.194.34)
[15:23:55] *** Quits: duckpuppy (~patrickai@h168.108.18.98.dynamic.ip.windstream.net) (Quit: WeeChat 2.1)
[15:23:56] <Falc> timdiels: what you can try is doing it manually, step by step, meaning you create the Popen and then communicate() yourself to see what's actually happening. Also read what Wooble just said
[15:23:58] *** Quits: m3ddl3r (~Thunderbi@192.30.201.10) (Remote host closed the connection)
[15:24:02] *** Joins: ibiam (~ibiam@105.112.89.154)
[15:24:08] <Indentist> Wooble, maybe I am not the intended recipient of your reply?
[15:24:10] <altendky> RMJ: sometimes we can help if you try to answer the questions.  :]
[15:24:14] <Wooble> Indentist: (also running mysql as a subprocess is probably a Bad Idea(tm))
[15:24:20] <bjs> Indentist: can you show me that but with a cat file.py or something
[15:24:23] <Indentist> Wooble^
[15:24:25] *** Joins: s14ve (~s14ve@80.188.244.110)
[15:24:25] *** Quits: s14ve (~s14ve@80.188.244.110) (Client Quit)
[15:24:27] *** Joins: dinis (~root@220.136.27.77.dynamic.reverse-mundo-r.com)
[15:24:28] <Borw3> Hello guys, why 15*numpy.array(someListOfStrings) fail? I am trying to learn AI by reading Machine Learning in action.
[15:24:31] <Wooble> Indentist: oh, sorry.
[15:24:32] *** Joins: canarts (~stranac@89-172-248-95.adsl.net.t-com.hr)
[15:24:40] <Indentist> Wooble, no probs :))
[15:24:59] *** Quits: chele (~chele@2a02:8106:1:f900:faca:b8ff:fe2f:8499) (Quit: Leaving)
[15:25:05] *** Joins: rudrab (~rudrab@14.139.59.140)
[15:25:11] <Wooble> timdiels: mysql does some magic to bypass stdin to read passwords (also running mysql as a subprocess is probably a Bad Idea(tm))
[15:25:21] *** Joins: qswz (~caub@vau06-3-82-247-80-102.fbx.proxad.net)
[15:25:23] *** Quits: snatcher (~user@gateway/tor-sasl/snatcher) (Remote host closed the connection)
[15:25:35] <Indentist> bjs, this is the file: https://paste.debian.net/plain/1030991
[15:25:48] <Indentist> contents, I mean
[15:25:52] *** Quits: pangolin_ (~pawn@152.12.254.241) (Quit: Konversation terminated!)
[15:26:03] *** Quits: Falc (~LaurentDB@193.191.206.243) (Quit: Leaving)
[15:26:08] <bjs> Indentist: yes but is that actually the file you’re running ;)
[15:26:20] <Indentist> bjs, yes
[15:26:28] <qswz> Sup guys, when building with docker, I have a few private git repos in requirements.txt, is there a place where all python deps end up, and that is safe to copy after install?
[15:26:34] <Wooble> timdiels: (see https://stackoverflow.com/questions/13736772/how-do-applications-read-lines-from-stdin-without-consuming-existing-buffered-da )
[15:26:35] <qswz> I'm reading https://medium.com/@bmihelac/examples-for-building-docker-images-with-private-python-packages-6314440e257c
[15:26:50] *** Joins: duckpuppy (~patrickai@h168.108.18.98.dynamic.ip.windstream.net)
[15:27:11] *** Quits: chachan (~chachan@168.232.28.50) (Ping timeout: 265 seconds)
[15:27:27] *** Joins: s14ve (~s14ve@80.188.244.110)
[15:27:29] *** Quits: stranac (~stranac@78-1-58-149.adsl.net.t-com.hr) (Ping timeout: 248 seconds)
[15:27:38] *** Joins: wtfender (~mcinm054@unaffiliated/wtfender)
[15:27:58] <megagarbage> Indentist: if you just run python3 do you get a working interpreter session?
[15:28:01] *** Quits: wtfender (~mcinm054@unaffiliated/wtfender) (Client Quit)
[15:28:24] *** Joins: knifefork (~textual@pool-173-48-186-26.bstnma.fios.verizon.net)
[15:28:26] *** Quits: mac_ified (~mac_ified@rrcs-24-227-77-162.se.biz.rr.com) (Remote host closed the connection)
[15:28:35] <Indentist> bjs, yes I do
[15:28:40] <Indentist> oh sorry :=
[15:28:50] <Indentist> megagarbage yes I do
[15:29:08] <megagarbage> hmm
[15:29:21] *** Joins: zenix_2k2 (~zenix_2k2@42.112.227.34)
[15:29:46] <qswz> python3 -m site --user-site
[15:29:54] <qswz> is this the place where all packages end?
[15:30:01] <qswz> I mean I can be sure to not miss any?
[15:30:06] *** Joins: courrier (~yoan@147.210.204.164)
[15:30:07] *** Quits: scruz (293a6aa4@gateway/web/thelounge/ip.41.58.106.164) (Quit: The Lounge - https://thelounge.chat)
[15:30:10] <zenix_2k2> one question is there anyhow i can un-setblocking in sockets ? like local, addr = sock.accept();local.setblocking(0);#un-set here... cause setblocking() usually causes me "Resources temporarily unavailable"
[15:30:19] *** Joins: nkouevda (~nkouevda@8.25.197.65)
[15:30:25] <zenix_2k2> and even tho it sounds weird and non sense but i really do need that
[15:31:26] <timdiels> Wooble: Thanks, then how would you suggest I run a script which creates a bunch of stored routines (at the end of Django migrations)?
[15:31:29] <Borw3> Hello guys, why 15*numpy.array(someListOfStrings) fail? I am trying to learn AI by reading Machine Learning in action.
[15:31:47] *** Joins: maiz (~maiz@197.201.143.194)
[15:31:47] *** Quits: maiz (~maiz@197.201.143.194) (Max SendQ exceeded)
[15:31:52] *** Joins: uttam (~uttam@116.193.133.53)
[15:31:55] <timdiels> Wooble: The idea is to automate it so I can't forget
[15:32:11] <Siecje> Borw3: Does numpy.array(someListOfStrings) work?
[15:32:33] *** Joins: r29v (~textual@c-67-172-115-195.hsd1.ca.comcast.net)
[15:32:51] *** Joins: kyrix (~ashwoods@84-112-127-24.cable.dynamic.surfer.at)
[15:33:12] *** Quits: Zaab1t (~Thunderbi@unaffiliated/zaab1t) (Quit: Zaab1t)
[15:33:17] <Borw3> Siecje: Yes it returns a list of numpy.array() with dtype=<U10
[15:33:30] <Wooble> timdiels: I'd probably use the same database driver as django and send the commands through that.
[15:33:39] *** Joins: maiz (~maiz@197.201.143.194)
[15:33:40] *** Quits: maiz (~maiz@197.201.143.194) (Max SendQ exceeded)
[15:33:53] *** Quits: lumm (~lumm@nem77-1-82-240-251-72.fbx.proxad.net) (Ping timeout: 255 seconds)
[15:34:11] <zenix_2k2> so hi ? is there anyhow
[15:34:13] <Wooble> timdiels: https://stackoverflow.com/questions/44114931/running-a-sql-file-after-migrations-in-django :)
[15:34:32] *** Quits: maroloccio (~marolocci@216.red-88-8-32.dynamicip.rima-tde.net) (Quit: WeeChat 2.1)
[15:35:04] *** Quits: JudeauChop (~JudeauCho@2601:282:8300:18fe:f871:1f4c:dafe:1207) (Quit: WeeChat 1.4)
[15:35:15] *** Quits: ironfroggy (~ironfrogg@python/site-packages/ironfroggy) (Ping timeout: 245 seconds)
[15:35:22] *** Quits: Venomen (~venomen@unaffiliated/venomen) (Remote host closed the connection)
[15:35:43] *** Quits: uttam (~uttam@116.193.133.53) (Client Quit)
[15:35:49] *** Joins: techalchemy (~Hawkerz@unaffiliated/hawkerz)
[15:35:57] *** Joins: Venomen (~venomen@unaffiliated/venomen)
[15:36:00] *** Joins: uttam (~uttam@116.193.133.53)
[15:36:13] <timdiels> Wooble: ah I hadn't expected a source statement to work in that, so does that mean DB-API supports sourcing too?
[15:36:38] *** Joins: noobineer (~noobineer@d74205.tidewater.net)
[15:36:54] <timdiels> Wooble: I'll give it a shot
[15:37:40] *** Joins: GiLgAmEzH (~gilgamezh@unaffiliated/gilgamezh)
[15:37:41] <Wooble> timdiels: well I mean it's stack overflow so quite possibly they never tested it before posting or upvoting and accepting...
[15:37:57] <Wooble> Not that I'm cynical or anything.
[15:38:11] *** Joins: lompik (~lompik@unaffiliated/lompik)
[15:38:12] <timdiels> :D
[15:38:44] *** Joins: enterprisey (~enterpris@wikipedia/enterprisey)
[15:38:45] *** Joins: twandy (~Thunderbi@2606:7400:c16:0:7121:88b6:736a:dfff)
[15:39:06] <timdiels> Wooble: DB-API doesn't work, but judging by the comments RunSQL uses sqlparse, probably to split the statements and feed them one by one over the cursor
[15:39:14] *** Quits: twandy (~Thunderbi@2606:7400:c16:0:7121:88b6:736a:dfff) (Client Quit)
[15:39:34] *** Joins: cagomez (~cagomez@sb0-cf9a61b1.dsl.impulse.net)
[15:39:47] *** Quits: Tichodroma (~lutz@fsf/member/Tichodroma) (Quit: leaving)
[15:40:15] *** Quits: Venomen (~venomen@unaffiliated/venomen) (Ping timeout: 245 seconds)
[15:40:22] *** Joins: shakotan (~shakotn@193.64.190.190)
[15:40:26] *** Quits: ferdna (~ferdna@68-73-71-246.lightspeed.elpstx.sbcglobal.net) (Quit: Leaving)
[15:40:45] *** Joins: jb1123 (~Thunderbi@2a02:a03f:5230:2400:25a9:5be1:8be7:d72a)
[15:41:05] *** Joins: rsrx (~rsrx@95.87.244.158)
[15:41:14] *** Joins: howlymowly (~tom@x55b61c90.dyn.telefonica.de)
[15:41:31] *** Joins: medard (~misof@147.175.213.164)
[15:42:22] *** Joins: r4ulrm (~administr@mail.klonal.com.ar)
[15:42:39] *** Quits: r29v (~textual@c-67-172-115-195.hsd1.ca.comcast.net) (Quit: r29v)
[15:43:08] <timdiels> Wooble: confirmed https://github.com/django/django/blob/c1c163b42717ed5e051098ebf0e2f5c77810f20e/django/db/backends/base/operations.py#L292
[15:43:28] <zenix_2k2> so hi ?
[15:44:21] *** Quits: sdfgsd_ (~root@213.74.82.169) (Ping timeout: 256 seconds)
[15:44:43] *** Quits: shakotan (~shakotn@193.64.190.190) (Ping timeout: 256 seconds)
[15:44:48] *** Joins: EricPoehlsen (~EchoPapa@88.128.81.125)
[15:46:27] *** Quits: ibiam (~ibiam@105.112.89.154) (Ping timeout: 240 seconds)
[15:47:05] *** Quits: Haudegen (~quassel@212-186-77-29.static.upcbusiness.at) (Remote host closed the connection)
[15:47:10] *** Quits: EchoPapa (~EchoPapa@88.128.81.125) (Ping timeout: 264 seconds)
[15:47:37] *** Joins: light2yellow (~l2y@185.220.70.173)
[15:48:22] *** Quits: edne (~edne@net-2-42-74-190.cust.vodafonedsl.it) (Ping timeout: 264 seconds)
[15:48:54] *** Quits: toxinu (uid217298@gateway/web/irccloud.com/x-spdgrienqsblhtzk) (Quit: Connection closed for inactivity)
[15:49:45] <Wooble> zenix_2k2: the setblocking call is throwing that error? Got a traceback?
[15:49:55] *** Joins: arkaros (~arkaros@h-56-4.A137.corp.bahnhof.se)
[15:50:15] *** Joins: AvianFlu (~avianflu@freedom.sexy)
[15:50:26] *** Joins: claudiop (~claudio@2001:8a0:70e1:7c01:d635:e938:8a25:bbed)
[15:50:44] <zenix_2k2> i mean after local.setblocking(0) ( with local as the socket object ) then it throws something like "Resources temporarily unavailable" when i tried "response = local.recv(2000)"
[15:51:05] <AndroidKitKat> Let's say i wanted to stupidly run a subprocess.Popen() with using shell=True, would I do it like this? `subprocess.Popen(['pdftotext', sys.argv[-1],'temp/temp.txt'], shell=True)`
[15:51:07] <Wooble> zenix_2k2: then there was nothing to read. That's what setting non-blocking is supposed to do.
[15:51:13] <AndroidKitKat> I'm getting errors
[15:51:18] <Wooble> zenix_2k2: have you considered not using the socket module directly?
[15:51:20] <AndroidKitKat> well, namely it wont work
[15:51:29] *** Joins: jcarl43 (~jcarl@vpn-ca01.nbsig.com)
[15:51:36] *** Joins: ibiam (~ibiam@105.112.89.154)
[15:51:38] *** Joins: nibble_zero (~nibble_ze@37.244.231.177)
[15:51:44] *** Joins: crypiehef (~crypiehef@rrcs-70-60-204-106.midsouth.biz.rr.com)
[15:51:50] <Wooble> AndroidKitKat: shell=True expects a string containing the entire thing passed to the shell, not a list.
[15:51:56] <AndroidKitKat> ah
[15:52:11] *** Quits: crypiehef (~crypiehef@rrcs-70-60-204-106.midsouth.biz.rr.com) (Read error: Connection reset by peer)
[15:52:14] <AndroidKitKat> so that would mean I could use an variable in my program?
[15:52:21] *** Joins: cjoy (~anonymous@HSI-KBW-046-005-019-036.hsi8.kabel-badenwuerttemberg.de)
[15:52:21] <AndroidKitKat> s/could/could not
[15:52:29] <Wooble> AndroidKitKat: you can make the string with string formatting.
[15:52:41] <zenix_2k2> Wooble: well i know that it was because it was nothing to read that is why i am asking is there anyhow to unblock it, and yes i know that module is bad but my entire project is ACCIDENTALLY written with it and that is the current problem i am having and probably the last so i am not intending to switch
[15:52:42] <claudiop> Hi. I have a bunch of regex expressions defined in functions which are executed very very often. Since Python isn't JITed is it advantageous to try to put them on a definition file apart? The expressions would get compiled the moment the file is imported and never again for as long as they remain in scope, correct?
[15:52:46] <zenix_2k2> maybe on the next projects, yes
[15:52:56] *** Quits: edrocks (~ed@173.169.31.48) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[15:52:57] *** Joins: crypiehef (~crypiehef@rrcs-70-60-204-106.midsouth.biz.rr.com)
[15:53:10] *** Quits: kyrix (~ashwoods@84-112-127-24.cable.dynamic.surfer.at) (Ping timeout: 245 seconds)
[15:53:19] <timdiels> Wooble: I think you were right, that SO answer doesn't work
[15:53:32] *** Quits: KOLANICH (~KOLANICH@unaffiliated/kolanich) (Ping timeout: 256 seconds)
[15:53:32] *** Joins: Bahrouz (~Bahrouz@unaffiliated/bahrouz)
[15:53:35] <AndroidKitKat> I'll have to figure that out. I found out that this line is problematic so I've got to fix it
[15:53:35] *** Quits: noobineer (~noobineer@d74205.tidewater.net) (Ping timeout: 276 seconds)
[15:54:43] *** Quits: codesoup (~codesoup@2607:fea8:e220:70:8060:ed88:7732:b225) (Read error: Connection reset by peer)
[15:54:50] *** Quits: LambaInsaan (~lambainsa@115.249.71.2) (Ping timeout: 260 seconds)
[15:54:58] *** Quits: arkaros (~arkaros@h-56-4.A137.corp.bahnhof.se) (Ping timeout: 264 seconds)
[15:55:00] *** Quits: darkhanb (~darkhanb@ip68-224-95-5.lv.lv.cox.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[15:55:08] <Wooble> zenix_2k2: what exactly do you want to happen if there's nothing to read? You can catch that exception, use the select module, or just not make it nonblocking...
[15:55:13] *** Quits: IanLiu (~IanLiu@189-69-38-63.dsl.telesp.net.br) (Ping timeout: 248 seconds)
[15:55:30] *** Quits: rudrab (~rudrab@14.139.59.140) (Quit: rudrab)
[15:55:34] *** Joins: semeion (~semeion@unaffiliated/semeion)
[15:56:51] *** Quits: lulzake (~lulzake@gateway/tor-sasl/lulzake) (Remote host closed the connection)
[15:57:03] <zenix_2k2> so can i make it nonblocking when i already made it blocking... ?
[15:57:41] <Wooble> zenix_2k2: you just call .setblocking with a non-zero value...
[15:58:19] *** Joins: sdfgsd (~root@213.74.82.169)
[15:59:13] <zenix_2k2> i mean i used setblocking because i was having something like this --> https://pastebin.com/x1LypDMq
[15:59:14] <infobob> https://paste.pound-python.org/show/eo5qFG7VunjGSWJDoG7y/ (repasted for zenix_2k2)
[15:59:23] <zenix_2k2> and does that necessarily require setblocking ?
[15:59:38] *** Quits: akkadian (~akkadian@unaffiliated/akkadian) (Quit: akkadian)
[16:00:57] *** Joins: schemanic (~schemanic@2600:1000:b115:dfeb:1577:e049:1e62:b29f)
[16:01:30] *** Quits: tiwula (~lane@184.170.76.198) (Ping timeout: 245 seconds)
[16:01:52] *** Joins: HoultonDev_ (5219e6fb@gateway/web/freenode/ip.82.25.230.251)
[16:01:57] *** Quits: csed (~CSED]@cbg-off-client.mpi-cbg.de) (Ping timeout: 240 seconds)
[16:02:13] *** Joins: roofy (~roofy@2600:1700:89a0:8ae0::45)
[16:03:09] *** Quits: jb1123 (~Thunderbi@2a02:a03f:5230:2400:25a9:5be1:8be7:d72a) (Ping timeout: 255 seconds)
[16:03:43] <timdiels> Managed to make it work with that prepare_sql_script
[16:04:24] *** Quits: mujjingun (uid228218@gateway/web/irccloud.com/x-kcfetebghflncmlr) (Quit: Connection closed for inactivity)
[16:04:56] *** Quits: naxuroqa (~naxuroqa@gateway/tor-sasl/naxuroqa) (Quit: brought to you by Carl's Jr.)
[16:05:18] *** meandi_3 is now known as meandi
[16:05:29] *** Quits: DirtyCajun (~DirtyCaju@99.40.228.99) (Quit: Leaving)
[16:05:41] *** Quits: schemanic (~schemanic@2600:1000:b115:dfeb:1577:e049:1e62:b29f) (Read error: Connection reset by peer)
[16:05:46] *** canarts is now known as stranac
[16:05:49] *** Joins: DirtyCajun (~DirtyCaju@99.40.228.99)
[16:05:56] *** Quits: toxync04 (~toxync04@124.166.232.109) (Ping timeout: 276 seconds)
[16:07:04] *** Joins: schemanic (~schemanic@2600:1000:b115:dfeb:1577:e049:1e62:b29f)
[16:07:23] *** Quits: GiLgAmEzH (~gilgamezh@unaffiliated/gilgamezh) (Ping timeout: 256 seconds)
[16:07:37] *** Joins: jcjordyn120 (~jcjordyn1@unaffiliated/jcjordyn120)
[16:08:06] *** Quits: GucciBandana (~GucciBand@78-57-205-76.static.zebra.lt) (Ping timeout: 255 seconds)
[16:08:24] *** Joins: rudrab (~rudrab@14.139.59.140)
[16:08:42] *** Joins: dxiri (~dxiri@23.79.232.14)
[16:08:46] *** Quits: s14ve (~s14ve@80.188.244.110) (Ping timeout: 264 seconds)
[16:09:52] *** Joins: cdown_ (~cdown@199.201.66.5)
[16:10:32] *** Quits: Bendr (~Bendr@unaffiliated/innocent99) (Ping timeout: 256 seconds)
[16:10:39] *** Joins: tbcr (quassel@nat/redhat/x-nitxapigyljmzorl)
[16:11:20] *** Joins: paradoxguitarist (uid288518@gateway/web/irccloud.com/x-dtttomxwhfohljcx)
[16:12:17] *** Quits: SopaXorzTaker (~SopaXorzT@unaffiliated/sopaxorztaker) (Remote host closed the connection)
[16:12:25] *** cdown_ is now known as cdown
[16:12:37] *** Quits: haso2 (~Thunderbi@162.79-160-5.customer.lyse.net) (Ping timeout: 265 seconds)
[16:12:51] <Indentist> why am I getting indent error here on line 5? https://paste.debian.net/1030997/ same code has no errors in another script
[16:13:03] *** Joins: cjohnson (~cjohnson@li133-72.members.linode.com)
[16:13:18] <Wooble> Indentist: the block after the while needs to be indented.
[16:13:20] *** Quits: HoultonDev_ (5219e6fb@gateway/web/freenode/ip.82.25.230.251) (Ping timeout: 260 seconds)
[16:13:45] *** Joins: akmod (~akmod@204.246.145.50)
[16:13:59] <Indentist> Wooble, this is the paste with error included : https://paste.debian.net/1030998/
[16:14:02] *** Quits: zmt01 (~zmt@c-98-248-234-34.hsd1.ca.comcast.net) (Read error: Connection reset by peer)
[16:14:19] *** Quits: ksuthar (uid303433@gateway/web/irccloud.com/x-xosqcccggzmhmahj) (Quit: Connection closed for inactivity)
[16:14:39] <Wooble> Indentist: yes. If you have a line with : at the end, the next line will need to have more whitespace than that line.
[16:14:52] *** Joins: beardedeagle (~beardedea@64.202.161.57)
[16:14:54] <Wooble> (any decent editor will indent more as soon as you type the while line.
[16:14:56] *** Quits: nkouevda (~nkouevda@8.25.197.65) (Ping timeout: 276 seconds)
[16:14:57] *** Joins: tiwula (~lane@184.170.76.198)
[16:15:06] *** Joins: zmt01 (~zmt@c-98-248-234-34.hsd1.ca.comcast.net)
[16:15:50] *** Quits: newrg (~rajat@unaffiliated/newrg) (Ping timeout: 260 seconds)
[16:15:53] *** Quits: beardedeagle (~beardedea@64.202.161.57) (Client Quit)
[16:16:08] <Indentist> Wooble, indeed, I oversaw it, but still get this error this time: https://paste.debian.net/1030999/
[16:16:17] *** Joins: beardedeagle (~beardedea@64.202.161.57)
[16:16:35] <cjohnson> https://gist.github.com/chrisjohnson/7b3c4c422fc16ff65901ef1e086f5895  Is this idiomatic python?
[16:16:35] *** Joins: nkouevda (~nkouevda@8.25.197.65)
[16:16:45] <Wooble> Indentist: any decent editor also won't let you insert tab characters.
[16:16:48] *** Quits: nkouevda (~nkouevda@8.25.197.65) (Read error: Connection reset by peer)
[16:16:57] *** Quits: dan2wik (dan2wik@unaffiliated/dan2wik) (Ping timeout: 240 seconds)
[16:16:58] *** Joins: rememberYou (~user@unaffiliated/rememberyou)
[16:17:09] *** Joins: arkaros (~arkaros@h-56-4.A137.corp.bahnhof.se)
[16:17:35] *** Quits: RickDeckard (~tgburrin@108.60.152.194) (Ping timeout: 260 seconds)
[16:17:40] *** Quits: detseg (~segv@35.128.29.238) (Quit: o/)
[16:18:02] <cjohnson> Whoops, updated gist. matches is a list of 'YYYY-MM-DD' and I want only those dates that are today or later
[16:18:23] <cjohnson> so '2018-06-25', '2018-06-27', '2018-08-28' I should get the second two
[16:18:25] *** Quits: ibiam (~ibiam@105.112.89.154) (Ping timeout: 265 seconds)
[16:18:33] <Wooble> Indentist: remove any tabs and put in spaces.
[16:18:35] <Indentist> Wooble, I am moving each line 4 spaces ahead. I dont use any tabs. still the same error
[16:18:41] *** Quits: ageis (~kevin@cointel.pro) (Quit: exit(1); echo 'https://cointel.pro' > /dev/null; x-www-browser 'https://twitter.com/ageis')
[16:18:49] <SnoopJeDi> cjohnson, nothing there looks amiss. The only change I *might* make is giving the `e.activated_at` datetime object its own name
[16:19:16] <Indentist> Wooble ,sorry, now it worked
[16:19:19] *** Joins: dan2wik (dan2wik@unaffiliated/dan2wik)
[16:19:22] <cjohnson> SnoopJeDi: Updated gist, I had it wrong. it's just a list of strings, not objects
[16:19:27] *** Joins: shafox (uid28637@gateway/web/irccloud.com/x-ovzdzqswmtguzljk)
[16:19:31] <jarthur> cjohnson: looks pythonic enough for me. Python conventions encourage use of vertical space over chaining things, so you could break it up the datetime part I guess and the cls() construction… but your structure makes sense.
[16:19:59] <zenix_2k2> so does the setblocking really does necessary ?
[16:20:03] <cjohnson> Cool thanks folks
[16:20:10] *** Quits: sdfgsd (~root@213.74.82.169) (Ping timeout: 264 seconds)
[16:20:12] <SnoopJeDi> cjohnson, I'm talking about the object generated in the comprehension, but what I said was irrelevant anyway *because* it's in a comprehension
[16:21:01] <jarthur> cjohnson: there may be some more efficient ways of doing the date thing you're doing. May want to see if datetime.date is a better fit than datetime.datetime.
[16:21:14] <cjohnson> right
[16:21:22] <cjohnson> Performance is not a hyper concern here, just readability
[16:21:38] <cjohnson> and being able to enforce a format
[16:21:44] <cjohnson> This throws if I don't match the format which is good
[16:21:46] *** Joins: holger__ (~holger__@dslb-088-073-060-162.088.073.pools.vodafone-ip.de)
[16:21:51] *** Quits: arkaros (~arkaros@h-56-4.A137.corp.bahnhof.se) (Ping timeout: 240 seconds)
[16:21:53] *** Quits: bomb-on (~bomb-on@adsl74-86.du.heimsnet.is) (Quit: SO LONG, SUCKERS!)
[16:21:56] *** Quits: MeagerChieftan (~MeagerChi@46.17.59.194) (Quit: Leaving)
[16:22:04] *** Joins: cryptic (~cryptic@142.196.170.87)
[16:22:13] *** Joins: RickDeckard (~tgburrin@152.179.78.138)
[16:22:18] *** Quits: stefanc_diff (~stefanc_d@193.105.212.250) (Ping timeout: 260 seconds)
[16:22:52] *** Quits: manuelschneid3r (~manuelsch@p57A39159.dip0.t-ipconnect.de) (Ping timeout: 268 seconds)
[16:22:53] *** Joins: publio (~publio@unaffiliated/publio)
[16:23:26] *** Joins: WeiJunLi (~weijunli@41.72.8.185)
[16:23:42] <SnoopJeDi> I don't think that 'efficient' was about performance so much as how clearly you can ask for "The day that is today". e.g. `datetime.date.today()`
[16:23:51] *** Joins: darkhanb (~darkhanb@ip24-253-111-229.lv.lv.cox.net)
[16:23:57] <cjohnson> Will that return today at midnight?
[16:24:21] <cjohnson> Ah, so it does :)
[16:24:23] <cjohnson> I like it
[16:24:56] *** Quits: gehn (gehn@gateway/vpn/privateinternetaccess/gehn) (Quit: Leaving)
[16:25:01] <SnoopJeDi> It returns a date object, not a datetime object. It's a calendar day, so it's useful for calendar-day stuff
[16:25:08] <cjohnson> Perfect I agree
[16:25:26] *** Joins: toxinu (uid217298@gateway/web/irccloud.com/x-sdhnqubsbiehcbxg)
[16:25:30] *** Joins: edrocks (~ed@173.169.31.48)
[16:25:36] <cjohnson> what is the datetime.date equivalent for strptime?
[16:25:56] *** Parts: shafox (uid28637@gateway/web/irccloud.com/x-ovzdzqswmtguzljk) ()
[16:26:04] *** Quits: edrocks (~ed@173.169.31.48) (Client Quit)
[16:26:36] *** Joins: unpythonic (~unpythoni@64.84.68.252)
[16:26:37] *** Quits: rudrab (~rudrab@14.139.59.140) (Quit: rudrab)
[16:26:46] *** Quits: yesno (~amrqx@unaffiliated/amrqx) (Disconnected by services)
[16:26:59] <SnoopJeDi> not sure it has one, but you could call .date() on the result of your strptime(), too
[16:27:13] *** Quits: jokoon (~jokoon@2a01:e35:2e08:9f10:ec00:dc9c:c79b:7bc0) (Quit: Leaving)
[16:27:13] *** Quits: Popzi (~Thunderbi@unaffiliated/popzi) (Quit: Popzi)
[16:27:15] *** Joins: yesno_ (~amrqx@unaffiliated/amrqx)
[16:27:17] *** Joins: edrocks (~ed@173.169.31.48)
[16:27:31] <cjohnson> Ah, less valuable then, as it's shifting the type coercion from one side to the other
[16:27:33] *** Quits: edrocks (~ed@173.169.31.48) (Client Quit)
[16:27:54] <SnoopJeDi> Yea I wouldn't say anything is really wrong with what you had, but it's helpful to know the rest of the possibility available
[16:27:59] *** Quits: fission6 (~textual@static-173-56-120-142.nycmny.fios.verizon.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[16:28:21] *** Joins: lumm (~lumm@nem77-1-82-240-251-72.fbx.proxad.net)
[16:29:07] *** Quits: u0m3 (~u0m3@188.25.23.74) (Quit: Leaving)
[16:29:42] *** Quits: EricPoehlsen (~EchoPapa@88.128.81.125) (Read error: Connection reset by peer)
[16:29:53] *** Joins: IanLiu (~IanLiu@189-69-38-63.dsl.telesp.net.br)
[16:30:03] *** Quits: howlymowly (~tom@x55b61c90.dyn.telefonica.de) (Ping timeout: 256 seconds)
[16:30:11] *** Quits: stardust85 (~ms580j@144.160.226.94) (Read error: Connection reset by peer)
[16:30:20] *** Joins: Geekologist (~me@unaffiliated/geekologist)
[16:31:22] *** Quits: Dejan (~dejan@unaffiliated/dejan) (Quit: Leaving)
[16:31:31] *** Joins: ibiam (~ibiam@105.112.89.154)
[16:31:34] *** Joins: vidarr (~vidr@unaffiliated/vidr)
[16:32:27] *** Quits: floatingman (~daniel.ne@c-69-137-87-235.hsd1.tn.comcast.net) (Quit: WeeChat 2.1)
[16:32:32] *** Quits: yakiza (~yakiza@dm-cis-060.dur.ac.uk) (Quit: WeeChat 2.0.1)
[16:32:34] *** Joins: sdfgsd (~root@213.74.82.169)
[16:33:20] *** Quits: widp (~widp@49.207.60.104) (Read error: Connection reset by peer)
[16:33:36] *** Joins: leni1 (~herabus@41.210.159.220)
[16:34:13] *** Joins: jlf (~jlf@pdpc/supporter/active/jlf)
[16:34:54] *** Joins: fission6 (~textual@static-173-56-120-142.nycmny.fios.verizon.net)
[16:34:55] *** Quits: kwedel (~kwedel@209.107.210.97) (Quit: kwedel)
[16:35:32] *** Joins: pdtpatrick (~pdtpatric@2620:10d:c090:180::1:5a02)
[16:35:46] *** Joins: ironfroggy (~ironfrogg@python/site-packages/ironfroggy)
[16:35:48] *** Joins: cyoz (~alex@2a02:8109:8f80:756c:fda4:92ff:5b7a:3d61)
[16:36:10] *** Joins: Bendr (~Bendr@unaffiliated/innocent99)
[16:36:43] *** Quits: ibiam (~ibiam@105.112.89.154) (Read error: Connection reset by peer)
[16:37:00] *** Joins: ibiam (~ibiam@105.112.89.154)
[16:37:11] *** Joins: AnySomebody (~AnySomebo@p4FF6AA16.dip0.t-ipconnect.de)
[16:37:53] *** Quits: borkr (~borkr@static130-244.mimer.net) (Quit: Leaving)
[16:38:16] *** Joins: kwedel (~kwedel@209.107.210.95)
[16:38:20] *** Joins: TheManWithNoSock (~paige@71-80-66-240.dhcp.kgpt.tn.charter.com)
[16:38:26] *** Quits: kurkale61 (~kurkale6k@84.45.99.125) (Ping timeout: 256 seconds)
[16:39:12] *** Quits: enriq (~pitagoras@190-186-16-190.fibertel.com.ar) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[16:39:33] *** Joins: al-damiri (uid142631@gateway/web/irccloud.com/x-wldjxluoxvtitkwx)
[16:39:41] *** Quits: teodorg (~teodorg@17751.telnet.bg) (Ping timeout: 265 seconds)
[16:39:47] *** Quits: ralu_ (~ralu@188-230-247-87.dynamic.t-2.net) (Remote host closed the connection)
[16:39:53] *** Joins: RIPEvent (~R@178.165.128.100.wireless.dyn.drei.com)
[16:41:42] *** Quits: streuner (~streuner@gateway/tor-sasl/streuner) (Remote host closed the connection)
[16:41:58] *** Joins: streuner (~streuner@gateway/tor-sasl/streuner)
[16:42:35] *** Quits: courrier (~yoan@147.210.204.164) (Ping timeout: 240 seconds)
[16:42:45] *** Quits: Syzygy (~Syzygy@2001:850:40bc:8000:14fc:2f74:e609:da9a) (Ping timeout: 255 seconds)
[16:46:10] *** Joins: lacrymology (~lacrymolo@181.169.242.82)
[16:46:27] *** Quits: RickDeckard (~tgburrin@152.179.78.138) (Ping timeout: 245 seconds)
[16:47:07] *** Quits: xcm (~xcm@ipa210.225.tellas.gr) (Remote host closed the connection)
[16:47:17] *** Joins: lumm_ (~lumm@2a01:e35:2f0f:b480:1233:2a3b:100:9b4e)
[16:47:46] *** Quits: opsec (~opsec@opsec/opsec) (Ping timeout: 264 seconds)
[16:48:09] *** Quits: lumm (~lumm@nem77-1-82-240-251-72.fbx.proxad.net) (Ping timeout: 268 seconds)
[16:48:10] *** Joins: opsec (~opsec@opsec/opsec)
[16:48:23] *** Quits: antgel (~topdog@141.226.120.30) (Ping timeout: 256 seconds)
[16:48:36] *** Joins: xcm (~xcm@ipa210.225.tellas.gr)
[16:48:51] *** Joins: detseg (~segv@35.128.4.87)
[16:48:55] *** Joins: plexigras (plexigras@gateway/vpn/privateinternetaccess/plexigras)
[16:49:25] *** Joins: teodorg (~teodorg@17751.telnet.bg)
[16:49:45] *** Joins: bomb-on (~bomb-on@139-142-17-89.fiber.hringdu.is)
[16:50:20] *** Joins: m3ddl3r (~Thunderbi@192.30.201.10)
[16:50:33] *** Joins: bm371613 (~bartek@89-64-29-253.dynamic.chello.pl)
[16:50:42] <plexigras> hey i am writing a spell sugestion thing and am currently using startswith on a wordlist that is sorted by how common the words are
[16:51:05] *** Quits: erratic (erratic@shells.yourstruly.sx) (Ping timeout: 240 seconds)
[16:51:25] *** Quits: CodeMouse92 (~JasonMc92@unaffiliated/codemouse) (Quit: Oh freddled gruntbuggly | Thy micturations are to me | As plurdled gabbleblotchits | On a lurgid bee)
[16:51:29] <plexigras> but i would like to have some way to sugest words that are close to a misspelled word aswell
[16:51:34] *** Joins: RickDeckard (~tgburrin@152.179.78.138)
[16:51:45] *** Quits: bluenemo (~bluenemo@unaffiliated/bluenemo) (Ping timeout: 248 seconds)
[16:51:47] *** Quits: lumm_ (~lumm@2a01:e35:2f0f:b480:1233:2a3b:100:9b4e) (Ping timeout: 256 seconds)
[16:51:52] *** Quits: foxmask (uid302052@gateway/web/irccloud.com/x-kcmoicxxfmlsysye) (Quit: Connection closed for inactivity)
[16:52:13] *** Joins: sanketsaurav (~theCreati@122.167.171.45)
[16:53:05] *** Quits: lacrymology (~lacrymolo@181.169.242.82) (Ping timeout: 240 seconds)
[16:53:10] <akk> plexigras: difflib.SequenceMatcher is pretty easy to use.
[16:53:24] <SnoopJeDi> plexigras, I think most spellcheck algorithms use tries, but there's probably a lib for this
[16:54:14] <SnoopJeDi> For computing Levensthetin distance there's also fuzzywuzzy
[16:54:24] <SnoopJeDi> Uh, Levenshtein*
[16:54:25] <plexigras> what about difflib.get_close_matches ?
[16:54:25] <dude-x> i hate how spell checkers are dumb. "descendent" "I have no idea what you're trying to spell" "descendant" "Okay!"
[16:54:51] *** Parts: qswz (~caub@vau06-3-82-247-80-102.fbx.proxad.net) ()
[16:55:05] *** Joins: lacrymology (~lacrymolo@181.169.242.82)
[16:55:31] *** Joins: led_ir22 (~Thunderbi@hotspot10.rywasoft.net)
[16:55:46] *** Joins: gjt343 (~gjt@143.208.165.98)
[16:56:07] *** Quits: inerthia (~inerthia@unaffiliated/inerthia) (Ping timeout: 265 seconds)
[16:56:18] <SnoopJeDi> dude-x, at least spellcheck has a shot at that one. My gmail likes to yell at me about words like "synchrotron" and "symplectic"
[16:56:21] <Indentist> I think I hate indents too much to become a programmer
[16:56:34] <InPhase> dude-x: Both are accepted spellings.
[16:56:46] *** Quits: sanketsaurav (~theCreati@122.167.171.45) (Ping timeout: 264 seconds)
[16:56:50] <InPhase> dude-x: The spellchecker cannot guess your preferences there.
[16:56:55] *** Quits: pdtpatrick (~pdtpatric@2620:10d:c090:180::1:5a02) (Remote host closed the connection)
[16:57:02] <SnoopJeDi> Indentist, are you not using an editor that automatically indents for you?
[16:57:05] *** Quits: lem0n (~lem0n@unaffiliated/lem0n) (Ping timeout: 265 seconds)
[16:57:06] <dude-x> InPhase maybe but i just wanted the spell check to suggest a correct "spelling"
[16:57:17] *** Quits: UnChallengeD (~Tyrant@host-45-net-119-160-119.mobilinkinfinity.net.pk) (Read error: Connection reset by peer)
[16:57:41] <Indentist> SnoopJeDi, no, not until now. but it seems I need to have one
[16:58:09] <Wooble> Indentist: ironic nick then. :P
[16:58:09] <Indentist> I am using gedit which has some python plugins and automates a thing or two. but not indents, as it seems
[16:58:21] <Indentist> Wooble, yes :)
[16:58:39] <SnoopJeDi> ack, gedit and I have a history
[16:58:46] *** Joins: lainon (~lainon@24.159.4.77)
[16:58:48] *** Quits: holger__ (~holger__@dslb-088-073-060-162.088.073.pools.vodafone-ip.de) (Quit: Leaving)
[16:59:05] <Indentist> SnoopJeDi, so it is not an ok one to use?
[16:59:33] *** Quits: PulseAsio (~PulseAsio@dhcp-077-248-071-126.chello.nl) (Remote host closed the connection)
[16:59:40] <SnoopJeDi> Indentist, if you're specifically doing Python things, I *really* like Jupyter, but that might be a bit much. vim/emacs both do fine, and there's also Sublime Text, VSCode, Atom for editors. If you want more IDE-like features, there's PyCharm, Spyder, etc.
[16:59:50] *** Quits: kwedel (~kwedel@209.107.210.95) (Remote host closed the connection)
[17:00:06] <SnoopJeDi> Indentist, sure, it's okay, but I hate indenting too, so writing code without vim auto-indenting for me hurts!
[17:00:08] <Indentist> vim is something to be learned in itself
[17:00:14] * SnoopJeDi shakes fist at PICO-8 editor
[17:00:25] *** Joins: simplyknownasg2 (~simplykno@216.64.160.220)
[17:00:36] *** Quits: BabylonAS (~BabylonAS@176.59.47.182) (Quit: Leaving.)
[17:00:47] <SnoopJeDi> yea, vim/emacs can be a tall order if you want to focus on learning Python, which is why I led with Jupyter
[17:01:34] <Wooble> Indentist: gedit plugins are mostly written in python, so I'd be shocked if there isn't a good one to make it indent correctly.
[17:01:34] *** Quits: iAmerikan (~dwshrewt@unaffiliated/iamerikan) (Ping timeout: 264 seconds)
[17:01:37] *** Joins: Haudegen (~quassel@178.115.237.87)
[17:01:45] *** Quits: schemanic (~schemanic@2600:1000:b115:dfeb:1577:e049:1e62:b29f) (Read error: Connection reset by peer)
[17:01:47] *** Quits: grokjtrip (~jtrip@67.149.63.97) (Ping timeout: 260 seconds)
[17:01:51] <Wooble> (I just use pycharm, or emacs)
[17:01:54] <SnoopJeDi> Yea you can probably configure gedit to do all of it, too
[17:02:05] *** Quits: Mrloafbot_ (mrloafbot@gateway/vpn/privateinternetaccess/mrloafbot/x-21948472) (Ping timeout: 240 seconds)
[17:02:17] <SnoopJeDi> But fussing with editor configuration is time not spent on other things, heh.
[17:02:48] *** Quits: simplyknownasg (~simplykno@216.64.160.220) (Ping timeout: 256 seconds)
[17:03:02] *** Joins: lem0n (~lem0n@unaffiliated/lem0n)
[17:03:20] *** Joins: qwerty1793 (~qwerty179@host86-140-117-168.range86-140.btcentralplus.com)
[17:03:58] *** Quits: humitos (~humitos@152.169.140.157) (Ping timeout: 264 seconds)
[17:03:59] <Indentist> to be honest, all of these look so complicated. I viewed almost all of the named ones. I didnt know where to start. on gedit I can at least see a terminal where I can run the file
[17:03:59] *** Joins: PulseAsio (~PulseAsio@dhcp-077-248-071-126.chello.nl)
[17:04:22] * deniska used gedit for python programming for quite a while
[17:04:36] <SnoopJeDi> deniska, how do you feel about that in hindsight?
[17:04:43] *** Joins: kwedel (~kwedel@209.107.210.95)
[17:04:44] <deniska> SnoopJeDi: it's a fine simple editor
[17:05:11] <deniska> then I accidentally launched vim and couldn't figure out how to quit :)
[17:05:26] <Indentist> same happened to me
[17:05:44] <Indentist> it is q: or something like that
[17:05:51] <Indentist> as far as I remember
[17:06:00] <SnoopJeDi> it's :quit, which can be shortened as :q yes
[17:06:13] *** Joins: Coffee-N-Donuts (~SubXiu@unaffiliated/bacalli)
[17:06:19] *** Quits: Haudegen (~quassel@178.115.237.87) (Ping timeout: 256 seconds)
[17:06:23] <Indentist> SnoopJeDi, thanks :)
[17:06:26] *** Joins: patrickhession20 (d5e9960b@gateway/web/freenode/ip.213.233.150.11)
[17:06:32] *** Joins: lumm (~lumm@nem77-1-82-240-251-72.fbx.proxad.net)
[17:06:54] <Indentist> the cursor was flying to the other corner of screen when I did things that I was used to from a simple editor
[17:07:05] *** Joins: Neobenedict (~Neobenedi@unaffiliated/neobenedict)
[17:07:57] *** Quits: ironfroggy (~ironfrogg@python/site-packages/ironfroggy) (Remote host closed the connection)
[17:07:57] <SnoopJeDi> yea, UX for a first time user is...not good. I mean, it does mention :help on the empty launch screen, but even if someone see's that, they're unlikely to *read* it.
[17:08:23] *** Joins: ironfroggy (~ironfrogg@python/site-packages/ironfroggy)
[17:08:26] <SnoopJeDi> `vimtutor` is a really nice crash course that gets you using the editor inside of an hour, but I understand why people are reluctant to learn an editor
[17:08:42] *** Joins: maslen2 (uid202698@gateway/web/irccloud.com/x-phoxyjnyknbwzvgo)
[17:08:54] <unpythonic> Indentist: perhaps you should try something like PyCharm.  It's fairly simple to use, and it'll grow with you as you get more experienced.  That said, I think learning vim is worth the time.
[17:08:55] <SnoopJeDi> Jupyter is a nice middleground because it has vim/emacs bindings for those who want them, a nice plugin structure, interactivity, ability to open terminals, etc.
[17:09:03] <plexigras> how can i do `[x for x in y if z]` and have it break after 20 sucessfull additions of x to the array?
[17:09:08] <SnoopJeDi> PyCharm is also quite nice in terms of things like debugging
[17:09:18] *** Joins: internalsplit (~internals@c-24-16-133-129.hsd1.wa.comcast.net)
[17:09:28] <Wooble> plexigras: you'll have to write out the for loop.
[17:09:34] *** Quits: Darkhunter (~mmojzis@ip-86-49-120-171.net.upcbroadband.cz) (Quit: Leaving.)
[17:09:36] *** Joins: Haudegen (~quassel@178.115.237.87)
[17:09:38] <qwerty1793> Hi, has anyone been able to install pandas in pypy? Whenever I run "pypy -m pip install pandas --user" it fails with error: command 'cc' failed with exit status 1
[17:09:54] *** Joins: mmfood (~mmfood@46.246.116.189)
[17:10:04] <Wooble> plexigras: (well... as far as I know. there may be some ugly way to get around that.)
[17:10:08] <Indentist> no, I read it, and I was able to do a few things by following help texts. I believe one can learn it by going through it..but probably because I didn't really need it until now, it was all I could call experience with vim so far.
[17:10:16] <SnoopJeDi> itertools probably has something?
[17:10:30] *** Joins: shakotan (~shakotn@193.64.190.190)
[17:10:40] *** Quits: Mikee_C (~michaelc@cpc82911-enfi22-2-0-cust257.20-2.cable.virginm.net) (Ping timeout: 260 seconds)
[17:10:43] <Wooble> islicing a generator expression, I guess.
[17:10:55] <SnoopJeDi> Indentist, good on you! Hopefully you find something to soothe the ache of manually indenting...
[17:11:08] *** Quits: lumm (~lumm@nem77-1-82-240-251-72.fbx.proxad.net) (Remote host closed the connection)
[17:11:19] *** Joins: realbadhorse (~realuname@183.87.124.175)
[17:11:25] *** Quits: gjt343 (~gjt@143.208.165.98) (Ping timeout: 256 seconds)
[17:11:27] <Indentist> probably as one gets into programming, its usefulness will emerge more for beginners.
[17:11:30] *** Joins: manuelschneid3r (~manuelsch@p57A39159.dip0.t-ipconnect.de)
[17:12:05] <plexigras> Wooble: can you give me an example of how i would do it without array comprehansion?
[17:12:19] *** Joins: sveinse (~sveinse@156.92-221-160.customer.lyse.net)
[17:12:20] *** Joins: derk0pf (~derk0pf@p57ADCC33.dip0.t-ipconnect.de)
[17:13:23] *** Quits: crypiehef (~crypiehef@rrcs-70-60-204-106.midsouth.biz.rr.com) (Quit: exit())
[17:13:38] *** Quits: Allegretto (~allegrett@212.52.160.157) (Ping timeout: 260 seconds)
[17:13:57] <Wooble> plexigras:  list(itertools.islice((x for x in y if z), 0, 20)) is probably the cleanest.
[17:13:57] *** Quits: zmt01 (~zmt@c-98-248-234-34.hsd1.ca.comcast.net) (Read error: Connection reset by peer)
[17:14:05] *** Quits: tuxd00d (~tuxd00d@unaffiliated/tuxd00d) (Quit: tuxd00d)
[17:14:14] *** Joins: rpkilby (~rpkilby@cpe-76-182-45-76.nc.res.rr.com)
[17:14:22] *** Quits: streuner (~streuner@gateway/tor-sasl/streuner) (Remote host closed the connection)
[17:14:36] *** Joins: streuner (~streuner@gateway/tor-sasl/streuner)
[17:14:39] *** Joins: gopar (~gopar@c-73-170-87-193.hsd1.ca.comcast.net)
[17:14:40] <plexigras> wouldn't for and then append be faster?
[17:14:44] *** Joins: zmt01 (~zmt@c-98-248-234-34.hsd1.ca.comcast.net)
[17:14:55] *** Joins: mahdiiiix__ (~mahdi@5.74.3.143)
[17:15:00] <Wooble> I doubt it, but feel free to profile.
[17:15:01] *** Quits: Belxjander (~Belxjande@sourcemage/Mage/Abh-Elementalist) (Quit: AmigaOSv4.1.6+//PowerPC native)
[17:15:20] *** Joins: Belxjander (~Belxjande@sourcemage/Mage/Abh-Elementalist)
[17:16:12] *** Quits: CtrlC (~CtrlC@unaffiliated/ctrlc) (Max SendQ exceeded)
[17:16:20] *** Joins: CtrlC (~CtrlC@unaffiliated/ctrlc)
[17:16:33] *** Joins: YuGiOhJCJ (~YuGiOhJCJ@gateway/tor-sasl/yugiohjcj)
[17:16:41] <Indentist> Wooble, I added almost all the plugins that provide ease, but no auto-indent happening
[17:16:45] <Indentist> I mean with gedit
[17:17:28] *** Quits: o_lalertom (~o_lalerto@moonstonemedical/developer/o-lalertom) (Quit: Leaving)
[17:17:32] *** Joins: widp (~widp@49.207.60.104)
[17:17:40] *** Quits: simplyknownasg2 (~simplykno@216.64.160.220) (Ping timeout: 260 seconds)
[17:17:45] *** Joins: dclayto1 (~dclayto1@mail.digitalsmiths.com)
[17:17:46] *** Quits: tocka (uid198544@gateway/web/irccloud.com/x-ulcnuvmkhgizncny) (Quit: Connection closed for inactivity)
[17:17:50] *** Joins: renlo (~lhoward@4.14.106.6)
[17:18:07] *** Quits: _ADN_ (~username@5.148.34.186) (Ping timeout: 245 seconds)
[17:18:26] *** Quits: mahdiiiix__ (~mahdi@5.74.3.143) (Client Quit)
[17:18:39] *** Quits: xcm (~xcm@ipa210.225.tellas.gr) (Read error: Connection reset by peer)
[17:19:12] *** Joins: xcm (~xcm@ipa210.225.tellas.gr)
[17:19:50] *** Quits: Mart|n (~Mart|n@79-68-33-46.dynamic.dsl.as9105.com) (Read error: Connection reset by peer)
[17:20:08] *** Quits: musicnate (~Thunderbi@CPEac202e24c153-CMac202e24c150.cpe.net.fido.ca) (Quit: musicnate)
[17:20:57] *** Joins: rudrab (~rudrab@14.139.59.140)
[17:21:37] *** Joins: blyat (~blyat@cpe-172-72-228-93.carolina.res.rr.com)
[17:22:18] *** Joins: sanketsaurav (~theCreati@122.167.171.45)
[17:23:16] *** Quits: gloomy (~Gloomy@ip-81-11-163-53.dsl.scarlet.be) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[17:23:25] *** Joins: chris11 (6052648a@gateway/web/freenode/ip.96.82.100.138)
[17:23:57] <realbadhorse> how do i do something like this in python?
[17:24:12] *** Joins: Beanzilla (~Beanzilla@unaffiliated/beanzilla)
[17:24:13] *** Joins: enriq (~pitagoras@190-186-16-190.fibertel.com.ar)
[17:24:17] <realbadhorse> │ curl -F "file=@pic.jpg"  https://website.com/v1/Upload
[17:24:35] *** Quits: isokee (~isokee@unaffiliated/isokee) (Ping timeout: 240 seconds)
[17:25:10] *** Quits: shakotan (~shakotn@193.64.190.190) (Ping timeout: 268 seconds)
[17:25:21] *** Quits: Spaaaaaaaaaaaace (~Spaaaaaaa@unaffiliated/spaaaaaaaaaaaace) (Ping timeout: 240 seconds)
[17:25:45] <chris11> I've got an attribute I'd like to access dynamically, model.user.id. How do I do that?
[17:25:50] *** Joins: malachi (malcontent@gateway/vpn/privateinternetaccess/malcontent)
[17:26:12] <Wooble> chris11: getattr()
[17:26:13] *** Quits: [itchyjunk] (~itchyjunk@unaffiliated/itchyjunk/x-1640057) (Remote host closed the connection)
[17:26:22] <deniska> chris11: getattr() is a thing, but don't overuse it, and perhaps restrict the input if it goes from the user
[17:27:05] <chris11> Thanks, I looked at that, but my issue is figuring out how to access subclass attributes, eg model.user.id not model.user
[17:27:07] *** Joins: davr0s (~textual@host86-138-235-28.range86-138.btcentralplus.com)
[17:27:25] *** Quits: kevr (~kevr@unaffiliated/kevr) (Remote host closed the connection)
[17:27:25] *** Quits: con3 (~quassel@ml.sun.ac.za) (Read error: Connection reset by peer)
[17:27:35] *** Joins: inerthia (~inerthia@unaffiliated/inerthia)
[17:27:44] *** Joins: kevr (~kevr@unaffiliated/kevr)
[17:27:51] *** Quits: micutzu (~dmr@unaffiliated/micutzu) (Ping timeout: 256 seconds)
[17:28:00] *** Quits: Borw3 (2948c222@gateway/web/freenode/ip.41.72.194.34) (Ping timeout: 260 seconds)
[17:28:09] <deniska> chris11: well, you can call getattr on getattr output…
[17:28:20] *** Quits: dxiri (~dxiri@23.79.232.14) (Read error: Connection reset by peer)
[17:28:39] *** Joins: paneladeensaio (~filiperib@perseu.dem.uc.pt)
[17:28:41] <chris11> hm, I'll try that.
[17:29:23] *** Joins: GiLgAmEzH (~gilgamezh@unaffiliated/gilgamezh)
[17:29:41] <Wooble> realbadhorse: http://docs.python-requests.org/en/master/user/quickstart/#post-a-multipart-encoded-file
[17:29:45] *** Quits: patrickhession20 (d5e9960b@gateway/web/freenode/ip.213.233.150.11) (Ping timeout: 260 seconds)
[17:29:58] *** xcm is now known as Guest56762
[17:29:58] *** Quits: Guest56762 (~xcm@ipa210.225.tellas.gr) (Killed (hitchcock.freenode.net (Nickname regained by services)))
[17:30:05] *** Joins: dxiri (~dxiri@23.79.232.14)
[17:30:08] *** Joins: xcm (~xcm@ipa210.225.tellas.gr)
[17:30:45] *** Parts: zenix_2k2 (~zenix_2k2@42.112.227.34) ("Leaving")
[17:30:46] *** Joins: methuzla (~methuzla@207.118.5.195)
[17:31:10] *** Joins: bzdocha (~bzdocha__@adsl-dyn241.78-99-15.t-com.sk)
[17:31:11] *** Quits: bzdocha (~bzdocha__@adsl-dyn241.78-99-15.t-com.sk) (Max SendQ exceeded)
[17:31:12] *** Joins: aalmazan (uid180785@gateway/web/irccloud.com/x-gjtbddyzsfruupks)
[17:31:15] *** Quits: filiperibeiro (~filiperib@perseu.dem.uc.pt) (Ping timeout: 256 seconds)
[17:31:37] *** Joins: bzdocha (~bzdocha__@adsl-dyn241.78-99-15.t-com.sk)
[17:31:49] *** Quits: Alexander-47u (~Alexander@85.203.44.33) (Remote host closed the connection)
[17:32:15] *** Quits: inerthia (~inerthia@unaffiliated/inerthia) (Ping timeout: 260 seconds)
[17:32:33] *** Joins: micutzu (~dmr@unaffiliated/micutzu)
[17:33:02] *** Quits: amirpro (~amirpro@41.235.74.32) (Remote host closed the connection)
[17:33:08] *** Joins: Alexander-47u (~Alexander@85.203.44.82)
[17:33:29] *** Joins: Ikoru (~Ikoru@host86-155-120-225.range86-155.btcentralplus.com)
[17:33:31] *** Quits: LostSoul (~LostSoul@78-11-243-90.static.ip.netia.com.pl) (Ping timeout: 256 seconds)
[17:33:41] *** Quits: dxiri (~dxiri@23.79.232.14) (Read error: Connection reset by peer)
[17:33:43] *** Joins: ryan413 (~ryan413@199.249.230.32)
[17:33:45] *** Joins: edrocks (~ed@173.169.31.48)
[17:33:51] *** Joins: inerthia (~inerthia@unaffiliated/inerthia)
[17:33:55] *** Joins: Darkhunter (~mmojzis@static-84-42-152-237.net.upcbroadband.cz)
[17:34:16] *** Joins: iAmerikan (~dwshrewt@unaffiliated/iamerikan)
[17:34:29] *** Joins: dxiri (~dxiri@23.79.232.14)
[17:34:36] *** Joins: }ls{ (~kalle@unaffiliated/ls/x-8089558)
[17:34:48] *** Joins: d3v (~asdf@bba774691.alshamil.net.ae)
[17:35:22] *** Joins: patdaburu (~patdaburu@24-177-166-2.dhcp.mrqt.mi.charter.com)
[17:35:36] *** Joins: LostSoul (~LostSoul@78-11-243-90.static.ip.netia.com.pl)
[17:36:19] *** Quits: renlo (~lhoward@4.14.106.6) (Quit: WeeChat 2.0.1)
[17:38:26] *** Joins: BarBQ (~textual@36.28.158.77.rev.sfr.net)
[17:38:27] *** Quits: inerthia (~inerthia@unaffiliated/inerthia) (Ping timeout: 240 seconds)
[17:38:49] *** Quits: dxiri (~dxiri@23.79.232.14) (Remote host closed the connection)
[17:39:23] *** Joins: con3 (~quassel@ml.sun.ac.za)
[17:39:34] *** Joins: pangolin_ (~pawn@152.12.254.243)
[17:39:49] *** Quits: rpkilby (~rpkilby@cpe-76-182-45-76.nc.res.rr.com) (Remote host closed the connection)
[17:40:06] *** Joins: kishore96 (~kishore@122.164.91.238)
[17:40:13] *** Quits: quxgyver (uid302084@gateway/web/irccloud.com/x-feufykzqzdogfwol) (Quit: Connection closed for inactivity)
[17:40:59] *** Joins: edne (~edne@net-2-42-74-190.cust.vodafonedsl.it)
[17:43:36] *** Joins: han-solo (~han-solo@unaffiliated/han-solo)
[17:43:41] *** Joins: inerthia (~inerthia@unaffiliated/inerthia)
[17:43:42] *** Joins: renlo (~lhoward@4.14.106.6)
[17:46:38] *** Quits: akk (~akkana@75.161.148.9) (Quit: +++)
[17:46:52] *** Quits: Raed|Laptop (~Raed@2601:18c:8600:9be:3452:83e3:1ee5:7f71) (Ping timeout: 245 seconds)
[17:46:55] *** Quits: electrofelix (~pelix@15.203.233.80) (Quit: Leaving.)
[17:47:02] *** Joins: Rollabunna (~Rollabunn@2400:2410:2841:f000:3118:3aa8:2e79:4452)
[17:47:06] *** Joins: simplyknownasg2 (~simplykno@216.64.160.220)
[17:47:13] *** Quits: wrksx (~wrksx@60.91.83.79.rev.sfr.net) (Ping timeout: 248 seconds)
[17:47:19] *** Quits: pangolin_ (~pawn@152.12.254.243) (Ping timeout: 256 seconds)
[17:47:31] *** Joins: mujjingun (uid228218@gateway/web/irccloud.com/x-ppvdsuzygbslfdvu)
[17:47:38] *** Joins: tompaw (~tompaw@tompaw.xxx)
[17:47:53] *** Joins: led1 (~Thunderbi@hotspot10.rywasoft.net)
[17:48:00] *** Quits: lacrymology (~lacrymolo@181.169.242.82) (Ping timeout: 260 seconds)
[17:48:11] *** Joins: tjt263 (uid149471@gateway/web/irccloud.com/x-rehzlovhpuidzfxe)
[17:48:21] *** Joins: Volis (uid12493@gateway/web/irccloud.com/x-pycdnxmcuxftcfxe)
[17:48:30] *** Quits: ibiam (~ibiam@105.112.89.154) (Read error: Connection reset by peer)
[17:48:34] *** Quits: inerthia (~inerthia@unaffiliated/inerthia) (Ping timeout: 256 seconds)
[17:48:55] *** Joins: vikikas (~vikas@2a02:1205:c6ad:ea0:6830:eac4:94c8:4ef1)
[17:49:06] *** Quits: mavhq (~quassel@cpc77319-basf12-2-0-cust433.12-3.cable.virginm.net) (Read error: Connection reset by peer)
[17:49:07] *** Quits: BarBQ (~textual@36.28.158.77.rev.sfr.net) (Read error: Connection reset by peer)
[17:50:01] *** Joins: baxx (~user@2a02:c7f:7a71:3400:3a5f:a59b:ac72:4b71)
[17:50:21] *** Joins: mavhq (~quassel@cpc77319-basf12-2-0-cust433.12-3.cable.virginm.net)
[17:50:30] *** Quits: anqxyr (~anqxyr@nat4-minsk-pool-46-53-177-92.telecom.by) (Ping timeout: 260 seconds)
[17:50:37] *** Joins: adoua (~adoua@unaffiliated/adoua)
[17:50:47] <baxx> i want to label each x indice in a scatter plot... what's this called? I don't want to label the x axis
[17:51:02] <baxx> I can't think of the name, is there a name in matplotlib for this kinda thing?
[17:51:18] *** Joins: shakotan (~shakotn@193.64.190.190)
[17:51:48] <energizer> baxx: have you tried using seaborn, plotnine, or altair instead
[17:51:56] *** Joins: dxiri (~dxiri@23.79.232.14)
[17:52:02] <energizer> baxx: "axis labels" or "ticks"
[17:52:04] <baxx> energizer: no i'm just using matplotlib atm
[17:52:07] <baxx> ah ticks
[17:52:16] <energizer> baxx: you might benefit from the switch
[17:52:26] *** Quits: Rollabunna (~Rollabunn@2400:2410:2841:f000:3118:3aa8:2e79:4452) (Ping timeout: 276 seconds)
[17:52:28] *** Joins: musicnate (~Thunderbi@CPEac202e24c153-CMac202e24c150.cpe.net.fido.ca)
[17:52:45] <baxx> energizer: hrm, the plots pretty much working at the mo so i'm kinda reluctant to bother
[17:53:08] *** Quits: musicnate (~Thunderbi@CPEac202e24c153-CMac202e24c150.cpe.net.fido.ca) (Client Quit)
[17:53:39] <energizer> baxx: i find the best time to refactor something is when it's working
[17:53:56] *** Joins: inerthia (~inerthia@unaffiliated/inerthia)
[17:54:10] *** Quits: Darkhunter (~mmojzis@static-84-42-152-237.net.upcbroadband.cz) (Quit: Leaving.)
[17:54:45] <baxx> it's just the same thing though isn't it? I mean, I'll just have a scatter plot in seaborn rather than matplot? If it's easier to use I get using it from the start I guess
[17:55:10] <SnoopJeDi> plotting gets out of hand *fast*
[17:55:33] <dclayto1> would you still consider it refactoring if you're switching libraries?
[17:55:41] *** Quits: cjoy (~anonymous@HSI-KBW-046-005-019-036.hsi8.kabel-badenwuerttemberg.de) (Quit: cjoy)
[17:55:43] <SnoopJeDi> Once I've gotten something the way I want it, I usually clean it up a bit and wrap a method around it that eats an Axes object
[17:55:51] <SnoopJeDi> (or a sequence of them or whatever)
[17:56:12] <baxx> are there examples of this ?
[17:56:16] <baxx> ^ SnoopJeDi
[17:56:44] *** Joins: Venomen (~venomen@unaffiliated/venomen)
[17:56:50] <SnoopJeDi> uh, I can't think of any off the top of my head but the scipy cookbook might have some stuff. Anything that shows off matplotlib.animation would probably count, too.
[17:57:36] *** Joins: loganrun (~loganrun@173.94.102.240)
[17:58:12] <energizer> kills me that altair is using lowerCamelCase to directly mirror some of the vegalite attributes, agh
[17:59:04] *** Quits: inerthia (~inerthia@unaffiliated/inerthia) (Ping timeout: 268 seconds)
[17:59:05] *** Quits: ryan413 (~ryan413@199.249.230.32) (Ping timeout: 260 seconds)
[17:59:11] *** Quits: xcm (~xcm@ipa210.225.tellas.gr) (Remote host closed the connection)
[17:59:11] *** Quits: surfist (~surfist@unaffiliated/surfist) (Quit: gone)
[17:59:15] *** Joins: fuzzyinterval (~fish@2600:8800:3700:f690:f46d:4e3d:acc4:b5f)
[17:59:29] *** Joins: surfist (~surfist@unaffiliated/surfist)
[17:59:45] <SnoopJeDi> perhaps an artifact of jakevdp's exposure to JS
[17:59:48] *** Joins: xcm (~xcm@ipa210.225.tellas.gr)
[18:00:09] <SnoopJeDi> Unless Vega uses it?
[18:00:19] *** Joins: gareppa (~gareppa@unaffiliated/gareppa)
[18:00:25] <energizer> it's directly wrapping the vegalite and using the same style
[18:00:50] *** Quits: gareppa (~gareppa@unaffiliated/gareppa) (Client Quit)
[18:00:57] <energizer> but my view is that the user shoudlnt have to know that, and switching between them doesnt make sense for the user
[18:01:00] <SnoopJeDi> makes some measure of sense to follow suit, maybe
[18:01:09] *** Joins: ryan413 (~ryan413@198.203.28.43)
[18:01:25] *** Joins: ibiam (~ibiam@105.112.89.154)
[18:01:27] *** Quits: Venomen (~venomen@unaffiliated/venomen) (Ping timeout: 240 seconds)
[18:01:28] <SnoopJeDi> energizer, I think the alternative perspective there is that Vega should be Vega, not Vega-in-Python vs Vega-in-JS vs...
[18:01:31] *** Quits: led1 (~Thunderbi@hotspot10.rywasoft.net) (Quit: led1)
[18:01:51] *** Quits: greg_f (~greg@altlinux/developer/greg) (Ping timeout: 256 seconds)
[18:02:17] *** Quits: lompik (~lompik@unaffiliated/lompik) (Ping timeout: 276 seconds)
[18:02:17] *** Quits: fuzzyinterval (~fish@2600:8800:3700:f690:f46d:4e3d:acc4:b5f) (Client Quit)
[18:02:20] *** Quits: AnySomebody (~AnySomebo@p4FF6AA16.dip0.t-ipconnect.de) (Remote host closed the connection)
[18:02:40] *** Joins: AnySomebody (~AnySomebo@p2003005F2803E926A097A2FFFE5553BE.dip0.t-ipconnect.de)
[18:02:41] <energizer> the method is called .encode(), they could just do the transformation in there, like they do with a bunch of the api
[18:03:09] <energizer> i get why he wants to do it that way, it just makes me scrunch my face when i have to write it
[18:03:29] *** Joins: JohnTalent (~JohnTalen@unaffiliated/johntalent)
[18:03:30] *** Quits: ketralnis (~ketralnis@reddit/admins/ketralnis) (Quit: Coyote finally caught me)
[18:03:34] *** Quits: ryanhiebert (uid64795@gateway/web/irccloud.com/x-zkibcfafrbiibysf) (Quit: Connection closed for inactivity)
[18:03:34] *** Joins: gareppa (~gareppa@unaffiliated/gareppa)
[18:03:40] *** Joins: inerthia (~inerthia@unaffiliated/inerthia)
[18:03:47] *** Joins: Vision-- (Vision@24-217-191-16.dhcp.stls.mo.charter.com)
[18:03:50] <lesshaste> in jupyter notebook, it seems you can't use quit() to stop your code before some later code you don't want to run this time. Is there any other way?
[18:03:53] <JohnTalent> How do I initiaze an object if I don't know the information? Do I have to copy the loop gets?
[18:04:00] *** Quits: shakotan (~shakotn@193.64.190.190) (Ping timeout: 268 seconds)
[18:04:03] *** Quits: duckpuppy (~patrickai@h168.108.18.98.dynamic.ip.windstream.net) (Quit: WeeChat 2.1)
[18:04:19] <energizer> lesshaste: if statement? exception?
[18:04:22] *** Quits: Vision (Vision@24-217-191-16.dhcp.stls.mo.charter.com) (Read error: Connection reset by peer)
[18:04:29] *** Quits: c0ncealed2 (c0ncealed@gateway/vpn/privateinternetaccess/c0ncealed) (Remote host closed the connection)
[18:04:41] *** Quits: gareppa (~gareppa@unaffiliated/gareppa) (Remote host closed the connection)
[18:05:01] <lesshaste> energizer, for an if statement I would have to put many cells into it somehow
[18:05:19] <JohnTalent> I have an init object that I don't want because it came before the loop but I have to initialize. I mean I could delete it, but that's sloppy as hell.
[18:05:22] *** Quits: nicoulaj (~nicoulaj@nicoulaj.net) (Quit: quit)
[18:05:44] *** Joins: fuzzyinterval (~fish@2600:8800:3700:f690:f46d:4e3d:acc4:b5f)
[18:06:01] *** Quits: troyt (~troyt@2601:681:4100:8981:44dd:acff:fe85:9c8e) (Ping timeout: 256 seconds)
[18:06:16] *** Joins: tuxd00d (~tuxd00d@unaffiliated/tuxd00d)
[18:06:18] *** Joins: c0ncealed2 (c0ncealed@gateway/vpn/privateinternetaccess/c0ncealed)
[18:06:24] *** Joins: borkr (~borkr@static130-244.mimer.net)
[18:06:33] *** Joins: Wr4i7h (~abcd@a85-139-11-90.cpe.netcabo.pt)
[18:06:41] *** Quits: Vornicus (~Vorn@2605:e000:1218:48d:e8df:5992:44df:2f08) (Ping timeout: 265 seconds)
[18:06:52] *** Joins: Robijas (~o1o9w0q1g@109.175.104.190)
[18:06:53] <han-solo> JohnTalent: What ?
[18:06:58] *** Parts: Robijas (~o1o9w0q1g@109.175.104.190) ()
[18:07:17] <energizer> JohnTalent: you may need to post some code
[18:07:37] *** Parts: cjohnson (~cjohnson@li133-72.members.linode.com) ()
[18:07:57] *** Quits: inerthia (~inerthia@unaffiliated/inerthia) (Ping timeout: 240 seconds)
[18:08:48] *** Joins: nicoulaj (~nicoulaj@nicoulaj.net)
[18:09:08] *** Quits: PulseAsio (~PulseAsio@dhcp-077-248-071-126.chello.nl) (Remote host closed the connection)
[18:09:13] <lesshaste> how do you tell which python version you are running from within python?
[18:09:25] *** Joins: sunil_bansal (~sunil_ban@49.205.216.234)
[18:09:40] <bjs> lesshaste: sys.version_info
[18:09:48] <lesshaste> bjs, oh cool! thanks
[18:10:11] <JohnTalent> bong = Segment(0,address,0) while True: bong += read(bong); here i use bong but I have to init it before the loop.
[18:10:30] <JohnTalent> opps
[18:10:39] <bjs> JohnTalent: yeah, you need a “start” value
[18:10:42] <JohnTalent> bong = Segment(0,address,0) while True: bong += read_fill_bong(address); here i use bong but I have to init it before the loop.
[18:10:44] <JohnTalent> fixed
[18:11:01] <JohnTalent> bjs: It's bizzare. I'm used to c languages.
[18:11:09] *** Joins: PulseAsio (~PulseAsio@dhcp-077-248-071-126.chello.nl)
[18:11:14] <JohnTalent> there are sometimes you need to init before the loop.
[18:11:17] <bjs> JohnTalent: I don’t see how this would be different in C languages?
[18:11:35] <JohnTalent> so I'll either copy the loop or delete the first item, is this true?
[18:11:42] *** Joins: fandi__ (~fandi@112.78.178.3)
[18:11:52] <bjs> if you loop accumulating a value you need an initial value, whether you’re in C, Python, Prolog or Scheme
[18:12:03] *** Quits: RickDeckard (~tgburrin@152.179.78.138) (Ping timeout: 256 seconds)
[18:12:14] *** Quits: patdaburu (~patdaburu@24-177-166-2.dhcp.mrqt.mi.charter.com) (Quit: Leaving)
[18:12:18] <jwhisnant> JohnTalent: warning : do not attempt to change a mutable object, while iterating over it
[18:12:27] <bjs> JohnTalent: I don’t follow, what do you mean by copy the loop
[18:12:34] <JohnTalent> i only set the first item because python needs the type set. i really don't ned values outside the loop.
[18:13:02] *** Joins: ibiam_ (~ibiam@105.112.89.154)
[18:13:05] *** Quits: ibiam (~ibiam@105.112.89.154) (Quit: ibiam)
[18:13:07] <bjs> JohnTalent: i don’t understand what the problem is. python isn’t enforcing you to have anything
[18:13:17] <JohnTalent> python should just allow seting of types within substructures.
[18:13:22] *** ibiam_ is now known as ibiam
[18:13:30] *** Joins: Sasazuka (~Sasazuka@unaffiliated/sasazuka)
[18:13:39] <loganrun> I end up with int(x) gives me 24 and x = 25.0, it turns out x is actual 3e-14 less than 25 so int changes it to 24, I want int(x) to be 25, what is the correct way to handle this
[18:13:44] <bjs> JohnTalent: can you show me what that would look like?
[18:13:49] <JohnTalent> bjbdid
[18:13:50] *** Quits: AnySomebody (~AnySomebo@p2003005F2803E926A097A2FFFE5553BE.dip0.t-ipconnect.de) (Remote host closed the connection)
[18:13:53] *** Joins: inerthia (~inerthia@unaffiliated/inerthia)
[18:13:53] *** Quits: zmt01 (~zmt@c-98-248-234-34.hsd1.ca.comcast.net) (Read error: Connection reset by peer)
[18:13:54] <JohnTalent> bjb: did
[18:13:59] <JohnTalent> bjs ^
[18:14:03] <bjs> JohnTalent: you did?
[18:14:04] *** Quits: baxx (~user@2a02:c7f:7a71:3400:3a5f:a59b:ac72:4b71) (Ping timeout: 256 seconds)
[18:14:13] *** Joins: crichoux (~crichoux@tjctf/organizer/laudiacay)
[18:14:13] *** Joins: AnySomebody (~AnySomebo@p2003005F2803E926A097A2FFFE5553BE.dip0.t-ipconnect.de)
[18:14:15] *** Quits: sunil_bansal (~sunil_ban@49.205.216.234) (Ping timeout: 260 seconds)
[18:14:25] <JohnTalent> bjs: looks like you need a restatement: bong = Segment(0,address,0) while True: bong += read_fill_bong(address); here i use bong but I have to init it before the loop.
[18:14:27] *** Quits: rendar (~rendar@unaffiliated/rendar) (Quit: Naïm Favier a.k.a. nai is f!@#in` stupid! ahah)
[18:14:27] *** Quits: Freejack (~quassel@unaffiliated/freejack) (Ping timeout: 240 seconds)
[18:14:43] <dude-x> hmm doing a code review and someone wrote 'continue' inside an if block inside an "except" block. is that kosher?
[18:14:51] *** Joins: zmt01 (~zmt@c-98-248-234-34.hsd1.ca.comcast.net)
[18:14:56] <crichoux> hi so i'm working on a project with some constraints... basically im writing code for macos and i can't install anything outside of the standard python libraries + what comes natively on mac
[18:14:57] *** Quits: fandi (~fandi@112.78.178.4) (Ping timeout: 248 seconds)
[18:15:01] <crichoux> and i need to RSA sign things
[18:15:02] <bjs> JohnTalent: sure... I suppose, if you want to use it you need to define it
[18:15:12] *** Quits: fandi_ (~fandi@112.78.178.4) (Ping timeout: 245 seconds)
[18:15:15] *** Joins: blackgoat (~blackgoat@59.23.206.198)
[18:15:16] <crichoux> https://developer.apple.com/documentation/security/certificate_key_and_trust_services/keys/signing_and_verifying i have this <-
[18:15:28] <crichoux> any ideas/tips for getting these mac libraries working in python?
[18:15:35] *** Joins: duckpuppy (~patrickai@h168.108.18.98.dynamic.ip.windstream.net)
[18:15:38] *** Joins: Freejack (~quassel@unaffiliated/freejack)
[18:15:40] *** Joins: fandi (~fandi@112.78.178.3)
[18:15:46] *** Quits: lucad111 (~lucad111@linaro/lucad111) (Quit: Leaving)
[18:15:47] <han-solo> loganrun: math.ceil(x) ?
[18:15:54] <JohnTalent> bjs: yes, and no my loop has a useless item because i didn't copy the processes inside the loop.
[18:15:58] <jwhisnant> crichoux: who has imposed the constraints and what are they, exactly?
[18:16:00] *** Quits: m3ddl3r (~Thunderbi@192.30.201.10) (Ping timeout: 260 seconds)
[18:16:09] *** Joins: [itchyjunk] (~itchyjunk@unaffiliated/itchyjunk/x-1640057)
[18:16:17] <crichoux> jwhisnant: i cannot pip install anything, and i can't really say who imposed the constraints sorry :|
[18:16:25] <bjs> JohnTalent: how is it useless? you just said you use it
[18:16:37] <loganrun> han-solo: well, if x=25.9 I still want int(x) to give me 25, not 26, so I think ceil would break it
[18:16:40] *** Quits: duckpuppy (~patrickai@h168.108.18.98.dynamic.ip.windstream.net) (Client Quit)
[18:16:40] <crichoux> like basically i have to use what's already on the machines, which is mac standard libraries and python 2.7 stdlib
[18:16:45] <dude-x> nevermind, there is a for loop.
[18:16:45] <bjs> JohnTalent: I’m so confused, what would the code look like without this problem?
[18:16:48] <JohnTalent> bjs: excuse me?
[18:17:07] *** Quits: minip (~minip@unaffiliated/minip) (Remote host closed the connection)
[18:17:13] *** Joins: haso2 (~Thunderbi@162.79-160-5.customer.lyse.net)
[18:17:17] <bjs> JohnTalent: you said the loop has a useless item, but what part of it is useless
[18:17:30] <han-solo> loganrun: int(12.9) is 12 :/
[18:17:32] <crichoux> like where are these libraries, what even is this language in the documentation
[18:17:33] <_habnabit> loganrun, you want to round toward 0, but within some epsilon?
[18:17:35] <crichoux> whats happening lmao
[18:17:39] <Church-> Has anybody here done google foobar by chance?
[18:17:53] *** Quits: fr0ddy (~fr0ddy@103.210.147.84) (Quit: Leaving)
[18:17:54] *** Joins: Narrat (~Narrat@p5DED1787.dip0.t-ipconnect.de)
[18:18:03] <loganrun> _habnabit: sounds right
[18:18:06] <Church-> I have an algorithmn written up for a problem that passes all the test cases, but it doesn't seem to work for them.
[18:18:09] *** Quits: nicoulaj (~nicoulaj@nicoulaj.net) (Quit: quit)
[18:18:10] *** Quits: inerthia (~inerthia@unaffiliated/inerthia) (Ping timeout: 245 seconds)
[18:18:10] <JohnTalent> bjs: sorry i mean't to say the bong object has a useless item in it's collection. the item before the loop is useless to me unless I copy the contents of what the loop does.
[18:18:12] <Church-> https://bpaste.net/show/3dc4b3ca3f76
[18:18:14] *** Joins: arkaros (~arkaros@h-56-4.A137.corp.bahnhof.se)
[18:18:17] *** Joins: duckpuppy (~patrickai@h168.108.18.98.dynamic.ip.windstream.net)
[18:18:22] <jwhisnant> crichoux: ok. it is a "management" constraint, not a technical constraint. so if you put it on the machine, it would already be on the machine. can you do that?
[18:18:34] <loganrun> _habnabit: is adding a small fraction the right way to handle it
[18:18:38] *** Joins: ace510 (~chatzilla@mobile-166-176-187-244.mycingular.net)
[18:18:40] *** Joins: bmurt (~hmm@65.78.58.150)
[18:18:49] <bjs> JohnTalent: but you use the object on the first loop (you do “bong += ...”)
[18:18:51] <loganrun> han-solo: yes but someone was saying to use ceil instead of it
[18:18:52] <loganrun> of int
[18:19:05] <crichoux> no, i cannot install anything on these machines, that is the constraint. it's a technical constraint of the config management system, and it's not something that is going to budge (trust me i begged lmao)
[18:19:15] *** Joins: nicoulaj (~nicoulaj@nicoulaj.net)
[18:19:16] <bjs> JohnTalent: you need some kind of initial value no matter what you do
[18:19:31] *** Joins: duckpupp1 (~patrickai@h168.108.18.98.dynamic.ip.windstream.net)
[18:19:36] *** Joins: bluenemo (~bluenemo@unaffiliated/bluenemo)
[18:19:52] <loganrun> _habnabit: sounds like there is no accepted way to do it in python
[18:20:06] *** Quits: duckpupp1 (~patrickai@h168.108.18.98.dynamic.ip.windstream.net) (Client Quit)
[18:20:12] <bjs> JohnTalent: either it’s a “zero” or you start with your first value, either way
[18:20:18] <crichoux> like my own code is about it. the person i talked to said that if i could rip a reasonable amount of code out of the Crypto library and stick it in another file in my codebase, that's okay,,, but i looked and it wasn't a reasonable amount of code to take
[18:20:34] <bjs> JohnTalent: like I said, this is exactly the same as C or Java or Python or Haskell or Prolog or ...
[18:20:41] *** Joins: duckpupp1 (~patrickai@h168.108.18.98.dynamic.ip.windstream.net)
[18:20:46] <JohnTalent> bjs: true but that statement is inconsequential. I just want to define the type without filling it with data. So I can 1) delete the first item 2) copy the loop contents 3) put a conditional for the first item.
[18:21:15] <bjs> JohnTalent: you don’t define types in python
[18:21:28] <bjs> JohnTalent: can you show me what it would look like with this feature
[18:21:36] <energizer> bjs: `class`?
[18:21:37] <han-solo> Church-: [x for x in stuff if stuff.count(x) <= n ] ? # not tested
[18:21:38] <jwhisnant> crichoux: well, why not take "all of it". That seems like a reasonable amount to guarantee the wanted functionality. If the issue is "don't mess with the system python" - that is what virtualenvs are for ...
[18:21:38] *** Quits: Vision-- (Vision@24-217-191-16.dhcp.stls.mo.charter.com) (Read error: Connection reset by peer)
[18:21:40] *** Quits: duckpupp1 (~patrickai@h168.108.18.98.dynamic.ip.windstream.net) (Client Quit)
[18:21:47] *** Quits: loganrun (~loganrun@173.94.102.240) (Quit: Leaving)
[18:21:59] <bjs> energizer: ?
[18:22:06] *** Joins: duckpupp1 (~patrickai@h168.108.18.98.dynamic.ip.windstream.net)
[18:22:10] <energizer> bjs: what did you mean by "you don’t define types in python"
[18:22:15] *** Joins: s14ve (~s14ve@ip-78-102-32-106.net.upcbroadband.cz)
[18:22:23] <crichoux> jwhisnant: installing virtualenv is also not allowed :( im asking again if i can bundle crypto with my code but the answer seems to be no... does anyone know how to get these mac libraries into python
[18:22:26] *** Quits: duckpuppy (~patrickai@h168.108.18.98.dynamic.ip.windstream.net) (Client Quit)
[18:22:29] <bjs> energizer: you don’t define the type
[18:22:44] <crichoux> jwhisnant: seriously if i had my way i would just pip install but :((((
[18:22:44] *** duckpupp1 is now known as duckpuppy
[18:22:46] <bjs> energizer: like “int x;”
[18:22:49] <energizer> bjs: doesnt `class X: pass` define a type?
[18:23:00] *** Quits: arkaros (~arkaros@h-56-4.A137.corp.bahnhof.se) (Ping timeout: 260 seconds)
[18:23:07] <crichoux> i think the python installs on the target machines are weird and diverse enough that deployment could be a real pain
[18:23:11] <energizer> bjs: oh, like declaration, i see what you mean
[18:23:17] *** Joins: DammitJim (~DammitJim@173.227.148.6)
[18:23:19] <crichoux> which is why all we are relying on is stdlib and mac native libraries
[18:23:31] <jwhisnant> crichoux: I expect you install them (in some way). If you cannot install things, and they are not already on the server. You are done. How can you put your code on there anyway? If you cannot add things and it is not already there ....
[18:23:49] <bjs> JohnTalent: like in C you can't just do https://paste.pound-python.org/show/yBlTVp6Ra9B8WbeD79Mj/
[18:23:56] *** Quits: dxiri (~dxiri@23.79.232.14) (Remote host closed the connection)
[18:24:01] <fission6> whats a good place to recruit python engineers, we are hiring for backend engineers here in NYC
[18:24:11] *** Quits: duckpuppy (~patrickai@h168.108.18.98.dynamic.ip.windstream.net) (Client Quit)
[18:24:19] <crichoux> jwhisnant: putting files into a directory is different than pip installing things for python to use, and for some reason just bundling crypto with my code is not a good solution (im still confused about the reasoning for that)
[18:24:24] <Church-> han-solo: Huh that was your solution?
[18:24:36] *** Quits: sauvin (sauvin@about/linux/staff/sauvin) (Remote host closed the connection)
[18:25:09] *** Joins: duckpuppy (~patrickai@h168.108.18.98.dynamic.ip.windstream.net)
[18:25:11] <crichoux> seriously im not an idiot i've thought this through and ive talked to a lot of good engineers about how to do this best and the consensus is mac crypto libraries....
[18:25:16] *** Joins: drexl (~drexl@cpc130676-camd16-2-0-cust445.know.cable.virginm.net)
[18:25:20] <jwhisnant> crichoux: how is "putting files in a directory" (from a fundamental perspective) different than what pip does ?
[18:25:25] <JohnTalent> bjs: i recall doing this alot in VB 6 / Btrieve database.
[18:25:35] <bjs> JohnTalent: well show me what it looked like in VB 6
[18:25:44] <JohnTalent> i would have thought python would go a step further.
[18:26:01] <bjs> JohnTalent: it probably does, it's just very hard to know what you're trying to say
[18:26:10] <JohnTalent> bjs: How about I sell the company that I was with 20 years ago because that would be easier. :)
[18:26:19] <ace510> fission6: a good start would gathering a list of packages/frameworks you use on the backend, and see who's contributing to them on Github and the like
[18:26:19] <crichoux> jwhisnant: because one depends on all sorts of path bullshit and how python is aliased with brew, and if i just stick files in a directory in /etc i know exactly where they are no matter what BS the user pulls with their path or relative file paths or anything
[18:26:28] <bjs> JohnTalent: you say a lot of random things that don't help decipher what you mean :)
[18:26:49] <JohnTalent> bjs: i am saying vb this workaround was neccessary too. In this way I'm on your side.
[18:26:55] *** Joins: inerthia (~inerthia@unaffiliated/inerthia)
[18:27:00] <fission6> ace510 interesting. have you recruited that way?
[18:27:05] <Church-> han-solo: Yeah it works, same as mine albiet smaller.
[18:27:15] <bjs> JohnTalent: well, what language doesn't have "this workaround" (whatever the "workaround" or "problem" is?)
[18:27:18] *** Joins: dramsey (~dramsey@c-68-37-170-178.hsd1.mi.comcast.net)
[18:27:37] <bjs> JohnTalent: I just want you to show me an example of the problem, and the wokraround and how you'd "like" to be able to do it
[18:27:45] *** Quits: lainon (~lainon@24.159.4.77) (Remote host closed the connection)
[18:27:47] <JohnTalent> bjs: it's wise to have many questions, isn't it?
[18:27:47] <bjs> JohnTalent: then I can help translate the last one into real python if possible :)
[18:28:00] *** Joins: rui0f2da445 (~textual@23.239.225.1)
[18:28:00] <ace510> fission6: once, but that was for a crappy indie game I was working on back in college
[18:28:06] <bjs> JohnTalent: it's good to ask a few, specific questions :)
[18:28:08] *** Joins: Praematura (~quassel@206.169.106.2)
[18:28:21] <crichoux> bjs: do u think JohnTalent is secretly john mcafee (spelling?)
[18:28:34] <Church-> Yes.
[18:28:36] <fission6> ace510 lol
[18:28:40] *** Quits: veegee (~veegee@CPE9050cac64033-CM9050cac64030.cpe.net.cable.rogers.com) (Ping timeout: 268 seconds)
[18:28:42] <Church-> JohnTalent: Can I have some of that currency?
[18:28:46] <rui0f2da445> will python3.7 release today?
[18:28:48] <jwhisnant> crichoux: are you writing code for "others" to use?
[18:28:49] <Church-> I'll trade you some cocaine.
[18:28:54] *** Quits: toxinu (uid217298@gateway/web/irccloud.com/x-sdhnqubsbiehcbxg) (Quit: Connection closed for inactivity)
[18:28:59] *** Joins: Mart|n (~Mart|n@79-68-33-46.dynamic.dsl.as9105.com)
[18:29:01] *** Quits: SkyRocknRoll (~SkyRocknR@unaffiliated/skyrocknroll) (Remote host closed the connection)
[18:29:16] <JohnTalent> bjs: do you need a 3 restatement?
[18:29:23] <Church-> Incidentally if anybody wants a good challenge, google either arraylist java or python list comprehension in one tab after another a few times.
[18:29:32] <crichoux> jwhisnant: if you dont have an answer to my question can we stop doing this please, im really sorry i asked a super specific question and i cant give good details for why the constraints are the way they are because NDAs
[18:29:32] <Church-> Should get a popup.
[18:29:35] <JohnTalent> bjs: thank you though.
[18:29:48] <bjs> JohnTalent: No I want code demonstrating how you'd *like* to be able to write it :(
[18:29:48] <crichoux> but if anyone can tell me how to link mac libraries into python :) i would really appreciate that
[18:30:06] <JohnTalent> so I'll copy the loop , that's how we did it with vb.
[18:30:12] <bjs> JohnTalent: copy the loop?!
[18:30:24] *** Quits: duckpuppy (~patrickai@h168.108.18.98.dynamic.ip.windstream.net) (Quit: WeeChat 2.1)
[18:30:27] <ace510> sweep the leg jhonny
[18:30:30] <bjs> JohnTalent: why would you copy the loop
[18:30:45] <JohnTalent> cp While: Begining_Of_Code /s /e
[18:30:53] <jwhisnant> ace510: sand the floor ... side-side
[18:31:11] <crichoux> ccccccibhdvhenicinbbenvbdubgffjtlvjbvjufkifb
[18:31:17] <crichoux> aaa sorry
[18:31:20] *** Quits: iAmerikan (~dwshrewt@unaffiliated/iamerikan) (Ping timeout: 265 seconds)
[18:31:23] <bjs> JohnTalent: let's try a different approach: does this code have the problem or not? https://paste.pound-python.org/show/tOqrdSK7EyHQtg7azPBU/
[18:31:27] *** Quits: inerthia (~inerthia@unaffiliated/inerthia) (Ping timeout: 240 seconds)
[18:31:34] *** Quits: IanLiu (~IanLiu@189-69-38-63.dsl.telesp.net.br) (Quit: IanLiu)
[18:31:39] *** Joins: LennySh (~LennySh@unaffiliated/lennysh)
[18:31:48] *** Parts: LennySh (~LennySh@unaffiliated/lennysh) ()
[18:31:54] <_habnabit> crichoux, sounds like you need to hire a contractor
[18:32:03] <JohnTalent> bjs: Thank you for letting me know that I have no options than the 3 I listed. For the memory bereft there is the page up button.
[18:32:05] <crichoux> _habnabit: whats that mean
[18:32:12] <bjs> JohnTalent: you listed _3_ options?
[18:32:16] *** Quits: jjulian (~jjulian@i5DB50875.pool.tripleplugandplay.com) (Remote host closed the connection)
[18:32:19] <JohnTalent> tell em guys.
[18:32:20] <_habnabit> crichoux, if you can't have a conversation and you don't know the answer
[18:32:39] <crichoux> _habnabit: i know the answer and its linking mac libraries into python
[18:32:39] *** Quits: adoua (~adoua@unaffiliated/adoua) (Ping timeout: 256 seconds)
[18:32:42] <crichoux> i am wondering how to do that
[18:32:43] *** Joins: rjdp9736 (~rjdp9736@183.82.17.121)
[18:32:50] <crichoux> is it cffi? has anyone managed this before?
[18:32:52] <bjs> JohnTalent: it's really hard to give you an answer if you don't answer my questions ...
[18:32:57] <_habnabit> crichoux, cffi isn't in the stdlib
[18:33:09] <JohnTalent> Lemon Curry?
[18:33:09] <bjs> JohnTalent: it *might* be you're looking for None, or maybe iter, or maybe you want optional arguments
[18:33:12] <crichoux> oh fuck
[18:33:25] <_habnabit> crichoux, the answer _is_ cffi, but it seems to fall short of your constraints
[18:33:30] <crichoux> is there any way to link libraries from mac with just the stdlib
[18:33:33] *** Joins: inerthia (~inerthia@unaffiliated/inerthia)
[18:33:33] <crichoux> oh god this is terrible
[18:33:34] <_habnabit> crichoux, (the real answer is `pip install cryptography`)
[18:33:41] <crichoux> i know i know i am also suffering here
[18:33:44] <sla3k> bjs: in that example, shouldn't x += x instead of x += i ?
[18:33:55] <bjs> sla3k: why?
[18:33:57] <sla3k> I am still in the learning phase.. so I though I'd ask
[18:34:09] *** Quits: rjdp9736_ (~rjdp9736@49.205.219.130) (Ping timeout: 248 seconds)
[18:34:11] <crichoux> _habnabit: but there is /absolutely/ no way to get these libraries into mac
[18:34:16] <JohnTalent> bjj: The culprit is the  '+=' i'm using.
[18:34:20] <bjs> sla3k: no I wanted to sum numbers 1 + 2 + 3 + 4 ...
[18:34:21] *** Joins: duckpuppy (~patrickai@h168.108.18.98.dynamic.ip.windstream.net)
[18:34:21] <JohnTalent> bjs ^
[18:34:22] <bjs> JohnTalent: what's wrong with += ?
[18:34:23] <crichoux> it looks like i might have to do subprocessing + openssl and oh god i hate it
[18:34:40] *** Quits: Indentist (~Indentist@unaffiliated/indentist) (Ping timeout: 260 seconds)
[18:34:42] <energizer> crichoux: `python3 -m venv venv && venv/bin/pip install cryptography` problem solved?
[18:34:44] <_habnabit> crichoux, why not use pex?
[18:34:47] <sla3k> Ahh okkk...that makes sense
[18:34:53] <crichoux> pex?
[18:35:10] <JohnTalent> bjs: It ads the first item in the dictionary, adding the duck type defintion before the loops. (The += is inside the loop)
[18:35:11] <crichoux> apparently you can import objc into python
[18:35:15] <crichoux> hm okay tahts all i needed
[18:35:20] *** Quits: edne (~edne@net-2-42-74-190.cust.vodafonedsl.it) (Ping timeout: 276 seconds)
[18:35:25] <_habnabit> crichoux, pyobjc isn't stdlib either
[18:35:29] <bjs> JohnTalent: there's a dictionary now?
[18:35:30] *** Quits: plww1 (~plw@aejs93.neoplus.adsl.tpnet.pl) (Quit: WeeChat 2.1)
[18:36:26] <JohnTalent> bjs: You always had the power to go home.all you had to do was click your heels together 3 times.
[18:36:47] <_habnabit> JohnTalent, please don't be a jerk to people trying to help you
[18:36:53] *** Joins: nunatak (~nunatak@unaffiliated/nunatak)
[18:37:14] <crichoux> cdll :)
[18:37:21] <JohnTalent> _habnabit: how about pretending to be someone eternally confused?
[18:37:58] <energizer> JohnTalent: Please post your code in a pastebin and share the link here. You will get better help that way.
[18:38:03] <_habnabit> JohnTalent, if you're insinuating that you shouldn't have to answer clarifying questions, let me tell you, your explanations have been very unclear for how glib you're being
[18:38:21] *** Quits: davr0s (~textual@host86-138-235-28.range86-138.btcentralplus.com) (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
[18:38:26] *** Quits: linuxmodder (~linuxmodd@2ProIntl/thru-the-firewall/linuxmodder) (Remote host closed the connection)
[18:38:27] *** Joins: alem0lars (~alem0lars@host208-243-dynamic.37-79-r.retail.telecomitalia.it)
[18:38:31] <JohnTalent> The answer was giving. And I'm still explaining the question. What is wrong with this picture?
[18:38:35] *** Quits: inerthia (~inerthia@unaffiliated/inerthia) (Ping timeout: 265 seconds)
[18:38:42] <JohnTalent> s/giving/given
[18:39:03] *** Joins: troyt (~troyt@2601:681:4100:8981:44dd:acff:fe85:9c8e)
[18:39:05] <han-solo> JohnTalent: You are confusing everyone here
[18:39:06] *** Joins: sunil_bansal (~sunil_ban@49.205.216.234)
[18:39:10] *** Quits: kwedel (~kwedel@209.107.210.95) (Remote host closed the connection)
[18:39:13] <JohnTalent> okay, sorry i'll leave.
[18:39:19] <_habnabit> JohnTalent, i am perplexed. your question was answered? are you done?
[18:39:20] <energizer> JohnTalent: Please post your code in a pastebin and share the link here. You will get better help that way.
[18:39:31] <JohnTalent> _habnabit: yes
[18:39:39] <_habnabit> JohnTalent, ok, bye
[18:39:40] <JohnTalent> ciao
[18:39:42] *** Quits: ibiam (~ibiam@105.112.89.154) (Quit: ibiam)
[18:39:42] *** Quits: JohnTalent (~JohnTalen@unaffiliated/johntalent) ()
[18:39:51] <_habnabit> /shrug
[18:39:52] <energizer> in that case, well done, bjs
[18:40:23] *** Joins: rpkilby (~rpkilby@cpe-76-182-45-76.nc.res.rr.com)
[18:40:33] *** Joins: v01d4lph4 (~silent_fr@180.151.28.247)
[18:41:10] *** Quits: tdy (~tdy@unaffiliated/tdy) (Ping timeout: 264 seconds)
[18:42:03] *** Joins: veegee (~veegee@CPE9050cac64033-CM9050cac64030.cpe.net.cable.rogers.com)
[18:42:10] *** Joins: kwedel (~kwedel@209.107.210.94)
[18:42:55] *** Quits: duckpuppy (~patrickai@h168.108.18.98.dynamic.ip.windstream.net) (Quit: WeeChat 2.1)
[18:43:07] <bjs> easiest answer I’ve ever given
[18:43:14] <bjs> I think
[18:43:25] *** Quits: russw (~russ@otwaon0147w-lp130-02-70-48-255-232.dsl.bell.ca) (Ping timeout: 260 seconds)
[18:43:36] *** Joins: Vision (Vision@24-217-191-16.dhcp.stls.mo.charter.com)
[18:43:55] *** Joins: inerthia (~inerthia@unaffiliated/inerthia)
[18:44:25] *** Joins: duckpuppy (~patrickai@h168.108.18.98.dynamic.ip.windstream.net)
[18:44:32] *** Quits: sunil_bansal (~sunil_ban@49.205.216.234) (Ping timeout: 276 seconds)
[18:45:06] *** Quits: duckpuppy (~patrickai@h168.108.18.98.dynamic.ip.windstream.net) (Client Quit)
[18:45:17] *** Joins: Alkanor (~Alkanor@LFbn-1-1054-197.w86-247.abo.wanadoo.fr)
[18:45:20] *** Joins: cjoy (~anonymous@HSI-KBW-046-005-019-036.hsi8.kabel-badenwuerttemberg.de)
[18:45:22] *** Quits: v01d4lph4 (~silent_fr@180.151.28.247) (Ping timeout: 256 seconds)
[18:45:23] <han-solo> Straight 12 hrs work... Need Sleep
[18:45:29] <energizer> are there advantages of using platter over pex? http://platter.pocoo.org/dev/why/#pex
[18:45:33] *** Joins: duckpuppy (~patrickai@h168.108.18.98.dynamic.ip.windstream.net)
[18:45:36] *** Joins: tdy (~tdy@unaffiliated/tdy)
[18:45:56] *** Quits: rpkilby (~rpkilby@cpe-76-182-45-76.nc.res.rr.com) (Ping timeout: 268 seconds)
[18:45:59] *** Quits: han-solo (~han-solo@unaffiliated/han-solo) (Quit: leaving)
[18:46:03] *** Joins: m3ddl3r (~Thunderbi@192.30.201.10)
[18:47:36] <dude-x> platter seems unmaintained
[18:47:46] *** Quits: Miezel (~Miezel@65-120-11-130.dia.static.qwest.net) (Ping timeout: 264 seconds)
[18:47:50] *** Quits: kishore96 (~kishore@122.164.91.238) (Quit: Konversation terminated!)
[18:48:20] <dude-x> major updates in 2015, minor updates in 2018 to support new stuff
[18:48:26] *** Joins: holden- (~holden-@unaffiliated/holden-)
[18:48:29] *** Joins: jmnk (~jmnk@125.16.97.120)
[18:48:31] *** Joins: iAmerikan (~dwshrewt@unaffiliated/iamerikan)
[18:49:05] *** Quits: inerthia (~inerthia@unaffiliated/inerthia) (Ping timeout: 276 seconds)
[18:49:50] *** Quits: Neros (~Neros@31-32-241-72.abo.bbox.fr) (Ping timeout: 260 seconds)
[18:50:05] *** Joins: azi` (~foo@odisej.fmf.uni-lj.si)
[18:50:16] *** Joins: lumm (~lumm@nem77-1-82-240-251-72.fbx.proxad.net)
[18:50:25] *** Quits: harrymm (~harrymm@223.204.199.135) (Ping timeout: 260 seconds)
[18:50:52] <jmnk> is there any way to print a string in format like  02.30% with python? any tweaks around - print "{:2%}.format(floating_num)?
[18:51:29] *** Quits: st8less (~st8less@2600:8804:88c0:50f:452a:236c:d7dd:ece1) (Read error: Connection reset by peer)
[18:51:33] <_habnabit> jmnk, is that not right?
[18:51:40] *** Joins: r29v (~textual@104.220.154.222)
[18:51:48] *** Joins: HaikUbuntu (~haikubunt@37.168.101.210)
[18:52:48] <azi`> a function that I am calling needs to accept a function that turns a list into a number. usually it accepts the function sum and just sums up the given lists. now I need to sum the absolute values of the elements of the list. is there any better I can do other than pass it the function "lambda x: sum(abs(e) for e in x)" ?
[18:52:57] *** Quits: GiLgAmEzH (~gilgamezh@unaffiliated/gilgamezh) (Ping timeout: 240 seconds)
[18:53:04] <jmnk> _habnabit,  print "{:2%}".format(floating_num) outputs>>> 0.00%
[18:53:19] <energizer> jmnk: f'{2.3:05.2f}%'
[18:53:20] *** Quits: iAmerikan (~dwshrewt@unaffiliated/iamerikan) (Ping timeout: 260 seconds)
[18:53:45] <_habnabit> azi`, looks good to me
[18:55:07] *** Quits: tbcr (quassel@nat/redhat/x-nitxapigyljmzorl) (Ping timeout: 256 seconds)
[18:55:27] <azi`> _habnabit: is it more pythonic if i use map or something?
[18:55:30] *** Quits: realbadhorse (~realuname@183.87.124.175) (Quit: wont catch me alive)
[18:55:36] <_habnabit> azi`, nah
[18:55:40] <jmnk> energizer, thanks, any alternative using string.format() ?
[18:56:03] <energizer> jmnk: '{:05.2f}%'.format(x)
[18:56:07] *** Joins: sartan (~sartan@unaffiliated/sartan)
[18:56:32] <_habnabit> or '{:06.2%}'
[18:56:42] *** Quits: mmfood (~mmfood@46.246.116.189) (Ping timeout: 256 seconds)
[18:57:40] *** Joins: Cache_Money (~mas@c-24-18-214-173.hsd1.wa.comcast.net)
[18:57:43] *** Joins: jeffspeff (~jeffspeff@12.49.160.131)
[18:57:51] *** Quits: AnySomebody (~AnySomebo@p2003005F2803E926A097A2FFFE5553BE.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[18:57:59] *** Quits: knifefork (~textual@pool-173-48-186-26.bstnma.fios.verizon.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[18:58:02] <jmnk> energizer, _habnabit got it. Thanks.
[18:58:18] *** Joins: mmfood (~mmfood@178.73.202.205)
[18:58:35] *** Joins: inerthia (~inerthia@unaffiliated/inerthia)
[18:59:45] *** Quits: dendazen (~dendazen@128.177.29.242) (Ping timeout: 248 seconds)
[19:01:44] *** Quits: ace510 (~chatzilla@mobile-166-176-187-244.mycingular.net) (Quit: ChatZilla 0.9.93 [SeaMonkey 2.49.3/20180412182658])
[19:02:30] *** Joins: TidB (~TidB@pD9FCE8AF.dip0.t-ipconnect.de)
[19:02:35] *** Joins: RickDeckard (~tgburrin@152.179.78.138)
[19:02:41] *** Joins: gloomy (~Gloomy@ip-81-11-163-53.dsl.scarlet.be)
[19:02:45] *** Joins: harrymm (~harrymm@69.161.195.103)
[19:02:57] *** Quits: lankanmon (~LKNnet@CPE64777d632383-CM64777d632380.cpe.net.cable.rogers.com) (Ping timeout: 248 seconds)
[19:02:57] *** Quits: mmfood (~mmfood@178.73.202.205) (Ping timeout: 240 seconds)
[19:03:09] *** Joins: pangolin_ (~pawn@152.12.27.112)
[19:03:15] *** Quits: inerthia (~inerthia@unaffiliated/inerthia) (Ping timeout: 256 seconds)
[19:03:26] *** Quits: qwerty1793 (~qwerty179@host86-140-117-168.range86-140.btcentralplus.com) (Quit: Leaving)
[19:04:42] *** Joins: mmfood (~mmfood@178.73.202.48)
[19:04:52] *** Quits: Jenetrix (~Jen@regi.rocks) (Max SendQ exceeded)
[19:05:19] *** Quits: VikingHoarder (~VikingHoa@a95-95-180-41.cpe.netcabo.pt) (Remote host closed the connection)
[19:05:28] *** Quits: pangolin_ (~pawn@152.12.27.112) (Client Quit)
[19:05:33] *** Joins: ferdna (~ferdna@68-73-71-246.lightspeed.elpstx.sbcglobal.net)
[19:06:35] *** Quits: nunatak (~nunatak@unaffiliated/nunatak) (Quit: Leaving)
[19:06:51] *** Joins: inerthia (~inerthia@unaffiliated/inerthia)
[19:06:53] *** Quits: giaco (~giaco@host122-168-static.184-194-b.business.telecomitalia.it) (Remote host closed the connection)
[19:07:08] *** Joins: rmcd (~rmcd@cpc119850-nrwh12-2-0-cust133.4-4.cable.virginm.net)
[19:07:36] *** Joins: dxiri (~dxiri@23.79.232.14)
[19:08:07] *** Joins: GiLgAmEzH (~gilgamezh@unaffiliated/gilgamezh)
[19:08:08] *** Joins: chachan (~chachan@196.40.47.129)
[19:08:46] *** Quits: blyat (~blyat@cpe-172-72-228-93.carolina.res.rr.com) (Quit: Leaving)
[19:08:57] *** Quits: Alexander-47u (~Alexander@85.203.44.82) (Ping timeout: 240 seconds)
[19:08:59] *** Joins: sunil_bansal (~sunil_ban@49.205.216.234)
[19:10:32] *** Joins: pangolin_ (~pawn@152.12.27.112)
[19:11:01] <Cache_Money> I’m having trouble converting my CURL request (to Elastic Search instance) to my Python script (using requests). The -d flag in my CURL request is the data parameter in my requests.get(), right?
[19:11:25] *** Quits: lorddaed_ (~lorddaedr@213.141.139.44) (Remote host closed the connection)
[19:11:25] *** Joins: shakotan (~shakotn@193.64.190.190)
[19:11:27] *** Quits: kingarmadillo (~kingarmad@38.104.254.34) (Ping timeout: 240 seconds)
[19:11:33] *** Quits: inerthia (~inerthia@unaffiliated/inerthia) (Ping timeout: 256 seconds)
[19:11:46] *** Quits: lumm (~lumm@nem77-1-82-240-251-72.fbx.proxad.net) (Ping timeout: 264 seconds)
[19:11:53] *** Joins: Bobguy (~Tilde@2605:6000:101e:40f9:0:596f:60c1:151e)
[19:11:54] <lesshaste> I am trying to get pyspike to work from http://mariomulansky.github.io/PySpike/#tutorial . I tried the simplest example, spike_train = SpikeTrain(np.array([0.1, 0.3, 0.45, 0.6, 0.9], [0.0, 1.0])) but it fails with TypeError: data type not understood
[19:11:58] <lesshaste> can anyone see how to get it work?
[19:12:03] *** Joins: lorddaedra (~lorddaedr@185.44.76.121)
[19:12:05] *** Joins: Trent (6b91bda3@gateway/web/freenode/ip.107.145.189.163)
[19:12:07] *** Quits: uttam (~uttam@116.193.133.53) (Quit: uttam)
[19:12:23] <Trent> is there a code bin thing?
[19:12:34] <Wooble> https://paste.pound-python.org/
[19:12:38] *** Quits: crichoux (~crichoux@tjctf/organizer/laudiacay) (Ping timeout: 260 seconds)
[19:12:39] <Trent> ty
[19:12:47] *** Joins: IanLiu (~IanLiu@189-69-38-63.dsl.telesp.net.br)
[19:12:49] *** Quits: Trent (6b91bda3@gateway/web/freenode/ip.107.145.189.163) (Client Quit)
[19:13:33] *** Joins: VectorX (~VectorX@unaffiliated/vectorx)
[19:13:37] *** Quits: sunil_bansal (~sunil_ban@49.205.216.234) (Ping timeout: 248 seconds)
[19:13:37] *** Quits: lunarkitty7 (~fyre@2601:603:c80:87c::2f6b) (Ping timeout: 260 seconds)
[19:14:59] *** Quits: duckpuppy (~patrickai@h168.108.18.98.dynamic.ip.windstream.net) (Quit: WeeChat 2.1)
[19:15:35] *** Joins: inerthia (~inerthia@unaffiliated/inerthia)
[19:15:38] *** Quits: Bobdude (~Tilde@2605:6000:101e:40f9:0:596f:60c1:151e) (Ping timeout: 276 seconds)
[19:15:43] *** Quits: purplex88 (~purplex88@unaffiliated/purplex88) (Quit: Going offline, see ya! (www.adiirc.com))
[19:15:46] *** Quits: rudrab (~rudrab@14.139.59.140) (Remote host closed the connection)
[19:15:49] *** Joins: duckpuppy (~patrickai@h168.108.18.98.dynamic.ip.windstream.net)
[19:15:57] <Cache_Money> If this is my CURL request then I’m sending the -d portion as the `data` param for requests.get(), right? curl -XGET "http://localhost:9200/_search" -H 'Content-Type: application/json' -d'{   "query": { "match": { "post_type": "recipe" } } }’
[19:16:06] *** Joins: Alexander-47u (~Alexander@85.203.44.73)
[19:17:12] <Cache_Money> Can I do a requests.get() with a body argument?
[19:17:25] <CrtxReavr> Of course.
[19:17:52] *** Quits: duckpuppy (~patrickai@h168.108.18.98.dynamic.ip.windstream.net) (Client Quit)
[19:17:58] <liste> though if the server really respects GET it shouldn't use the body for anything
[19:17:59] *** Quits: RickDeckard (~tgburrin@152.179.78.138) (Ping timeout: 256 seconds)
[19:18:09] <Wooble> Cache_Money: use json= instead, if you want json data sent.
[19:18:16] *** eblip is now known as eb0t_
[19:18:16] *** Joins: duckpuppy (~patrickai@h168.108.18.98.dynamic.ip.windstream.net)
[19:18:45] *** Joins: gareppa (~gareppa@unaffiliated/gareppa)
[19:19:07] *** Joins: RickDeckard (~tgburrin@152.179.78.138)
[19:19:10] *** Joins: ams__ (uid48118@gateway/web/irccloud.com/x-xrewfctzdhbmiqgs)
[19:19:32] <Cache_Money> Wooble: Okay, that worked. Thanks!
[19:20:38] *** Quits: inerthia (~inerthia@unaffiliated/inerthia) (Ping timeout: 265 seconds)
[19:20:51] *** Joins: RangerBob (~brian@pool-98-118-245-158.clppva.fios.verizon.net)
[19:20:56] *** Quits: gareppa (~gareppa@unaffiliated/gareppa) (Remote host closed the connection)
[19:21:05] *** Joins: n35xdxb0 (~n35xdxb0@cpc130684-camd16-2-0-cust846.know.cable.virginm.net)
[19:21:06] *** Joins: gareppa (~gareppa@unaffiliated/gareppa)
[19:21:08] <Wooble> liste: I assume this is Elasticsearch, and their developers know that and don't care. :)
[19:22:02] *** Quits: redrum88 (~Helder@177.180.184.84) (Quit: Leaving!)
[19:23:02] *** Quits: tvm (~tvm@router-sever1-nat-m.pilsfree.net) (Read error: Connection reset by peer)
[19:23:40] *** Quits: kallesbar (~kallesbar@192.130.252.49) (Ping timeout: 260 seconds)
[19:23:54] *** Joins: perlsyntax (~perlsynta@unaffiliated/perlsyntax)
[19:24:05] *** Parts: sveinse (~sveinse@156.92-221-160.customer.lyse.net) ()
[19:24:58] *** Joins: inerthia (~inerthia@unaffiliated/inerthia)
[19:25:10] *** Joins: oni_ (971c422d@gateway/web/freenode/ip.151.28.66.45)
[19:25:15] *** Quits: perlsyntax (~perlsynta@unaffiliated/perlsyntax) (Remote host closed the connection)
[19:25:53] *** Quits: Bahrouz (~Bahrouz@unaffiliated/bahrouz) (Quit: KVIrc 4.9.2 Aria http://www.kvirc.net/)
[19:25:57] *** Quits: shakotan (~shakotn@193.64.190.190) (Ping timeout: 265 seconds)
[19:26:00] *** Quits: sanketsaurav (~theCreati@122.167.171.45) ()
[19:26:07] *** Quits: gareppa (~gareppa@unaffiliated/gareppa) (Remote host closed the connection)
[19:26:17] *** Joins: gareppa (~gareppa@unaffiliated/gareppa)
[19:26:49] *** Quits: eb0t (~eblip@unaffiliated/eblip) (Quit: WeeChat 2.0.1)
[19:27:01] *** Joins: courrier (~yoan@119.135.185.81.rev.sfr.net)
[19:27:21] *** Quits: iderik (~idk@h-0-97.A147.priv.bahnhof.se) (Quit: iderik)
[19:27:22] *** Joins: lunarkitty7 (~fyre@2601:603:c80:87c::fd16)
[19:28:09] *** Quits: Alexander-47u (~Alexander@85.203.44.73) (Remote host closed the connection)
[19:28:22] *** Quits: cagomez (~cagomez@sb0-cf9a61b1.dsl.impulse.net) (Remote host closed the connection)
[19:28:27] *** Quits: maslen2 (uid202698@gateway/web/irccloud.com/x-phoxyjnyknbwzvgo) (Quit: Connection closed for inactivity)
[19:28:39] *** Joins: RebelCoder (~RebelCode@81.2.181.43)
[19:29:25] *** Quits: inerthia (~inerthia@unaffiliated/inerthia) (Ping timeout: 245 seconds)
[19:29:31] *** Joins: perlsyntax (~perlsynta@unaffiliated/perlsyntax)
[19:29:42] <perlsyntax> hi all
[19:29:43] *** Quits: manuelschneid3r (~manuelsch@p57A39159.dip0.t-ipconnect.de) (Ping timeout: 268 seconds)
[19:29:49] *** Joins: chachan_ (~chachan@ec2-35-164-24-42.us-west-2.compute.amazonaws.com)
[19:32:14] *** Joins: philr (~phil@ppp121-45-86-74.bras1.adl6.internode.on.net)
[19:32:25] *** Quits: chachan (~chachan@196.40.47.129) (Read error: Connection reset by peer)
[19:32:39] *** Joins: chachan (~chachan@196.40.47.129)
[19:32:43] *** Quits: IanLiu (~IanLiu@189-69-38-63.dsl.telesp.net.br) (Quit: IanLiu)
[19:33:10] *** Quits: dramsey (~dramsey@c-68-37-170-178.hsd1.mi.comcast.net) (Ping timeout: 260 seconds)
[19:33:42] *** Quits: panikovsky (~panikovsk@87.117.54.50) (Quit: Leaving)
[19:33:53] *** Joins: dviola (~diego@unaffiliated/dviola)
[19:33:58] *** Quits: gareppa (~gareppa@unaffiliated/gareppa) (Quit: Leaving)
[19:34:29] *** Quits: plustwo (~quassel@unaffiliated/plustwo) (Read error: Connection reset by peer)
[19:35:24] *** Quits: daze (~daze@unaffiliated/daze) (Remote host closed the connection)
[19:36:04] *** Joins: ponyofdeath (~vladi@99-39-69-178.lightspeed.sndgca.sbcglobal.net)
[19:36:28] *** Joins: iAmerikan (~dwshrewt@unaffiliated/iamerikan)
[19:36:29] *** Quits: chachan_ (~chachan@ec2-35-164-24-42.us-west-2.compute.amazonaws.com) (Ping timeout: 256 seconds)
[19:36:39] *** Joins: plustwo (~quassel@unaffiliated/plustwo)
[19:36:53] *** Joins: u0m3 (~u0m3@188.25.23.74)
[19:37:23] *** Joins: wreed (~wreed@155.33.134.29)
[19:37:40] *** Quits: ali1234 (~ali1234@88.97.12.44) (Ping timeout: 260 seconds)
[19:37:50] *** Joins: IanLiu (~IanLiu@189-69-38-63.dsl.telesp.net.br)
[19:37:51] *** Joins: eb0t (~eblip@unaffiliated/eblip)
[19:38:13] *** Joins: lolidunno (~lolidunno@cpe-45-50-100-24.socal.res.rr.com)
[19:38:34] *** Joins: fpghost84 (~fpghost84@90.202.150.135)
[19:39:08] *** Quits: bmurt (~hmm@65.78.58.150) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[19:39:33] <djapo> what does import __ do ?
[19:40:00] *** Quits: borkr (~borkr@static130-244.mimer.net) (Ping timeout: 260 seconds)
[19:40:35] <Peng_> Imports a thing named __ probably
[19:41:07] *** Joins: Syzygy (~Syzygy@46.125.250.99)
[19:41:09] *** Quits: jancoow (~jancoow@dhcp-077-251-034-091.chello.nl) (Quit: jancoow)
[19:41:26] *** Joins: rpkilby (~rpkilby@cpe-76-182-45-76.nc.res.rr.com)
[19:41:30] *** Quits: iAmerikan (~dwshrewt@unaffiliated/iamerikan) (Ping timeout: 245 seconds)
[19:41:39] *** Joins: andeh_ (~andeh@146.115.76.19)
[19:41:42] *** Joins: subho (~subho@fedora/subho)
[19:42:24] *** Joins: noonker (~user@216.130.192.4)
[19:43:21] *** Quits: cwrbs (~jy@185.9.19.107) (Ping timeout: 265 seconds)
[19:43:23] *** Joins: Syzygy_ (~Syzygy@078132061046.public.t-mobile.at)
[19:43:25] *** Quits: kajo (~kajo@2a02:908:2f33:d560:8e10:876f:c7a8:294d) (Quit: From my rotting body, flowers shall grow and I am in them and that is eternity. -- E. M.)
[19:43:27] *** Joins: inerthia (~inerthia@unaffiliated/inerthia)
[19:44:16] *** Joins: cagomez (~cagomez@sb0-cf9a61b1.dsl.impulse.net)
[19:44:48] <perlsyntax> hi
[19:44:51] *** Joins: Venomen (~venomen@unaffiliated/venomen)
[19:44:54] *** Quits: u0m3 (~u0m3@188.25.23.74) (Read error: Connection reset by peer)
[19:44:58] <Wooble> (hopefully you don't actually have a module named "__" :) )
[19:45:20] *** Quits: henbruas (~henbruas@unaffiliated/henbruas) (Quit: ZNC 1.7.0 - https://znc.in)
[19:45:39] *** Joins: u0m3 (~u0m3@188.25.23.74)
[19:45:40] *** Quits: perlsyntax (~perlsynta@unaffiliated/perlsyntax) ()
[19:45:52] *** Quits: Leeds (~Leeds@223.16.213.143) (Quit: Leaving)
[19:45:53] <liste> hi p<>{#(<!>)}
[19:46:05] *** Joins: henbruas (~henbruas@unaffiliated/henbruas)
[19:46:08] *** Joins: tty (~none@unaffiliated/minimalism)
[19:46:09] <liste> oh wait, (s)he left
[19:46:11] *** Quits: zuQe8 (~zuQe8@cpc104502-sgyl40-2-0-cust50.18-2.cable.virginm.net) (Remote host closed the connection)
[19:46:11] *** semeion is now known as mnemonic
[19:46:25] *** Quits: rpkilby (~rpkilby@cpe-76-182-45-76.nc.res.rr.com) (Ping timeout: 260 seconds)
[19:46:34] *** Quits: subho (~subho@fedora/subho) (Client Quit)
[19:46:38] *** Joins: zuQe8 (~zuQe8@cpc104502-sgyl40-2-0-cust50.18-2.cable.virginm.net)
[19:47:00] *** Quits: Syzygy (~Syzygy@46.125.250.99) (Ping timeout: 260 seconds)
[19:47:24] *** Joins: iAmerikan (~dwshrewt@unaffiliated/iamerikan)
[19:47:35] *** Joins: dramsey (~dramsey@c-68-37-94-119.hsd1.mi.comcast.net)
[19:48:05] *** Quits: inerthia (~inerthia@unaffiliated/inerthia) (Ping timeout: 240 seconds)
[19:48:32] *** Quits: z7f0 (~no1@mobile-166-176-185-142.mycingular.net) (Ping timeout: 245 seconds)
[19:49:05] *** Quits: cagomez (~cagomez@sb0-cf9a61b1.dsl.impulse.net) (Ping timeout: 240 seconds)
[19:49:21] *** Quits: nigthw0lf (~nightw0lf@toroon6128w-lp130-04-69-158-180-35.dsl.bell.ca) ()
[19:49:24] *** Quits: Venomen (~venomen@unaffiliated/venomen) (Ping timeout: 256 seconds)
[19:49:43] <djapo> Wooble: https://docs.aws.amazon.com/neptune/latest/userguide/access-graph-gremlin-python.html
[19:49:51] *** Quits: nojeffrey (~nojeffrey@60.166.70.115.static.exetel.com.au) (Ping timeout: 240 seconds)
[19:49:51] *** Joins: GucciBandana (~GucciBand@78-57-205-76.static.zebra.lt)
[19:49:56] <djapo> amazon does, i wonder why they chose tooo
[19:50:39] <Wooble> djapo: oh, that's possibly a name within a module and not an module. Still a bit horrifying.
[19:50:56] *** Quits: CheckYourSix (~quassel@unaffiliated/checkyoursix) (Remote host closed the connection)
[19:50:56] *** Joins: nojeffrey (~nojeffrey@115.70.166.60)
[19:52:00] *** Quits: henbruas (~henbruas@unaffiliated/henbruas) (Quit: ZNC 1.7.0 - https://znc.in)
[19:52:03] <Wooble> djapo: I guess there's a precedent with gettext traditionally being used as a function named _()
[19:52:15] *** Joins: ali1234 (~ali1234@88.97.12.44)
[19:52:22] <Wooble> hurry now to reserve the name ___ for your own silly use. :)
[19:52:29] *** Joins: subho (~subho@fedora/subho)
[19:52:30] *** Quits: subho (~subho@fedora/subho) (Client Quit)
[19:53:29] *** Joins: gareppa (~gareppa@unaffiliated/gareppa)
[19:53:54] *** Joins: inerthia (~inerthia@unaffiliated/inerthia)
[19:53:59] *** Quits: dxiri (~dxiri@23.79.232.14) (Remote host closed the connection)
[19:54:10] *** Joins: Ignacy (~Ignacy@82.102.20.219)
[19:55:07] *** Joins: rholloway (~rholloway@69-221-252-33.lightspeed.tukrga.sbcglobal.net)
[19:55:41] <Wooble> they also have an import * right under that. I'm not 100% sure this documentation isn't an april fool's joke.
[19:55:44] *** Joins: bmurt (~hmm@65.78.58.150)
[19:57:02] *** Quits: mujjingun (uid228218@gateway/web/irccloud.com/x-ppvdsuzygbslfdvu) (Quit: Connection closed for inactivity)
[19:57:15] *** Joins: henbruas (~henbruas@unaffiliated/henbruas)
[19:57:17] *** Joins: cwrbs (~jy@213.152.162.114)
[19:58:40] *** Quits: inerthia (~inerthia@unaffiliated/inerthia) (Ping timeout: 260 seconds)
[19:58:43] *** Quits: RickDeckard (~tgburrin@152.179.78.138) (Ping timeout: 268 seconds)
[19:59:01] *** Quits: gareppa (~gareppa@unaffiliated/gareppa) (Remote host closed the connection)
[19:59:21] *** Joins: Syzygy__ (~Syzygy@078132089037.public.t-mobile.at)
[19:59:26] *** Joins: CheckYourSix (~quassel@unaffiliated/checkyoursix)
[19:59:50] *** Joins: vamiry (~vamiry@197.37-191-154.fiber.lynet.no)
[19:59:57] *** Quits: mmfood (~mmfood@178.73.202.48) (Ping timeout: 240 seconds)
[19:59:58] *** Joins: gableroux (~gableroux@199.91.205.230)
[20:00:12] <SnoopJeDi> Wooble, yikes, _(), really? Is that usually used from a module, or imported into a namespace?
[20:00:22] *** Joins: cagomez (~cagomez@sb0-cf9a61b1.dsl.impulse.net)
[20:00:37] *** Joins: egegunes (~egegunes@unaffiliated/egegunes)
[20:00:38] <Wooble> SnoopJeDi: imported, because the whole point is to be as unnoticable as possible.
[20:00:40] <djapo> Wooble: yeah, a lot of imports not used. I know django likes to use _() fot gettext translations
[20:00:59] <SnoopJeDi> gross!
[20:02:23] *** Joins: xliiv (~xliiv@d89-122.icpnet.pl)
[20:02:24] *** Quits: henbruas (~henbruas@unaffiliated/henbruas) (Ping timeout: 268 seconds)
[20:02:35] *** Quits: Syzygy_ (~Syzygy@078132061046.public.t-mobile.at) (Ping timeout: 240 seconds)
[20:02:38] *** Joins: lacrymology (~lacrymolo@201-212-30-114.cab.prima.net.ar)
[20:02:39] *** Quits: cagomez (~cagomez@sb0-cf9a61b1.dsl.impulse.net) (Remote host closed the connection)
[20:02:57] *** Joins: cagomez (~cagomez@sb0-cf9a61b1.dsl.impulse.net)
[20:03:34] *** Joins: inerthia (~inerthia@unaffiliated/inerthia)
[20:03:38] *** Quits: m3ddl3r (~Thunderbi@192.30.201.10) (Ping timeout: 268 seconds)
[20:03:45] *** Joins: mmfood (~mmfood@178.73.202.18)
[20:04:17] *** Quits: gableroux (~gableroux@199.91.205.230) (Ping timeout: 248 seconds)
[20:04:26] *** Quits: Volis (uid12493@gateway/web/irccloud.com/x-pycdnxmcuxftcfxe) (Quit: Connection closed for inactivity)
[20:04:28] *** Quits: fission6 (~textual@static-173-56-120-142.nycmny.fios.verizon.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[20:04:31] *** Quits: egegunes (~egegunes@unaffiliated/egegunes) (Client Quit)
[20:04:33] *** Joins: RickDeckard (~tgburrin@152.179.78.138)
[20:04:37] *** Quits: rambo123456 (~textual@32.97.110.51) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[20:05:42] *** Quits: RangerBob (~brian@pool-98-118-245-158.clppva.fios.verizon.net) (Ping timeout: 255 seconds)
[20:06:17] <Wooble> SnoopJeDi: it's extra hilarious if you're using _ as a variable to mean "thing that needed a placeholder variable I'm not going to use"
[20:06:34] <SnoopJeDi> right, it seems like a remarkably poor choice for that exact reason
[20:06:53] *** Joins: bpremo (~bpremo@2620:10d:c090:180::1:2189)
[20:07:57] *** Quits: loader (~loader@81.19.4.181) (Ping timeout: 240 seconds)
[20:07:59] *** Joins: aielima (~aielima@gateway/tor-sasl/aielima)
[20:08:12] *** Quits: Belxjander (~Belxjande@sourcemage/Mage/Abh-Elementalist) (Quit: AmigaOSv4.1.6+//PowerPC native)
[20:08:17] <Wooble> possibly also in the REPL where _ is magic, but tbh if you're translating in the repl something may have gone wrong. :)
[20:08:24] *** Joins: _kmh_ (~kmh@p5DCC6A84.dip0.t-ipconnect.de)
[20:08:35] *** Quits: pangolin_ (~pawn@152.12.27.112) (Quit: Konversation terminated!)
[20:08:45] *** Quits: fpghost84 (~fpghost84@90.202.150.135) (Quit: Leaving)
[20:08:46] *** Quits: inerthia (~inerthia@unaffiliated/inerthia) (Ping timeout: 264 seconds)
[20:09:05] *** Joins: Belxjander (~Belxjande@sourcemage/Mage/Abh-Elementalist)
[20:10:22] *** Quits: cdown (~cdown@199.201.66.5) (Ping timeout: 256 seconds)
[20:10:37] *** Joins: m3ddl3r (~Thunderbi@192.30.201.10)
[20:10:46] *** Joins: dxiri (~dxiri@23.79.232.14)
[20:11:26] *** Joins: shakotan (~shakotn@193.64.190.190)
[20:11:55] *** Quits: aielima (~aielima@gateway/tor-sasl/aielima) (Remote host closed the connection)
[20:12:05] *** Quits: fandi (~fandi@112.78.178.3) (Read error: Connection reset by peer)
[20:12:05] *** Quits: fandi__ (~fandi@112.78.178.3) (Read error: Connection reset by peer)
[20:12:07] *** Joins: aielima (~aielima@gateway/tor-sasl/aielima)
[20:13:20] <lacrymology> I seem to recall that the logging module with stdout as output is faster than print for some reason, is that right?
[20:13:48] *** Quits: zmt01 (~zmt@c-98-248-234-34.hsd1.ca.comcast.net) (Read error: Connection reset by peer)
[20:13:55] *** Joins: inerthia (~inerthia@unaffiliated/inerthia)
[20:14:14] <wreed> when dealing with multiple processes how can I reliable check if the queue is empty? the docs say that the .empty() method is unreliable because of the normal mutli-process semantics but I am not sure how to go about this. also the SimpleQueue does not state this - are there different locks in place for a SimpleQueue ?
[20:14:33] *** Joins: zmt01 (~zmt@c-98-248-234-34.hsd1.ca.comcast.net)
[20:14:58] *** Joins: rpkilby (~rpkilby@cpe-76-182-45-76.nc.res.rr.com)
[20:15:02] *** Quits: Ignacy (~Ignacy@82.102.20.219) (Remote host closed the connection)
[20:15:22] *** Quits: alem0lars (~alem0lars@host208-243-dynamic.37-79-r.retail.telecomitalia.it) (Ping timeout: 264 seconds)
[20:16:08] *** Joins: m3ddl3r_33 (~Thunderbi@172.58.38.158)
[20:16:19] *** Quits: m3ddl3r (~Thunderbi@192.30.201.10) (Read error: Connection reset by peer)
[20:16:48] *** Joins: Redrield (459e2973@gateway/web/cgi-irc/kiwiirc.com/ip.69.158.41.115)
[20:16:49] *** Joins: roygbiv (~johnrambo@pdpc/supporter/active/roygbiv)
[20:17:20] *** Quits: plexigras (plexigras@gateway/vpn/privateinternetaccess/plexigras) (Ping timeout: 260 seconds)
[20:17:32] *** Quits: nibble_zero (~nibble_ze@37.244.231.177) (Quit: nibble_zero)
[20:18:07] *** Quits: inerthia (~inerthia@unaffiliated/inerthia) (Ping timeout: 245 seconds)
[20:19:13] <energizer> @functools.singledispatch also uses _
[20:19:33] *** Quits: rpkilby (~rpkilby@cpe-76-182-45-76.nc.res.rr.com) (Ping timeout: 256 seconds)
[20:19:47] *** Quits: roadie (~user@2a02:8108:f40:17f1:7540:340a:23d8:5008) (Ping timeout: 245 seconds)
[20:19:53] <energizer> by convention
[20:19:59] *** Quits: andeh_ (~andeh@146.115.76.19) (Ping timeout: 276 seconds)
[20:20:12] *** Quits: leni1 (~herabus@41.210.159.220) (Quit: Konversation terminated!)
[20:20:14] *** Quits: vamiry (~vamiry@197.37-191-154.fiber.lynet.no) (Quit: Textual IRC Client: www.textualapp.com)
[20:20:27] *** Quits: m3ddl3r_33 (~Thunderbi@172.58.38.158) (Ping timeout: 240 seconds)
[20:20:30] *** Joins: Frank1 (~gnome@186.9.16.247)
[20:20:39] <Frank1> hey
[20:20:53] <Frank1> I need some code to digest it all
[20:21:06] <Frank1> where can I find them?
[20:21:10] *** Joins: schemanic (~schemanic@2600:1000:b115:dfeb:d1df:e3c7:c319:5e1f)
[20:21:40] *** Joins: kingarmadillo (~kingarmad@70-139-18-232.lightspeed.hstntx.sbcglobal.net)
[20:22:06] <nedbat> Frank1: i'm not sure we know what you are talking about...
[20:22:39] *** Quits: teodorg (~teodorg@17751.telnet.bg) (Quit: Nettalk6 - www.ntalk.de)
[20:22:56] <Frank1> I'm a beginner
[20:23:08] <Frank1> I'm learning python
[20:23:13] <nedbat> Frank1: cool, welcome! :)
[20:23:24] <Frank1> and I want to know where can I find example codes
[20:23:29] <Frank1> ty!
[20:23:57] <Frank1> where I can find python simple projects
[20:24:04] <Frank1> just to learn more
[20:24:36] *** Quits: shakotan (~shakotn@193.64.190.190) (Ping timeout: 255 seconds)
[20:24:54] <Rapture> I have python2.7 and 3 installed locally and I'm trying to figure out how to get boto3 working for both. Currently works for python3
[20:25:02] *** Joins: m3ddl3r (~Thunderbi@192.30.201.10)
[20:25:04] <chachan> Frank1: I suggest: youtube and github (they have a "explore" button)
[20:25:05] *** Quits: Byteflux (~byte@byteflux.net) (Remote host closed the connection)
[20:25:13] <energizer> Frank1: books like Think Python have examples
[20:25:18] *** Joins: lainon (~lainon@2600-6c5c-6100-16f8-30a5-ea19-86a2-e632.dhcp6.chtrptr.net)
[20:25:30] <Frank1> not example how to learn
[20:25:40] <Frank1> example projects
[20:25:54] <Frank1> I'm going to github
[20:25:59] <Frank1> ty all!
[20:26:05] *** Joins: inerthia (~inerthia@unaffiliated/inerthia)
[20:26:46] *** Quits: palasso (~palasso@unaffiliated/palasso) (Quit: I am not a quiter!)
[20:27:16] <energizer> i dont know of a simple example project for beginners tbh
[20:27:33] *** Joins: kajo (~kajo@2001:4c50:371d:8400:ca2a:14ff:fe0f:7dd1)
[20:27:41] *** Joins: kurkale6ka (~kurkale6k@84.45.99.125)
[20:27:59] <energizer> is there one, complete with setup.py, readme, etc, somewhere?
[20:28:35] *** Quits: lesshaste (~lesshaste@82-69-126-43.dsl.in-addr.zen.co.uk) (Quit: Leaving)
[20:28:37] *** Quits: lmvka (~lmvka@195.210.24.71) (Ping timeout: 256 seconds)
[20:28:47] <KirkMcDonald> https://nedbatchelder.com/text/kindling.html
[20:29:02] *** Quits: cjoy (~anonymous@HSI-KBW-046-005-019-036.hsi8.kabel-badenwuerttemberg.de) (Quit: cjoy)
[20:29:13] *** Joins: Goldstorm (~Thunderbi@c-68-62-44-156.hsd1.mi.comcast.net)
[20:29:52] *** Joins: palasso (~palasso@unaffiliated/palasso)
[20:29:59] <grym> energizer: altendky has one
[20:30:03] *** Parts: Frank1 (~gnome@186.9.16.247) ()
[20:30:14] <grym> energizer: i keep meaning to template one to suit my own purposes.
[20:30:25] <grym> which will not be simple, per se, but will do what i need.
[20:30:41] *** Joins: gacrux (~gacrux@2406:e006:6d9d:1:45f9:a6aa:bd03:d06e)
[20:30:45] *** Quits: inerthia (~inerthia@unaffiliated/inerthia) (Ping timeout: 260 seconds)
[20:31:34] *** Quits: holden- (~holden-@unaffiliated/holden-) (Read error: Connection reset by peer)
[20:31:54] *** Joins: riclima (~riclima@198-48-202-89.cpe.pppoe.ca)
[20:31:55] *** Quits: noonker (~user@216.130.192.4) (Ping timeout: 260 seconds)
[20:31:59] *** Joins: holden- (~holden-@unaffiliated/holden-)
[20:32:06] <energizer> seems like most of those kindling projects don't include 'solutions'
[20:32:09] *** Quits: riclima (~riclima@198-48-202-89.cpe.pppoe.ca) (Remote host closed the connection)
[20:32:31] *** Joins: riclima (~riclima@198-48-202-89.cpe.pppoe.ca)
[20:32:39] *** Quits: kurkale6ka (~kurkale6k@84.45.99.125) (Ping timeout: 265 seconds)
[20:32:47] *** Quits: _kmh_ (~kmh@p5DCC6A84.dip0.t-ipconnect.de) (Read error: Connection reset by peer)
[20:32:52] <altendky> energizer: i've got a super duper minimal setup.py thingy, and a not-so-simple project with tests and travis/appveyor and...
[20:33:08] *** Joins: jjulian (~jjulian@i5DB50875.pool.tripleplugandplay.com)
[20:33:15] *** Joins: _kmh_ (~kmh@p5DCC6A84.dip0.t-ipconnect.de)
[20:34:24] <energizer> altendky: i see them, that seems helpful yeah
[20:35:11] *** Joins: chachan_ (~chachan@ec2-35-164-24-42.us-west-2.compute.amazonaws.com)
[20:35:12] <altendky> energizer: https://github.com/altendky/basicpyqt5example (with pyinstaller (for windows), and...)
[20:35:27] <altendky> https://github.com/altendky/tempexample/blob/widgetsovergl/setup.py
[20:35:32] <altendky> (the super simple)
[20:35:43] <energizer> yeah i found it
[20:35:44] <altendky> err, sorry.  https://github.com/altendky/tempexample/tree/widgetsovergl
[20:36:10] *** Quits: xliiv (~xliiv@d89-122.icpnet.pl) (Ping timeout: 260 seconds)
[20:36:29] *** Joins: roadie (~user@2a02:8108:f40:17f1:86a:26a9:3d63:fae1)
[20:36:48] *** Quits: _kmh_ (~kmh@p5DCC6A84.dip0.t-ipconnect.de) (Client Quit)
[20:36:55] *** Joins: Miezel (~Miezel@65.120.11.140)
[20:37:16] *** Joins: Deep6_ (~Deep6@S0106b4750e5f223e.pk.shawcable.net)
[20:37:33] *** Quits: edrocks (~ed@173.169.31.48) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[20:37:43] *** Joins: inerthia (~inerthia@unaffiliated/inerthia)
[20:37:52] *** Quits: tjt263 (uid149471@gateway/web/irccloud.com/x-rehzlovhpuidzfxe) (Quit: Connection closed for inactivity)
[20:38:00] *** Quits: chachan (~chachan@196.40.47.129) (Ping timeout: 256 seconds)
[20:38:10] *** Quits: jjulian (~jjulian@i5DB50875.pool.tripleplugandplay.com) (Ping timeout: 264 seconds)
[20:39:00] *** Joins: Byteflux (~byte@byteflux.net)
[20:39:25] *** Joins: Owner (~Owner@unaffiliated/owner)
[20:39:52] <Owner> what is the rationale for python not having a switch/case statement?
[20:40:52] <dude-x> Owner dicts are a nice way to switch on various types. The other reason is coming up a grammar for cases
[20:41:08] <Yhg1s> nah, the grammar isn't the issue. The semantics are.
[20:41:09] *** Quits: _xor (~xor@50.216.161.66.ded-dsl.fuse.net) (Quit: Leaving)
[20:41:19] <grym> Owner: per SO, anyway, you can't have an efficient jump table.  Culturally, everyone thinks dicts are at least as good and maybe better
[20:41:32] <Yhg1s> Owner: it's either very thin syntactic sugar for if/else or dict dispatch without any real benefits, or it has very surprising semantics.
[20:41:38] <grym> Owner: oo, the SO post is from hettinger so it might actually matter https://stackoverflow.com/questions/46701063/why-doesnt-python-have-switch-case/46701087#46701087
[20:41:53] *** Joins: noobineer (~noobineer@d74205.tidewater.net)
[20:41:55] <Yhg1s> Owner: there are a couple of PEPs that propose addition of a switch statement, which cover why they weren't accepted and/or contain links to the mailing list discussions about them.
[20:42:00] <javi404> If anyone needs a place to vent: #python-uncensored
[20:42:05] *** Quits: inerthia (~inerthia@unaffiliated/inerthia) (Ping timeout: 240 seconds)
[20:42:09] *** Joins: dcpc007 (~dcpc007@83.202.153.118)
[20:42:14] *** Quits: mmfood (~mmfood@178.73.202.18) (Ping timeout: 260 seconds)
[20:42:14] <Owner> if else is so ugly i want to use switch like i do in every.other.language.
[20:42:19] <Yhg1s> javi404: please make it ##python-uncensored.
[20:42:23] *** Joins: crichoux (~crichoux@tjctf/organizer/laudiacay)
[20:42:27] *** Joins: cfoch (uid153227@gateway/web/irccloud.com/x-sddnkmbxrdpjmagn)
[20:42:30] *** Quits: [itchyjunk] (~itchyjunk@unaffiliated/itchyjunk/x-1640057) (Remote host closed the connection)
[20:42:33] <Yhg1s> Owner: Python is not every language. You can't have a switch. You can use a dispatch table, though.
[20:42:34] <grym> Owner: try a dict with .get
[20:42:39] *** Joins: knifefork (~textual@pool-173-48-186-26.bstnma.fios.verizon.net)
[20:42:40] *** Quits: TheCoups (TheCoups_@gateway/vpn/privateinternetaccess/thecoups/x-81655785) (Ping timeout: 256 seconds)
[20:42:41] <grym> Owner: it's surprisingly pleasant
[20:42:50] *** Quits: GraysonBriggs (~GraysonBr@206-51-126-226.up.net) (Quit: Bye Bye)
[20:42:51] *** Joins: kfoonamalik (~kfoonamal@208.93.244.250)
[20:42:51] <energizer> Owner: there are several switch/case libraries
[20:43:21] <javi404> Yhg1s: done
[20:43:24] <Yhg1s> javi404: if the channel is called #python-uncensored, by Freenode rules it still falls under the jurisdiction of the PSF, and the PSF code of conduct, which is probably not what you want.
[20:43:32] <Owner> grym: every example i have seen of stuff like that is just doing a lookup essentially...i use switch statements to do different things based on a value
[20:43:43] <Owner> i dont need just a if(blah) return blah
[20:43:45] <javi404> Yhg1s: what is PSF?
[20:43:51] <grym> Owner: so have keys that are functions
[20:43:54] *** Joins: inerthia (~inerthia@unaffiliated/inerthia)
[20:43:55] *** Quits: Haudegen (~quassel@178.115.237.87) (Read error: Connection reset by peer)
[20:43:57] <grym> Owner: err, values
[20:43:59] <javi404> the acronym?
[20:44:01] <Yhg1s> javi404: https://www.python.org/psf-landing/
[20:44:15] <Owner> javi404: noob mistake not using ##, cmon man
[20:44:18] *** Quits: mnemonic (~semeion@unaffiliated/semeion) (Read error: Connection reset by peer)
[20:44:24] <dcpc007> hi, does anyone could help me configure "black" in a gitlab-runner in docker mode ?
[20:44:26] <energizer> Owner: see also https://github.com/mikeckennedy/python-switch
[20:44:26] *** Quits: enterprisey (~enterpris@wikipedia/enterprisey) (Remote host closed the connection)
[20:44:34] *** Quits: Syzygy__ (~Syzygy@078132089037.public.t-mobile.at) (Ping timeout: 260 seconds)
[20:44:43] <javi404> Owner: haha, one # for spammers to waste their time
[20:44:46] *** Quits: philr (~phil@ppp121-45-86-74.bras1.adl6.internode.on.net) (Ping timeout: 264 seconds)
[20:44:49] <javi404> ## for registered freenode users
[20:44:49] <beardedeagle> Owner: what you are talking about is possible with the current python syntax. You'll just have to accept you don't have an explicit case/switch keyword
[20:44:59] *** Quits: dviola (~diego@unaffiliated/dviola) (Quit: WeeChat 2.1)
[20:44:59] <javi404> Yhg1s: I don't give to shits about the PSF
[20:45:01] *** Joins: anqxyr (~anqxyr@nat4-minsk-pool-46-53-177-92.telecom.by)
[20:45:08] *** Joins: henbruas (~henbruas@unaffiliated/henbruas)
[20:45:09] <javi404> you can curse all you want in my channels
[20:45:11] <Yhg1s> javi404: mind your languyage here, please.
[20:45:16] <Yhg1s> javi404: please do it in your channel.
[20:45:25] <javi404> Yhg1s: that is why I created my channel
[20:45:37] <Owner> you created the wrong channel name
[20:45:37] *** Quits: Redrield (459e2973@gateway/web/cgi-irc/kiwiirc.com/ip.69.158.41.115) (Ping timeout: 256 seconds)
[20:45:52] <Yhg1s> Owner: they already said they'd fixed that.
[20:46:10] <javi404> for anyone who is an adult and isn't afraid of dirty words, any programmer who doesn't use a curse word or get mad is a programmer I don't trust.
[20:46:20] *** Quits: PulseAsio (~PulseAsio@dhcp-077-248-071-126.chello.nl) (Quit: Leaving)
[20:46:20] <Owner> lol
[20:46:21] <javi404> how can you program and not make mistakes that make you angry?
[20:46:25] *** Quits: TheManWithNoSock (~paige@71-80-66-240.dhcp.kgpt.tn.charter.com) (Ping timeout: 248 seconds)
[20:46:31] <javi404> Owner: what channel is wrong?
[20:46:37] *** Joins: manuelschneid3r (~manuelsch@p57A39159.dip0.t-ipconnect.de)
[20:46:39] <Yhg1s> javi404: it's not about being angry. It's about civil interaction.
[20:46:40] <javi404> I made and registered both.
[20:46:58] <Owner> its easy to say its about civil interaction when you can ban anyone you want
[20:46:59] <Yhg1s> javi404: As I said, by freenode rules, #python-uncensored would be a PSF channel.
[20:47:04] <javi404> Yhg1s: I once threw a laptop out of a forth floor window into a parking lot, is that not civil interaction?
[20:47:08] *** Joins: OrphineM (041c1fd3@gateway/web/freenode/ip.4.28.31.211)
[20:47:19] <energizer> Let's stay on topic please.
[20:47:19] *** Quits: palasso (~palasso@unaffiliated/palasso) (Quit: I am not a quiter!)
[20:47:34] *** Quits: dclayto1 (~dclayto1@mail.digitalsmiths.com) (Quit: WeeChat 1.4)
[20:47:39] <nedbat> javi404: you have your channel.  enjoy it.
[20:47:41] <Yhg1s> javi404: it sounds deeply unhealthy, but if you didn't throw it at someone, it's a different matter. Please feel free to rant all you want in ##python-uncensored.
[20:47:42] <beardedeagle> javi404: you have to remember there are people from all over the world in here of all cultures and backgrounds
[20:47:47] *** Joins: sveinse (~sveinse@156.92-221-160.customer.lyse.net)
[20:47:49] <javi404> Yhg1s: please cite rules sir
[20:47:56] <beardedeagle> what you say and how you say it is interpreted differently by everyone
[20:47:56] *** Quits: bzdocha (~bzdocha__@adsl-dyn241.78-99-15.t-com.sk) (Quit: Leaving)
[20:47:57] <javi404> beardedeagle: of course
[20:48:01] <beardedeagle> you may think it's ok
[20:48:04] <beardedeagle> someone else may not
[20:48:15] <grym> can we take discussion of ##p-u to #p-o
[20:48:20] *** Quits: inerthia (~inerthia@unaffiliated/inerthia) (Ping timeout: 256 seconds)
[20:48:23] <grym> and argue about dicts some more?
[20:48:28] <Yhg1s> javi404: https://freenode.net/policies#channel-ownership
[20:48:32] <OrphineM> Honestly, I just joined, but go by one simple mantra: Don't be a dick. And I do have a question regarding flask and selinux stuff.
[20:48:39] <SnoopJeDi> (Freenode's policies are linked in the MOTD every time you connect, FWIW)
[20:48:46] *** Joins: mnemonic (~semeion@unaffiliated/semeion)
[20:48:46] <energizer> OrphineM: please ask
[20:48:59] <Yhg1s> OrphineM: but please mind your language :P
[20:49:12] <sveinse> Is it possible to have configparser work both ways (load and store) with case sensitive keys?
[20:49:13] <OrphineM> Would be easier to pastebin, one sec
[20:49:44] <OrphineM> https://paste.pound-python.org/show/duemkDUxoZn3vIaHN7P2/
[20:49:50] *** Quits: sh1ro (~sh1ro@gateway/tor-sasl/sh1ro) (Remote host closed the connection)
[20:49:53] *** Quits: Ergo (~ergo@91.238.59.144) (Ping timeout: 268 seconds)
[20:49:56] *** Joins: chachan (~chachan@196.40.47.129)
[20:50:02] <OrphineM> Last line, figured it's an issue with how selinux labels work for just .so filels
[20:50:10] <Owner> energizer: i dont like that python-switch solution
[20:50:11] <javi404> Yhg1s: I don't see anything in there about adult language
[20:50:12] <OrphineM> Not sure what the proper label for it needs to be.
[20:50:25] *** Quits: oni_ (971c422d@gateway/web/freenode/ip.151.28.66.45) (Ping timeout: 260 seconds)
[20:50:42] <OrphineM> If I turn selinux off my flask instance runs everything perfectly fine.
[20:50:52] <Owner> energizer: if it could be done without a 'def' for each case
[20:50:58] <javi404> anyway, are there any good guides to learn python for a PHP and C++ person?
[20:51:04] *** Quits: bm371613 (~bartek@89-64-29-253.dynamic.chello.pl) (Quit: Konversation terminated!)
[20:51:11] <nedbat> javi404: you can start with the python.org tutorial
[20:51:27] <chachan> yeah, python.org tutorial is the way to go
[20:51:42] <Yhg1s> OrphineM: I believe it should be shlib_t.
[20:51:43] <javi404> thanks nedbat and chachan
[20:52:19] <energizer> Owner: how?
[20:52:22] <nedbat> Owner: i think the best solution is an if/elif ladder
[20:52:41] <Owner> nedbat: it is the best solution, it just looks like garbage
[20:52:49] *** Quits: zarzar1 (~zarzar@184.75.233.58) (Read error: Connection reset by peer)
[20:52:56] <nedbat> Owner: but it exactly expresses the intent, no?
[20:52:57] *** Joins: zarzar (~zarzar@184.75.233.58)
[20:53:09] <Owner> with a bunch of redundant code yes
[20:53:27] <nedbat> Owner: the only redundant part is naming the variable you are checking.
[20:53:34] <energizer> nedbat: did you see the 'why not elif' section?
[20:53:34] <Owner> i just dont get why every other language can have nice things but python cant
[20:53:37] *** Quits: IrishPrime (~IrishPrim@24-241-137-130.static.spbg.sc.charter.com) (Quit: Leaving)
[20:53:50] *** Joins: inerthia (~inerthia@unaffiliated/inerthia)
[20:53:53] <SnoopJeDi> "Explicit is better than implicit."
[20:53:54] <nedbat> Owner: it's all been written out if you want to understand.
[20:53:55] *** Quits: chachan_ (~chachan@ec2-35-164-24-42.us-west-2.compute.amazonaws.com) (Ping timeout: 265 seconds)
[20:54:08] <SnoopJeDi> switches have *incredibly* implicit behavior
[20:54:13] *** Joins: Redrield (459e2973@gateway/web/cgi-irc/kiwiirc.com/ip.69.158.41.115)
[20:54:17] <SnoopJeDi> and much evil has been done with that
[20:54:23] <nedbat> Owner: since the actual implementation of switch would be exactly the same as an if/elif ladder, it was felt that the extra syntax wasn't worth it.
[20:54:24] <SnoopJeDi> a dict of methods works just as well
[20:54:33] <Owner> nedbat: yeah i get there are "reasons" but it sounds like it was designed improperly
[20:54:34] *** Joins: UncleVasya_ (~UncleVasy@185-94-213-142.dynamic.ktkru.ru)
[20:54:35] <SnoopJeDi> (or if/elif as nedbat says)
[20:54:40] <nedbat> Owner: how so?
[20:54:42] *** Quits: veegee (~veegee@CPE9050cac64033-CM9050cac64030.cpe.net.cable.rogers.com) (Quit: veegee)
[20:54:48] <SnoopJeDi> "because it doesn't have the thing!"
[20:54:48] <Owner> nedbat: so it could actually be added?
[20:54:55] *** Joins: _Coffee (~quassel@2607:fea8:705f:f096:8474:81fe:2712:3be7)
[20:55:02] <nedbat> Owner: what part of python was badly designed?
[20:55:07] <Yhg1s> Owner: would you like to learn?
[20:55:07] <Yhg1s> Owner: because we can point you to long discussions about why what you want doesn't work in Python.
[20:55:07] <Yhg1s> Or, isn't worth the extra syntax.
[20:55:10] <grym> Owner: did you read those PEPs i linked? there are actual discussions in there about this issue in particular
[20:55:22] <SnoopJeDi> And they're quite good
[20:55:27] *** Quits: lainon (~lainon@2600-6c5c-6100-16f8-30a5-ea19-86a2-e632.dhcp6.chtrptr.net) (Remote host closed the connection)
[20:55:30] <SnoopJeDi> (regardless of which side you agree with)
[20:55:40] <energizer> there's another option here also, https://ptpb.pw/Ubg7
[20:55:42] <liste> it'd be super easy to add switch to Python, but that doesn't mean it *should* be added
[20:55:50] <Owner> i just want to write nice looking code, but i guess thats not possible
[20:55:53] <energizer> https://ptpb.pw/Ubg7/python
[20:56:20] *** Quits: riclima (~riclima@198-48-202-89.cpe.pppoe.ca) (Ping timeout: 265 seconds)
[20:56:21] <SnoopJeDi> Owner, if you have made up your mind to be unhappy in any language that doesn't have switches, Python is not likely to be a good choice
[20:56:37] <Yhg1s> Owner: perhaps you just want to read https://www.python.org/dev/peps/pep-3103/
[20:56:45] <grym> i cared for about a week. and then i stopped.
[20:56:46] <OrphineM> hmm, changing the label to shlib_t only cuts it off as lib_t
[20:56:46] *** Joins: pwnz0r (~pwnz0r@c-24-5-158-134.hsd1.ca.comcast.net)
[20:56:57] <SnoopJeDi> Because the truth is that Python *does* limit your freedom as a programmer in many cases ("There should be one-- and preferably only one --obvious way to do it.") and the community largely considers that a Good Thing.
[20:57:14] <SnoopJeDi> Which is obviously not for everyone, but hey, that's why multiple languages exist!
[20:57:20] <siege> does anyone happen to know why _PyList_Extend is "hidden" as it is (ie. not just PyList_Extend)
[20:57:30] *** Quits: mnemonic (~semeion@unaffiliated/semeion) (Read error: Connection reset by peer)
[20:57:50] <sveinse> I find myself implementing tables and lookups with objects when the if-ladders becomes large. Usually these ladders are more or less about testing for the same thing, just different values/variants
[20:57:59] <nedbat> Owner: how long have you been writing Python? Do you have a particular piece of code that needs switch that we could look at?
[20:58:03] *** Quits: aielima (~aielima@gateway/tor-sasl/aielima) (Remote host closed the connection)
[20:58:22] <energizer> nedbat: how long are your elif chains?
[20:58:24] *** Quits: henbruas (~henbruas@unaffiliated/henbruas) (Quit: ZNC 1.7.0 - https://znc.in)
[20:58:29] *** Joins: aielima (~aielima@gateway/tor-sasl/aielima)
[20:58:31] <nedbat> energizer: i would have to go looking.
[20:58:32] *** Quits: inerthia (~inerthia@unaffiliated/inerthia) (Ping timeout: 256 seconds)
[20:58:32] *** Quits: UncleVasya (~UncleVasy@185-94-213-142.dynamic.ktkru.ru) (Ping timeout: 256 seconds)
[20:58:39] <energizer> nedbat: ballpark?
[20:58:48] <Yhg1s> siege: the requirement that the second argument be an actual list (which is for internal reasons). The canonical way to extend a list from the C API is to use slice assignment, instead.
[20:58:53] <nedbat> 2 <= n <= 1000 ? :)
[20:58:59] *** Quits: enhance (enhance@nat/redhat/x-uccznzguihrdphqb) (Read error: Connection reset by peer)
[20:59:12] *** Joins: henbruas (~henbruas@unaffiliated/henbruas)
[20:59:14] *** Joins: mnemonic (~semeion@unaffiliated/semeion)
[20:59:30] *** Quits: s14ve (~s14ve@ip-78-102-32-106.net.upcbroadband.cz) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[20:59:39] <SnoopJeDi> anything with more than 3 branches makes me wonder if I'm trying to drive a screw with a hammer
[20:59:41] *** Quits: detseg (~segv@35.128.4.87) (Quit: o/)
[20:59:41] <energizer> nedbat: if it's more than ~3 elifs, i usually get confused
[20:59:52] <nedbat> agreement!
[20:59:56] <siege> Yhg1s, but... that's not a requirement, I'm reading it now. It'll happily work on any iteratable. It just has special cases where it's faster for PyList and PyTuple instances
[21:00:06] <Owner> nedbat: i wish i didnt have to write python as it is so ugly, but i have to.
[21:00:14] <SnoopJeDi> Which isn't to say I wouldn't write the branch, but I'm likely to bury it in a well-named method :)
[21:00:27] <nedbat> Owner: I'm sorry.  what language do you prefer?
[21:00:30] <Owner> nedbat: i will use if/elif/else, and just love all the extra verbosity
[21:00:32] <Yhg1s> siege: I believe that depends on what version you're looking at :)
[21:00:42] *** Quits: Bendr (~Bendr@unaffiliated/innocent99) (Remote host closed the connection)
[21:00:46] <SnoopJeDi> Owner, you seem to have rather made up your mind on the language, which we can't help with. Do you have other questions?
[21:00:54] <nedbat> Owner: you're talking about an extra "x ==" for each case, right?
[21:00:57] <siege> ah, I am looking over v3, I guess I could go back in time to earlier 3.y versions and see
[21:01:03] <Owner> SnoopJeDi: who is we
[21:01:06] <Yhg1s> siege: most of the C API was evolved, not designed, I'm afraid. And mostly need-driven. I'm sure patches to make PyList_Extend public would be considered.
[21:01:07] *** Joins: Bendr (~Bendr@unaffiliated/innocent99)
[21:01:09] <energizer> i wouldnt write it with >3, i'd use the dict dispatch
[21:01:09] <Owner> nedbat: yup
[21:01:13] <javi404> nedbat: I think what Owner means is because it is for pay and there is no choice.
[21:01:15] <Yhg1s> siege: you may have to go back quite a long time.
[21:01:29] *** Joins: fission6 (~textual@static-173-56-120-142.nycmny.fios.verizon.net)
[21:01:32] <Owner> well no other langauge has scapy for one
[21:01:48] *** Quits: rmcd (~rmcd@cpc119850-nrwh12-2-0-cust133.4-4.cable.virginm.net) (Ping timeout: 256 seconds)
[21:01:50] <Owner> afaik
[21:02:03] <energizer> Owner: are you aware of the dict dispatch pattern?
[21:02:12] *** Joins: ToBeFree (~tobefree@wikimedia/ToBeFree)
[21:02:15] *** Joins: Syzygy__ (~Syzygy@078132089037.public.t-mobile.at)
[21:02:20] <SnoopJeDi> Owner, anyone, really. No sense trying to force a change of preference, even if that weren't offtopic for #python.
[21:02:20] <Owner> energizer: i have seen it, but its even uglier and less readable than if/elif/else
[21:02:24] *** Joins: subho (~subho@fedora/subho)
[21:02:25] *** Joins: s14ve (~s14ve@ip-78-102-32-106.net.upcbroadband.cz)
[21:02:30] *** Quits: Coffee-N-Donuts (~SubXiu@unaffiliated/bacalli) (Quit: Leaving)
[21:02:30] *** Quits: s14ve (~s14ve@ip-78-102-32-106.net.upcbroadband.cz) (Client Quit)
[21:02:42] <grym> Owner: python libraries can be pretty compelling.  I will note that you will loathe every second of it if you insist on writing {java,c,..} patterns in python, though.
[21:02:48] *** Joins: twandy (~Thunderbi@2606:7400:c16::f252)
[21:02:49] <energizer> Owner: i don't personally agree
[21:03:01] <Owner> doesnt matter, maybe i will rename my check value to 'x' instead of 'long variablename' to make it less disastrous looking
[21:03:17] *** Quits: twandy (~Thunderbi@2606:7400:c16::f252) (Client Quit)
[21:03:29] * sveinse is often getting rants from non-py co-workers about the indenting scheme of python. Some simply don't like it.
[21:03:30] <Owner> grym: hmm
[21:03:33] <SnoopJeDi> We can't comment on your disdain for the pattern without actually seeing sample code. It's legible enough in what I've read
[21:03:39] *** Joins: inerthia (~inerthia@unaffiliated/inerthia)
[21:03:48] <SnoopJeDi> sveinse, do the same coworkers have strong opinions about OTB et al? :)
[21:03:58] <javi404> SnoopJeDi: am I included in "We" ? I can't help much, I am here to ask questions since I am transitioning from PHP to Python, basically starting from zero in python.
[21:03:58] <Owner> sveinse: who does like it?
[21:04:04] <grym> Owner: you might like jeff knupp's "idiomatic python" ebook/pdf, which really helped me come over from other langauges without wanting to shave my head in anger
[21:04:12] *** Quits: UncleVasya_ (~UncleVasy@185-94-213-142.dynamic.ktkru.ru) (Ping timeout: 256 seconds)
[21:04:16] <sveinse> SnoopJeDi: sorry, OTB?
[21:04:28] <nedbat> javi404: by "we", SnoopJeDi meant that the channel can't help if someone wants to just rant about hating Python.
[21:04:29] <SnoopJeDi> One True Brace
[21:04:30] *** Joins: chachan_ (~chachan@ec2-35-164-24-42.us-west-2.compute.amazonaws.com)
[21:04:33] *** Quits: ToBeFree (~tobefree@wikimedia/ToBeFree) (Remote host closed the connection)
[21:04:33] <Owner> grym: sounds useful, barely have time to read a book though
[21:04:35] *** Quits: Miezel (~Miezel@65.120.11.140) (Ping timeout: 240 seconds)
[21:04:50] <Owner> nedbat: we dont mind people ranting
[21:05:00] <grym> Owner: a wise man once told me, "slow down, we're in a hurry!"
[21:05:02] <SnoopJeDi> javi404, what nedbat said. In any converastion, you can't convince someone who has decided not to be convinced, no matter how good your arguments are.
[21:05:02] *** Quits: duckpuppy (~patrickai@h168.108.18.98.dynamic.ip.windstream.net) (Ping timeout: 265 seconds)
[21:05:08] <nedbat> Owner: it gets on people's nerves, and doesn't produce anything useful.
[21:05:20] <Owner> nedbat: yeah but i speak for myself when i say 'we'
[21:05:20] <sveinse> SnoopJeDi: yeah. And for that matter: the flames about typestrict vs type loose languages :D
[21:05:22] <Owner> just like everyone else
[21:05:28] <javi404> nedbat: well what options do people have? If I go down to my local bar and start ranting and raving about SystemD I will probably get put into an institution against my will.
[21:05:35] <javi404> and tech conferences are not everyday
[21:05:39] <Owner> javi404: lol
[21:05:47] <javi404> so here we know people are programmers of python
[21:05:53] <Yhg1s> javi404: this isn't the place to rant.
[21:05:54] <grym> javi404: is this not why we invented twitter?
[21:05:56] <nedbat> javi404: there are many other channels on freenode, etc.  people dont have to rant here.
[21:06:01] <SnoopJeDi> sveinse, so, I *hated* semantic whitespace when I first saw Python, because I was writing C-alike code at the time and not having braces Felt Very Weird
[21:06:03] <energizer> Owner: a lot of the people in this conversation are regular participants of #python and have a good sense of the common opinions
[21:06:03] <javi404> and can rant and rave to people who know what the hell we are talking about, just like in #reddit-sysadmin
[21:06:17] *** Joins: shakotan (~shakotn@193.64.190.190)
[21:06:21] <sveinse> Owner: I like python very much, thank you. So I think you're in the wrong forum for ranting about py
[21:06:26] <javi404> nedbat: agreed, #python-uncensored and ##python-uncensored
[21:06:34] <Yhg1s> Except not #python-uncensored.
[21:06:35] <SnoopJeDi> sveinse, fast-forward a few years after I've seen very stupid things like Apple's missing-braces SSL flaw and other things that indentation style is supposed to help with
[21:06:47] <javi404> Yhg1s: why not again?
[21:06:52] <javi404> it is a channel about a snake
[21:06:52] *** Quits: xcm (~xcm@ipa210.225.tellas.gr) (Remote host closed the connection)
[21:06:57] *** Quits: unreal (~unreal@unaffiliated/unreal) (Ping timeout: 240 seconds)
[21:07:00] <SnoopJeDi> I decided that maybe giving programmers fewer choices to bikeshed over is probably for the best.
[21:07:04] <Owner> sveinse: i think im not ranting, i accept that i have to use if/elif/else as the best solution for me
[21:07:04] <Yhg1s> javi404: https://freenode.net/policies#channel-ownership again.
[21:07:36] <Owner> its fine, just wish someone had thought of the things every other language has when designing the grammar
[21:07:37] <Yhg1s> javi404: #python* channels on freenode are governed by the PSF. Ask #freenode.
[21:07:40] <javi404> Yhg1s: not going to bother arguing with you, your oppinion has been noted.
[21:07:47] <SnoopJeDi> Nesting and flow are visually unambiguous in Python by design, and that's pretty cool. I sometimes wish the delimiters were visible tokens, but...it does work.
[21:07:54] <Yhg1s> javi404: it's not my opinion, sorry.
[21:07:56] *** Quits: oprypin (~irc@pryp.in) (Quit: Bye)
[21:07:57] *** Quits: chachan (~chachan@196.40.47.129) (Ping timeout: 240 seconds)
[21:08:02] *** Quits: Beanzilla (~Beanzilla@unaffiliated/beanzilla) (Quit: sudo shutdown -h now)
[21:08:21] *** Quits: inerthia (~inerthia@unaffiliated/inerthia) (Ping timeout: 240 seconds)
[21:08:35] *** Joins: sunil_bansal (~sunil_ban@49.205.216.234)
[21:08:40] *** Joins: oprypin (~irc@pryp.in)
[21:08:42] <Owner> ill see if idiomatic python makes me not want to...i dont know, whatever people do these days when they go insane
[21:08:47] <sveinse> SnoopJeDi: I'm using an editor that highlights them, that helps a lot
[21:08:55] <Owner> kick people out of restaurants or something, idk
[21:09:11] <Owner> cheers, pythonistas
[21:09:12] <SnoopJeDi> Owner, I think using emotionally loaded language like "ugly" "disastrous" "redundant" is fairly ranty
[21:09:13] <nedbat> Owner: we can help with the python code if you like. now or in the future.
[21:09:14] *** Parts: rcdilorenzo (~rcdiloren@cpe-24-163-97-97.nc.res.rr.com) ()
[21:09:27] *** Joins: xcm (~xcm@ipa210.225.tellas.gr)
[21:09:33] *** Joins: jamesaxl (~James_Axl@41.249.133.46)
[21:09:40] <javi404> Yhg1s: "are reserved for on-topic projects." yes, it is on-topic, the project of letting python programmers speak freely within the rules of freenode,
[21:09:43] <Owner> SnoopJeDi: those are facts not opinions
[21:09:51] *** Quits: knifefork (~textual@pool-173-48-186-26.bstnma.fios.verizon.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[21:09:58] <Owner> compared to switch/case , if/elif/else is a disaster and ugly and redundant
[21:10:00] <Owner> prove me wrong
[21:10:00] <nedbat> Owner: you should stop now.
[21:10:08] <javi404> where is george carlin when we need him
[21:10:10] <nedbat> Owner: these are subjective opinions.
[21:10:15] <SnoopJeDi> So, were there other questions that *are* topical?
[21:10:16] <Yhg1s> javi404: please take this to #freenode. channels matching #python* on freenode are governed by the PSF. I didn't invent this rule.
[21:10:19] *** Quits: Pronoe (~Pronoe@D96837C6.cm-24.dynamic.ziggo.nl) (Remote host closed the connection)
[21:10:21] *** Quits: dramsey (~dramsey@c-68-37-94-119.hsd1.mi.comcast.net) (Ping timeout: 265 seconds)
[21:10:38] <Owner> nedbat: if you say so
[21:10:49] *** Quits: _Coffee (~quassel@2607:fea8:705f:f096:8474:81fe:2712:3be7) (Read error: Connection reset by peer)
[21:10:52] *** Quits: tjf (~tjf@unaffiliated/tjf) (Ping timeout: 256 seconds)
[21:10:53] <nedbat> Owner: we are happy to help where we can.
[21:10:56] <Owner> is it redundnat?  does it look pretty? is it well organized?
[21:10:59] <bjs> Owner: I prefer if/elseif over C style switch
[21:11:01] <nedbat> Owner: stop it.
[21:11:06] <bjs> so there’s at least 1 person!
[21:11:08] <nedbat> Owner: we understand your view.
[21:11:09] *** Quits: rememberYou (~user@unaffiliated/rememberyou) (Remote host closed the connection)
[21:11:22] *** Quits: rui0f2da445 (~textual@23.239.225.1) (Quit: bye)
[21:11:28] <Owner> well answer those questions and you will know if its actually fact or opinion
[21:11:30] <Owner> just saying
[21:11:30] *** Quits: noobineer (~noobineer@d74205.tidewater.net) (Ping timeout: 245 seconds)
[21:11:38] <nedbat> Owner: "disaster"?
[21:11:43] <energizer> bjs: apparently so did the audience https://www.python.org/dev/peps/pep-3103/#rejection-notice
[21:11:45] <javi404> Yhg1s: I posted to #freenode to make you happy
[21:11:46] <nedbat> Owner: clearly not. let's drop it.
[21:11:46] *** Joins: tjf (~tjf@unaffiliated/tjf)
[21:11:55] <javi404> let's see what they say
[21:12:07] <Yhg1s> javi404: it's not about making me happy. It's about your channel going away if people complain about it not following the PSF code of conduct P
[21:12:10] <Yhg1s> :P
[21:12:10] <javi404> I never understood the need to censor people in IRC
[21:12:23] <bjs> javi404: it’s controlling channels for quality
[21:12:27] *** Joins: knifefork (~textual@pool-173-48-186-26.bstnma.fios.verizon.net)
[21:12:28] <nedbat> javi404: every community has a set of norms.  We're trying to explain ours.
[21:12:31] <javi404> Yhg1s: well, why would my personal channel have to follow the PSF?
[21:12:36] <grym> javi404: mostly so we don't clutter up the scrollback as we've .. just.. been ... doing... :/
[21:12:54] <Yhg1s> javi404: because of how freenode works. Personal channels are the ##-ones. #-ones are not personal channels.
[21:13:07] <SnoopJeDi> Because # is reserved for "official" channels on Freenode, implying the people running the channel are associated with the 'thing' (and that the 'thing' is considered topical for Freenode)
[21:13:09] <Yhg1s> javi404: but again, please discuss this on #freenode instead.
[21:13:14] <bjs> I do wish python had more pattern matching constructs though
[21:13:20] *** Quits: sunil_bansal (~sunil_ban@49.205.216.234) (Ping timeout: 260 seconds)
[21:13:30] <javi404> SnoopJeDi: I am now programming in Python, does that mean I am not associated with it?
[21:13:31] <SnoopJeDi> bjs, `from perl import __regex__` ?
[21:13:34] <javi404> it is open source
[21:13:36] <grym> bjs: i've been wanting something like this in pathlib for a while
[21:13:36] *** Quits: zmt01 (~zmt@c-98-248-234-34.hsd1.ca.comcast.net) (Read error: Connection reset by peer)
[21:13:45] <SnoopJeDi> javi404, it does not make you an official representative, nope
[21:13:46] <dude-x> bjs +1 more pattern matching
[21:13:48] <nedbat> javi404: your question has already been answered in #freenode.  Drop it.
[21:13:52] *** Quits: waveform (~waveform@waveform.plus.com) (Quit: Leaving)
[21:13:55] *** Quits: henbruas (~henbruas@unaffiliated/henbruas) (Ping timeout: 260 seconds)
[21:14:05] <Owner> javi404: you can fork it and name it jPython and add switch / case statement plz :>
[21:14:16] <sveinse> To give some positive praise in all this: I just started using f-strings for a py3 project. It's just brilliant!
[21:14:21] <SnoopJeDi> I really like perl's regex "operation"
[21:14:21] *** Joins: zmt01 (~zmt@c-98-248-234-34.hsd1.ca.comcast.net)
[21:14:22] *** Joins: RangerBob (~brian@pool-98-118-245-158.clppva.fios.verizon.net)
[21:14:29] <grym> sveinse: one of us.
[21:14:30] <dude-x> sveinse do you abuse it? :p
[21:14:35] <SnoopJeDi> ...which is probably the only nice thing I can say about Perl haha
[21:14:36] *** Joins: mefistof1les (~mefistofe@unaffiliated/mefistofeles)
[21:14:38] *** Quits: subho (~subho@fedora/subho) (Quit: laptop going to sleep. ZZZzzz…)
[21:14:42] <energizer> bjs: have you seen matchpy?
[21:14:46] <deniska> f-strings aren't too abusable
[21:14:56] <sveinse> dude-x: define abuse? :P
[21:15:00] <SnoopJeDi> sveinse, they're lovely! I came to 3.6 just for f-strings when a Vagrant container went up in smoke and I had to rebuild
[21:15:01] <deniska> well, you can do some amount of code golfing with f-strings
[21:15:01] <grym> sveinse: it's _the_ 3.6+ compelling feature.  i've dragged people over to 3.x because of it
[21:15:06] <bjs> energizer: no... please enlighten me!
[21:15:13] <deniska> But you can't really do anything with an f-string which a .format call couldn't do
[21:15:22] <deniska> (in fact f-strings are less powerful than format calls)
[21:15:22] <energizer> bjs: idk if this is what you had in mind, but https://matchpy.readthedocs.io/en/latest/
[21:15:25] <SnoopJeDi> grym, really, not 1_000_000? :P
[21:15:38] <deniska> I like 1_000_000
[21:15:41] <energizer> i like it too
[21:15:41] *** Joins: rpkilby (~rpkilby@cpe-76-182-45-76.nc.res.rr.com)
[21:15:48] <mefistof1les> hello, I'm reviewing options to compile python packages/modules to byte code, what are the options? Is there a link for this? Thanks
[21:15:49] <SnoopJeDi> I like the idea, I just haven't used it or seen it in the wild yet
[21:15:52] *** Joins: Neros (~Neros@31-32-241-72.abo.bbox.fr)
[21:15:55] <dude-x> deniska sveinse i think Dave Beazely did some gnarly things with f-strings
[21:16:04] <Yhg1s> mefistof1les: what do you want to do with the bytecode?
[21:16:07] <grym> SnoopJeDi: same.  never had a use case.
[21:16:09] <sveinse> deniska: true, but more often than not, it gives brief and easy (=less typing) access to local vars for printing and string output. Shorter and more precise code is good
[21:16:13] *** Quits: IanLiu (~IanLiu@189-69-38-63.dsl.telesp.net.br) (Quit: IanLiu)
[21:16:17] *** Quits: pwnz0r (~pwnz0r@c-24-5-158-134.hsd1.ca.comcast.net) ()
[21:16:20] <deniska> dude-x: He can do gnarly things with any python construct
[21:16:20] <SnoopJeDi> int(1e6) is shorter and equally expressive imo :P
[21:16:25] *** Quits: tjf (~tjf@unaffiliated/tjf) (Ping timeout: 256 seconds)
[21:16:25] <liste> mefistof1les: what's the goal?
[21:16:26] *** Joins: inerthia (~inerthia@unaffiliated/inerthia)
[21:16:33] *** Quits: Goldstorm (~Thunderbi@c-68-62-44-156.hsd1.mi.comcast.net) (Quit: Goldstorm)
[21:16:35] <grym> things like foo, *_, bar = unpack_12_things_10_of_which_are_useless()  are nice too
[21:16:39] *** Quits: luizdepra (~luizdepra@2001:1284:f013:ffa2:8ca0:e570:4255:9ddd) (Remote host closed the connection)
[21:16:44] <dude-x> anyway most people will want to do sensible things with f strings anyway
[21:17:05] <deniska> like generating sql :P
[21:17:14] *** Quits: Alkanor (~Alkanor@LFbn-1-1054-197.w86-247.abo.wanadoo.fr) (Ping timeout: 256 seconds)
[21:17:15] <SnoopJeDi> ha!
[21:17:23] *** Joins: tjf (~tjf@unaffiliated/tjf)
[21:17:30] <mefistof1les> liste: ofuscate source code for clients machines
[21:17:40] <mefistof1les> Yhg1s: ↑
[21:17:43] <nedbat> mefistof1les: bytecode isn't much of an obfuscation
[21:17:52] <dude-x> i'm hoping to see subinterpreter support become a thing in python 3.8
[21:17:56] <Owner> pyinstaller supports upx packing
[21:18:03] <mefistof1les> nedbat: why not?
[21:18:10] <Owner> so you can make one executable with upx protection afaik
[21:18:11] *** Quits: DammitJim (~DammitJim@173.227.148.6) (Quit: Leaving)
[21:18:16] <nedbat> mefistof1les: because the structure of the code is fairly apparent in the bytecode
[21:18:25] *** Parts: Siecje (~Cody@otwaon0147w-lp130-02-70-48-255-232.dsl.bell.ca) ()
[21:18:28] *** Quits: techalchemy (~Hawkerz@unaffiliated/hawkerz) (Quit: Leaving)
[21:18:28] <mefistof1les> I mean, it's a closed-source proprietary software, we don't want the code to be known, what are the common options in this case?
[21:18:32] <Yhg1s> mefistof1les: okay, this isn't going to last long. It's extremely trivial to undo -- because Python has to be able to run it, it's always going to be readable.
[21:18:53] <Yhg1s> mefistof1les: don't give the program to the end user, or license it appropriately, or don't use Python (or most programming languages)
[21:18:54] <nedbat> mefistof1les: what are the secrets you are trying to protect?
[21:18:54] <SunDwarf> there are several OSS bytecode -> code converters anyway
[21:18:56] <Owner> https://pythonhosted.org/PyInstaller/usage.html#using-upx
[21:19:00] <mefistof1les> we are already working Cythonizing everything, but it seems that it's not an option anymore do to some bugs with some libs with Cython
[21:19:09] <sveinse> grym: yes. I like something like  extra = ('-f', '-c') if force else () ;  subprocess.run(('my','command',*force,'args'))
[21:19:21] *** Quits: shakotan (~shakotn@193.64.190.190) (Ping timeout: 240 seconds)
[21:19:31] <grym> sveinse: oh yeah, list unpacking inside things is great too
[21:19:35] <sveinse> (for the record I don't normally to one-line if else statements, just for abbrevity here)
[21:19:36] *** Quits: nbdmaw1 (~mark@143.59.32.239) ()
[21:20:02] <mefistof1les> s/do7due
[21:20:05] <mefistof1les> err /due
[21:20:09] <Owner> i was at least glad to find out that object literals can be multi line
[21:20:12] <grym> sveinse: also unambiguous dict merging.
[21:20:21] *** Quits: kousu (~kousu@comms.kousu.ca) (Ping timeout: 240 seconds)
[21:20:21] <Owner> i was going to freak out if i couldnt do that
[21:20:29] *** Joins: kurkale6ka (~kurkale6k@84.45.99.125)
[21:20:30] *** Quits: rpkilby (~rpkilby@cpe-76-182-45-76.nc.res.rr.com) (Ping timeout: 265 seconds)
[21:20:32] *** Quits: cyoz (~alex@2a02:8109:8f80:756c:fda4:92ff:5b7a:3d61) (Read error: Connection reset by peer)
[21:20:32] <grym> sveinse: {**a, **b} does _exactly_ what you think it does
[21:20:43] <mefistof1les> Yhg1s: we are basically compiling C code with Cython
[21:20:57] *** Quits: inerthia (~inerthia@unaffiliated/inerthia) (Ping timeout: 240 seconds)
[21:21:04] <nedbat> mefistof1les: what secrets are you are trying to protect?
[21:21:05] *** Quits: rjdp9736 (~rjdp9736@183.82.17.121) (Ping timeout: 240 seconds)
[21:21:21] <sveinse> grym: what about collisions? b[x] will override any present a[x]?
[21:21:24] <SunDwarf> if you're trying to hide the source code, a legal agreement is probably stronger than trying to obfuscate it arbitrarily
[21:21:27] *** Quits: TidB (~TidB@pD9FCE8AF.dip0.t-ipconnect.de) (Ping timeout: 240 seconds)
[21:21:29] <Yhg1s> mefistof1les: compiled C code is much harder to decompile, yes. However, the C code generated by Cython will have a lot of patterns in it, so that may make it easy to figure out things about the code that you would rather not make public.
[21:21:30] <Owner> nedbat: his name was seth rich?
[21:21:31] <grym> sveinse: order matters.
[21:21:45] *** Quits: zoxo (~zoid@unaffiliated/taxationistheft) (Quit: going down for a reboot)
[21:21:47] <nedbat> Owner: sorry?
[21:21:57] *** Quits: dcpc007 (~dcpc007@83.202.153.118) (Ping timeout: 268 seconds)
[21:21:58] *** Quits: Knyght (knyght@108.61.103.52) (Ping timeout: 240 seconds)
[21:21:58] <sveinse> grym: cool, didn't know about that. thanks. learned something here :D
[21:22:04] <Owner> nedbat: you think he is going to tell you which secrets? lol
[21:22:13] *** Joins: maslen2 (uid202698@gateway/web/irccloud.com/x-howsnyxcpwvnwjtv)
[21:22:21] <Owner> mefistof1les: https://pythonhosted.org/PyInstaller/usage.html#using-upx
[21:22:23] <grym> sveinse: i found it super handy when i was writing a debug "dump everything i know about this thing" function.
[21:22:23] *** Quits: tjf (~tjf@unaffiliated/tjf) (Ping timeout: 276 seconds)
[21:22:34] <nedbat> Owner: I didn't mean, what is the exact secret, I mean, is it credentials, is it an algorithm, etc?
[21:22:57] *** Quits: malachi (malcontent@gateway/vpn/privateinternetaccess/malcontent) (Quit: Leaving)
[21:23:01] <Owner> i officially suck at writing python code
[21:23:02] *** Quits: justanotherbody (~miker985@205.175.118.187) (Ping timeout: 276 seconds)
[21:23:06] <nedbat> Owner: we can help
[21:23:10] <Owner> every other language i can pick up in hours
[21:23:11] *** Joins: tjf (~tjf@unaffiliated/tjf)
[21:23:12] <Yhg1s> sveinse: just like with dict.update().
[21:23:26] <sveinse> Yhg1s: yeah, I figured, thanks
[21:23:35] <mefistof1les> nedbat: not sure why that matters, can you explain why?
[21:23:39] *** Joins: zoid (~zoid@unaffiliated/taxationistheft)
[21:23:43] *** Joins: kousu (~kousu@comms.kousu.ca)
[21:23:50] <nedbat> mefistof1les: there might be different solutions based on what kinds of secrets are involved.
[21:23:56] *** Joins: inerthia (~inerthia@unaffiliated/inerthia)
[21:23:59] <Yhg1s> mefistof1les: the information you want to hide dictates how badly the attempt to hide it is going to work.
[21:24:07] <Owner> nedbat: and the documentation on python.org is so hard to follow, its like just a splat of stuff and italics everywhere
[21:24:14] *** Joins: systemd0wn (~systemd0w@c-67-181-73-191.hsd1.ca.comcast.net)
[21:24:16] *** Quits: nolsen (nolsen@gateway/shell/suchznc/x-kqbwkphmxulfpxgb) (Quit: SuchZNC - Such ZNC, many free, w0w... -- https://suchznc.net)
[21:24:21] <mefistof1les> well, basically algorithms for image processing and some optimization techniques for electronic control
[21:24:25] <mefistof1les> that's what we want to hide
[21:24:30] *** Quits: Redrield (459e2973@gateway/web/cgi-irc/kiwiirc.com/ip.69.158.41.115) (Remote host closed the connection)
[21:24:30] *** Joins: justanotherbody (~miker985@205.175.106.199)
[21:24:34] <Owner> nedbat: like this...i cant even tell what its trying to tell me https://docs.python.org/3.6/library/datetime.html
[21:24:45] <mefistof1les> Owner: thanks
[21:24:50] <SnoopJeDi> Owner, do you have questions?
[21:25:08] <nedbat> Owner: it's trying to explain the contents of the datetime module.  Is there something we can help with?
[21:25:09] <Yhg1s> Owner: it's tryign to tell you that a datetime module exists and it has a bunch of classes.
[21:25:26] *** Joins: chachan (~chachan@196.40.47.129)
[21:25:51] <nedbat> Owner: seriously, people here are eager to help. ask a question that we can answer.
[21:26:04] <Yhg1s> mefistof1les: those kinds of things are trivial to decompile from bytecode. If you can't use a translator for the source (like Cython or PyPy), it's going to be hard to obfuscate.
[21:26:35] <Yhg1s> mefistof1les: or, offload it to somewhere the attacker doesn't have access to, like your own servers.
[21:26:51] *** Quits: Syzygy__ (~Syzygy@078132089037.public.t-mobile.at) (Ping timeout: 240 seconds)
[21:26:56] <Yhg1s> mefistof1les: you'll want a stern license in any case, though.
[21:27:02] *** Quits: medard (~misof@147.175.213.164) (Quit: Leaving)
[21:27:21] *** Quits: Belxjander (~Belxjande@sourcemage/Mage/Abh-Elementalist) (Ping timeout: 240 seconds)
[21:27:23] <nedbat> mefistof1les: partly this comes down to how hard someone will work to figure out your secrets, and how bad it is for you if they get them.
[21:27:28] *** Joins: Haudegen (~quassel@178.115.237.87)
[21:27:28] *** Quits: greatgatsby (~greatgats@167.88.132.50) (Remote host closed the connection)
[21:27:53] *** Joins: Knyght (knyght@2001:19f0:5000:8ea8:5400:ff:fe0f:c274)
[21:27:59] *** Joins: greatgatsby (~greatgats@167.88.132.50)
[21:28:06] *** Quits: benonsoftware (bdw@ubuntu/member/benonsoftware) (Quit: Quit)
[21:28:33] *** Quits: inerthia (~inerthia@unaffiliated/inerthia) (Ping timeout: 248 seconds)
[21:28:35] <Yhg1s> mefistof1les: mind you, those kinds of things are also relatively easy to discern from compiled C code, especially compiled from generated C.
[21:29:03] <sveinse> obfuscate != security
[21:29:05] *** Quits: n35xdxb0 (~n35xdxb0@cpc130684-camd16-2-0-cust846.know.cable.virginm.net) (Ping timeout: 248 seconds)
[21:29:06] <mefistof1les> yes
[21:29:09] <mefistof1les> I never said security
[21:29:10] *** Quits: chachan_ (~chachan@ec2-35-164-24-42.us-west-2.compute.amazonaws.com) (Ping timeout: 264 seconds)
[21:29:21] <mefistof1les> ok
[21:29:40] <mefistof1les> it's not something we can have in our servers, it's part of some machines we sell
[21:29:49] *** Quits: ams__ (uid48118@gateway/web/irccloud.com/x-xrewfctzdhbmiqgs) (Quit: Connection closed for inactivity)
[21:30:08] *** Joins: gronke (~gronke@2600:1700:b00:bc50:71bc:a36e:29b5:4462)
[21:30:41] <gronke> let's say I have a list like [[a,b],[b,c],[e,f]] and I want to output a new list with the first line gone, is there an easy one liner to do that?
[21:30:42] <mefistof1les> but ok,  I think I have a better picture of the situation
[21:30:52] <mefistof1les> thanks Yhg1s nedbat and others for the information
[21:31:26] <Owner> mefistof1les: welcome
[21:31:26] *** Joins: Redrield (459e2973@gateway/web/cgi-irc/kiwiirc.com/ip.69.158.41.115)
[21:31:40] <grym> gronke: mylist[1:]
[21:31:42] <SnoopJeDi> gronke, slice the list with 1: ?
[21:31:55] *** Quits: koltrast (0c17e4d3@h77-53-57-114.cust.se.alltele.net) (Ping timeout: 245 seconds)
[21:32:02] <gronke> there we go, I knew it
[21:32:05] <gronke> thanks
[21:32:09] <Owner> gronke: list.pop(0)
[21:32:13] *** Quits: RickDeckard (~tgburrin@152.179.78.138) (Quit: Leaving...)
[21:32:14] <grym> Owner: god no
[21:32:15] <gronke> ooo
[21:32:17] *** Quits: rns_ (rns@gateway/vpn/privateinternetaccess/rns) (Ping timeout: 248 seconds)
[21:32:17] <gronke> lol
[21:32:18] *** Quits: Knyght (knyght@2001:19f0:5000:8ea8:5400:ff:fe0f:c274) (Ping timeout: 256 seconds)
[21:32:28] <Owner> grym: ?
[21:32:29] <SnoopJeDi> "output a new list"
[21:32:34] <SnoopJeDi> pop() mutates
[21:32:37] <grym> ^
[21:32:52] *** Joins: n35xdxb0 (~n35xdxb0@cpc130684-camd16-2-0-cust846.know.cable.virginm.net)
[21:32:52] <grym> and changing the length of collections constently bites me
[21:33:04] <Owner> he is probably going to do mylist = mylist[1:] anyway
[21:33:13] <grym> ¯\_(ツ)_/¯
[21:33:16] <grym> that's still better
[21:33:25] <Owner> not if you want children to be able to read it
[21:33:33] <grym> if we're going to mutate, mutate explicitly.
[21:33:36] <Owner> and learn something that applies to other langnuages :)
[21:33:52] <sveinse> Owner: oh, please stop
[21:33:53] <grym> Owner: `import this`
[21:34:42] *** Joins: Knyght (knyght@108.61.103.52)
[21:35:04] *** Joins: nolsen (nolsen@gateway/shell/suchznc/x-cjqgdqunvqhsqxsr)
[21:35:07] <Owner> theres del too :>
[21:35:23] <grym> Owner: whose semantics are totally not what you think!  hurray.
[21:35:34] *** Joins: inerthia (~inerthia@unaffiliated/inerthia)
[21:35:47] <Owner> probably not judging from python documentation readability \o/ https://docs.python.org/3/tutorial/datastructures.html#the-del-statement
[21:36:09] <sveinse> Technically there's nothing wrong with using this instead of self in classes, is there? Althou not pythonic
[21:36:20] <grym> sveinse: self is not a reserved word
[21:36:27] <grym> sveinse: neither are args or kwargs
[21:36:28] <SnoopJeDi> sveinse, the name is arbitrary, but you will likely confuse anyone reading it
[21:36:33] <nedbat> sveinse: python won't mind, but all your python collaborators will
[21:36:38] *** Quits: RebelCoder (~RebelCode@81.2.181.43) (Remote host closed the connection)
[21:36:48] <grym> changing args/kwargs sometimes makes more sense than leaving them alone
[21:37:06] <Owner> wait so instead of "self" you can use "pythonisthebest" ?
[21:37:07] <SnoopJeDi> yea every now and then there's a good name for those, particularly args
[21:37:18] *** Joins: IanLiu (~IanLiu@189-69-38-63.dsl.telesp.net.br)
[21:37:31] <sveinse> well, because c++ has 'this' doesn't make in an excuse using it in py classes
[21:37:54] <SnoopJeDi> `def operation(some, flags, *operants):`
[21:37:57] <CrtxReavr> Owner, technicaly, yes. . . but self is widely used. . . gotta think about others reading your code.
[21:38:05] *** Quits: kurkale6ka (~kurkale6k@84.45.99.125) (Ping timeout: 240 seconds)
[21:38:08] *** Joins: sunil_bansal (~sunil_ban@49.205.216.234)
[21:38:25] <Owner> CrtxReavr: even i cant read my python code
[21:38:27] *** Joins: Alkanor (~Alkanor@LFbn-1-1054-197.w86-247.abo.wanadoo.fr)
[21:38:31] <sveinse> And cls for class methods
[21:39:05] <nedbat> CrtxReavr: Owner is being forced against their will to write Python code
[21:39:35] <Owner> theres another thing i dont really get
[21:40:00] *** Quits: black_13 (614d5f72@gateway/web/freenode/ip.97.77.95.114) (Quit: Page closed)
[21:40:07] <nedbat> Owner: what's that?
[21:40:10] <CrtxReavr> nedbat, sounds like the waste of a good languge.
[21:40:10] *** Quits: inerthia (~inerthia@unaffiliated/inerthia) (Ping timeout: 260 seconds)
[21:40:20] <Owner> why bother having tuples that are immutable when its basically the same as another data type....wouldnt you just write your code so that it doesnt try to mutate an object that you dont want to mutate, or do people write code on accident
[21:40:20] <SnoopJeDi> CrtxReavr, can't make the horse drink the water.
[21:40:47] <CtrlC> I received a test question which I don't fully understand. It is not in english so I can't paste it here but from what I understand from it, it is asking me to handle three tasks in three different processes and I should handle the timing of the processes using round robin algorithm. does this make any sense?
[21:40:49] <nedbat> Owner: tuples can be dict keys.  lists can't
[21:40:56] *** Quits: fmgt (~Marcelo@189.16.19.82) (Read error: Connection reset by peer)
[21:41:05] <Owner> nedbat: sounds arbitrary?
[21:41:14] *** Quits: stnutt (~stnutt@unaffiliated/stnutt) (Ping timeout: 276 seconds)
[21:41:18] <nedbat> Owner: you need to stop pre-judging everything and learn.
[21:41:22] <SnoopJeDi> Owner, how do you hash an object whose content can change?
[21:41:23] <nedbat> Owner: there are reasons.
[21:41:25] <CrtxReavr> I'm quite sure you want your dict keys to be unmutable.
[21:41:30] <nedbat> Owner: and they arent stupid reasons
[21:41:30] <KirkMcDonald> Owner: More generally, mutable objects can't be dict keys.
[21:41:34] *** Joins: benonsoftware (bdw@ubuntu/member/benonsoftware)
[21:41:41] <SnoopJeDi> This argument applies equally well to `const` in C
[21:41:44] <Owner> SnoopJeDi: the dict handles that
[21:41:54] * CrtxReavr loves using tuples as dict keys.
[21:41:58] <nedbat> Owner: do you know how hash tables work?
[21:42:01] *** Quits: OrphineM (041c1fd3@gateway/web/freenode/ip.4.28.31.211) (Quit: Page closed)
[21:42:04] <Owner> sure
[21:42:07] *** Joins: codesoup (~codesoup@2607:fea8:e220:70:cc51:24e1:bb0c:7880)
[21:42:11] <Owner> there are no dict functions that can change the keys
[21:42:18] <nedbat> Owner: if the list is mutated, it's hash will change. that means it has to move buckets
[21:42:24] <nedbat> Owner: how would the dict know it has to be moved?
[21:42:27] <SnoopJeDi> Owner, okay. `l=[0]; d = {l: 'foo', [0, 1]: 'bar'}; l.append(1) # uh oh!`
[21:42:39] *** Joins: koltrast (e942a69a@h77-53-57-114.cust.se.alltele.net)
[21:42:40] <nedbat> Owner: the key is a reference to an object. You can mutate it
[21:42:41] <energizer> "What happens when you mess with hashing in Python" https://www.asmeurer.com/blog/posts/what-happens-when-you-mess-with-hashing-in-python/
[21:42:52] *** Joins: stnutt (~stnutt@unaffiliated/stnutt)
[21:42:55] *** Quits: sunil_bansal (~sunil_ban@49.205.216.234) (Ping timeout: 268 seconds)
[21:43:02] <SnoopJeDi> What happens? Do I overwrite a key? Do I get a dict with two keys of the same value? (if so, how do I reference the one that isn't captured in a name)
[21:43:03] *** Quits: aielima (~aielima@gateway/tor-sasl/aielima) (Remote host closed the connection)
[21:43:08] <CrtxReavr> Owner, Python isn't just some crazy shit someone came-up with last month. . . it's been fine-tuned since the '80s.
[21:43:21] <Owner> so they wrote python in C
[21:43:25] <Owner> it sounds like
[21:43:26] <nedbat> Owner: yes
[21:43:31] <Owner> lol
[21:43:36] <nedbat> Owner: why is that funny?
[21:43:37] <grym> Owner: sometimes, in python!
[21:43:43] *** Joins: aielima (~aielima@gateway/tor-sasl/aielima)
[21:43:47] <Owner> nedbat: it explains all these 'reasons'
[21:43:54] <KirkMcDonald> Owner: ...?
[21:43:54] *** Joins: inerthia (~inerthia@unaffiliated/inerthia)
[21:43:55] <sveinse> Owner: well python is implemented in more that just C
[21:43:57] <SunDwarf> only cpython is written in C
[21:44:05] <nedbat> Owner: it explains nothing.  The same semantics are in Jython, IronPython, and PyPy.
[21:44:05] <SnoopJeDi> (and C has immutability too)
[21:44:06] <SunDwarf> there's alternative implementations, like Jython for the JVM
[21:44:10] <SunDwarf> and pypy for python
[21:44:12] <nedbat> Owner: good luck with your learning.
[21:44:34] <SunDwarf> so C is not the source of these 'reasons' you speak of
[21:44:45] <Owner> SunDwarf: you sure about that?
[21:44:54] *** Parts: energizer (~energizer@unaffiliated/energizer) ("Leaving")
[21:44:58] *** Joins: energizer (~energizer@unaffiliated/energizer)
[21:45:01] *** Quits: pheonix83 (~pheonix83@2407:a080:3000:6::3d) (Quit: Leaving)
[21:45:04] <SunDwarf> surprisingly enough, I am sure that there are alternative implementationsd
[21:45:06] <Owner> look at python 0.1 and maybe you find something different, i dont know
[21:45:17] <SnoopJeDi> You don't seem to want to know
[21:45:45] *** yesno_ is now known as yesno
[21:46:00] *** Joins: Forsythe (Forsythe@gateway/vpn/privateinternetaccess/forsythe)
[21:46:01] <sveinse> How many python implementations are there? Is there an overview listed somewhere?
[21:46:05] <Yhg1s> Owner: so that you can use them as dict keys.
[21:46:14] <Owner> SnoopJeDi: i dont know, i just think tuples seem weird because i dont see them until learning python
[21:46:18] *** Joins: Odyseus (~Odyseus@138.117.129.193)
[21:46:24] <SunDwarf> sveinse, there's probably too many to count as one-off small implementations
[21:46:29] <Owner> like no one else has "tuples"
[21:46:33] <Owner> maybe named something different
[21:46:38] <SnoopJeDi> Owner, C++ has std::tuple
[21:46:39] *** Quits: RangerBob (~brian@pool-98-118-245-158.clppva.fios.verizon.net) (Quit: Leaving)
[21:46:39] <Jonatan> like everyone else has tuples
[21:47:06] <CtrlC> if anyone has any idea about my question, I'd be very tankful.
[21:47:16] *** Quits: gronke (~gronke@2600:1700:b00:bc50:71bc:a36e:29b5:4462) (Quit: Leaving)
[21:47:16] <KirkMcDonald> There are senses in which a tuple in Python is analogous to a struct in C.
[21:47:19] *** Quits: unpythonic (~unpythoni@64.84.68.252) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[21:47:20] <Owner> Jonatan: interesting
[21:47:28] <SnoopJeDi> CtrlC, it's hard to say much without specifics...
[21:47:35] <SnoopJeDi> CtrlC, do you know what all the things you mentioned mean?
[21:47:58] <CtrlC> SnoopJeDi, I'm not familiar with round robin but I know the rest.
[21:48:05] *** Quits: inerthia (~inerthia@unaffiliated/inerthia) (Ping timeout: 240 seconds)
[21:48:54] <Jonatan> round robin is simply taking turns in order
[21:48:55] <grym> sveinse: pyenv install --list | wc -l says 335
[21:48:55] <sveinse> CtrlC: simply put, service each of them in turn going in circles.
[21:49:06] <grym> sveinse: but that counts point releases of cpython
[21:49:12] *** Joins: rns (~rns@c-69-180-72-207.hsd1.fl.comcast.net)
[21:49:24] <SnoopJeDi> "Every process takes a turn."
[21:49:30] *** Joins: edne (~edne@82.84.164.177)
[21:49:35] *** Joins: andeh_ (~andeh@146.115.76.19)
[21:49:35] <Jonatan> 1 2 3 1 2 3 1 2 3 ...
[21:49:37] *** Joins: overyander (~jeffspeff@12.49.160.253)
[21:49:41] *** Quits: fission6 (~textual@static-173-56-120-142.nycmny.fios.verizon.net) (Quit: Textual IRC Client: www.textualapp.com)
[21:49:54] <CtrlC> so I should use something like the process model?
[21:49:56] <Yhg1s> sveinse: ones that are strictly Python are CPython, PyPy, IronPython and Jython.
[21:49:57] *** Quits: stnutt (~stnutt@unaffiliated/stnutt) (Ping timeout: 260 seconds)
[21:50:16] <sveinse> thanks
[21:50:26] *** Quits: adamholmberg (~adamholmb@104.218.66.173) (Remote host closed the connection)
[21:50:28] <CtrlC> Is there any reference or anything I can read to learn those?
[21:50:54] *** Joins: nedbat__ (uid99610@python/psf/nedbat)
[21:51:02] *** Joins: adamholmberg (~adamholmb@104.218.66.173)
[21:51:10] <KirkMcDonald> There are also tinypy and MicroPython, which are subsets of Python.
[21:51:34] <SnoopJeDi> CtrlC, wikipedia has an article
[21:51:42] <CtrlC> or do they mean using something else? idk. why would you want to do that when three processes can run in parallel?
[21:51:47] <KirkMcDonald> And there's Cython, which isn't an implementation of Python, but can pretend.
[21:51:53] <Jonatan> CtrlC: it's not something specific to processes. all round-robin says is to take turns.
[21:51:56] *** Quits: MrNeon (~quassel@a85-138-86-108.cpe.netcabo.pt) (Quit: http://quassel-irc.org - Chat comfortably. Anywhere.)
[21:52:04] <SnoopJeDi> CtrlC, parallel often does not mean simultaneous execution.
[21:52:16] <CtrlC> Jonatan, so what can I use in this specific example?
[21:52:21] *** Joins: stnutt (~stnutt@unaffiliated/stnutt)
[21:52:33] *** Quits: Neros (~Neros@31-32-241-72.abo.bbox.fr) (Ping timeout: 248 seconds)
[21:53:05] *** Quits: jeffspeff (~jeffspeff@12.49.160.131) (Ping timeout: 240 seconds)
[21:53:13] <Jonatan> I have no idea what they mean. Typically if you start processes it's because you want the OS to deal with scheduling
[21:53:36] *** Joins: inerthia (~inerthia@unaffiliated/inerthia)
[21:53:49] <Jonatan> Perhaps they don't mean OS processes at all, and that you would have completely normal code where you switch between tasks
[21:54:12] <CtrlC> Jonatan, maybe they just mean the tasks. here are the tasks:
[21:54:18] *** Joins: Spitfire (spitfire@wikipedia/spitfire)
[21:54:27] *** Quits: overyander (~jeffspeff@12.49.160.253) (Ping timeout: 240 seconds)
[21:54:45] *** Quits: Alkanor (~Alkanor@LFbn-1-1054-197.w86-247.abo.wanadoo.fr) (Ping timeout: 260 seconds)
[21:54:55] <CtrlC> Jonatan, yes. 1: takes a name and generates 10 similar names, 2: generates .com domains with them, 3: checks if the url is valid and then downloads. and it says 1 and 2 should take 10 and 8 seconds using sleeps.
[21:55:00] *** Joins: lumm (~lumm@2a01:e35:2f0f:b480:1233:2a3b:100:9b4e)
[21:55:02] <Jonatan> For example the tasks could be iterators, you might take 2 values and move on to the next, and so on
[21:55:12] *** Quits: schemanic (~schemanic@2600:1000:b115:dfeb:d1df:e3c7:c319:5e1f) (Remote host closed the connection)
[21:55:26] <CtrlC> maybe by the word they used for process they just meant the tasks I mentioned.
[21:55:27] *** Quits: adamholmberg (~adamholmb@104.218.66.173) (Ping timeout: 240 seconds)
[21:55:54] *** Quits: AaronMT (~textual@2607:fea8:3de0:fc7:e0c9:ca49:d64d:adca) (Quit: Textual IRC Client: www.textualapp.com)
[21:55:55] <Jonatan> You're the one translating and seeing all the other context :^)
[21:56:21] <CtrlC> Jonatan, That's the best I can do and those are the only two possiblities I think
[21:57:27] *** Joins: __charly__ (~charly@104-184-3-192.lightspeed.austtx.sbcglobal.net)
[21:57:34] *** Joins: beanish (beanish@gateway/vpn/privateinternetaccess/beanish)
[21:57:41] <Jonatan> But I agree, mentioning scheduling suggests that your sequential code does a bit of work, queues the task, continues with the next task, and so on
[21:57:50] *** Parts: orbisvicis (~orbisvici@unaffiliated/orbisvicis) ()
[21:58:20] *** Joins: RangerBob (~brian@pool-98-118-245-158.clppva.fios.verizon.net)
[21:58:25] *** Quits: inerthia (~inerthia@unaffiliated/inerthia) (Ping timeout: 248 seconds)
[21:58:44] *** Quits: cerealguy (uid86634@gateway/web/irccloud.com/x-sjfwwyyeryclkxjs) (Quit: Connection closed for inactivity)
[21:58:57] *** Quits: sdfgsd (~root@213.74.82.169) (Ping timeout: 268 seconds)
[21:59:12] <CtrlC> Jonatan, let's say I write three functions for those three tasts. I don't get how am I supposed to stop the functions from going on to run the others and so on.:/
[21:59:14] *** Quits: e^ipi (~john@159.89.117.181) (Read error: Connection reset by peer)
[21:59:22] *** Joins: adelfino (~adelfino@2800:2121:c000:107a:b527:ab8a:b7af:61d5)
[21:59:29] *** Quits: AvianFlu (~avianflu@freedom.sexy) (Ping timeout: 248 seconds)
[21:59:34] *** Joins: sdfgsd (~root@213.74.82.169)
[21:59:43] <adelfino> Hi! Given a closure like: ClosureVars(nonlocals={}, globals={}, builtins={'print': <built-in function print>}, unbound={'x'}), is there a way to bound "x"?
[21:59:56] <CtrlC> nedbat, you have any idea?
[22:00:22] *** Quits: hotpot33 (~hotpot33@unaffiliated/hotpot33) (Ping timeout: 264 seconds)
[22:01:05] *** Quits: edne (~edne@82.84.164.177) (Ping timeout: 248 seconds)
[22:01:37] <Yhg1s> adelfino: well, it's 'unbound' because it couldn't be bound from locals or globals. At runtime Python will try to load it from globals, or fall back to builtins.
[22:01:48] <Yhg1s> adelfino: so if you're sure the globals aren't going to change before you'd call the function, you would look in builtins.
[22:01:55] *** Quits: aielima (~aielima@gateway/tor-sasl/aielima) (Remote host closed the connection)
[22:02:05] <Owner> i have so many imports, i must be doing something wrong
[22:02:19] <Owner> import datetime from datetime
[22:02:21] <Owner> is that right?
[22:02:28] *** Quits: widp (~widp@49.207.60.104) (Quit: WeeChat 2.1)
[22:02:41] <ironfroggy> switch the `import` and `from` there
[22:02:43] <SnoopJeDi> No, that's backwards.
[22:02:56] <Owner> from datetime import datetime
[22:03:01] *** Quits: beanish (beanish@gateway/vpn/privateinternetaccess/beanish) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[22:03:01] *** Joins: lainon (~lainon@24-159-4-77.dhcp.smrt.tn.charter.com)
[22:03:02] *** Joins: aielima (~aielima@gateway/tor-sasl/aielima)
[22:03:04] <Yhg1s> Owner: it's not uncommon to have lots of imports. It's usually better to import modules instead of classes from modules, though.
[22:03:07] <Owner> from time improt time
[22:03:14] <adelfino> Yhg1s: I see, thanks!
[22:03:20] <Owner> Yhg1s: so just import datetime ?
[22:03:27] <Yhg1s> Owner: yes.
[22:03:31] *** Quits: AcTiVaTe (~activate@host-m7ku8h.tnz1.zeelandnet.nl) (Ping timeout: 265 seconds)
[22:03:33] <Owner> ah ok, so import datetime, time
[22:03:37] <Owner> would get both
[22:03:42] <ironfroggy> it depends on what you are using from it and how often, imho
[22:03:48] *** Quits: iAmerikan (~dwshrewt@unaffiliated/iamerikan) (Quit: WeeChat 2.1)
[22:03:54] <mjlee> `from datetime import datetime` is probably what you want
[22:04:14] <mjlee> Or just `import datetime`
[22:04:23] <mjlee> And then refer to datetime.datetime
[22:04:27] <Owner> do most people put all their imports at the top of the file?  i have seen some examples where they have extra imports in __main__
[22:04:34] <ironfroggy> if you are going to use only 1 or 2 things from a module only 1 or 2 times, just import the module. if you're using them many times in your code, import the specific things so you can refer to them more concisely.
[22:04:35] <SnoopJeDi> For datetime I generally import the specific thing I want. Keeping the namespace is useful if you're worried about clobbering something. (you wouldn't really want to do `from math import sin, cos` for example)
[22:04:45] <Yhg1s> Owner: yes, in general, you put the imports at the top of the module that needs them.
[22:04:46] <ironfroggy> Owner, yes, top of the file is standard.
[22:04:51] <Owner> ironfroggy: that makes sense
[22:05:08] <Yhg1s> ironfroggy: unfortunately, that makes it harder to, for example, mock out parts of a module.
[22:05:09] *** Quits: lumm (~lumm@2a01:e35:2f0f:b480:1233:2a3b:100:9b4e) (Ping timeout: 256 seconds)
[22:05:13] *** Joins: enterprisey (~enterpris@wikipedia/enterprisey)
[22:05:21] <Yhg1s> (also, reload, but don't use reload.)
[22:05:22] *** Joins: shakotan (~shakotn@193.64.190.190)
[22:05:26] *** Joins: stosw_ (~stosw@ec2-18-236-151-143.us-west-2.compute.amazonaws.com)
[22:05:35] <Owner> im not sure i am smart enough to use modules
[22:05:42] *** Parts: stosw_ (~stosw@ec2-18-236-151-143.us-west-2.compute.amazonaws.com) ()
[22:05:50] <Owner> i was going to just  have one giant .py
[22:05:56] <Jonatan> CtrlC: it's really hard to suggest both how to interpret and how to implement (translation makes it worse, and worse yet if the original isn't understood when translated)
[22:06:02] *** Quits: Vision (Vision@24-217-191-16.dhcp.stls.mo.charter.com) (Ping timeout: 276 seconds)
[22:06:19] <grym> Owner: might as well tear the bandaid of python packaging off fast
[22:06:29] <ironfroggy> Yhg1s, that's fair, but reading comprehension can be worth the cost.
[22:06:35] *** Quits: vidarr (~vidr@unaffiliated/vidr) (Quit: leaving)
[22:06:36] *** Quits: audiosyncrasy (~audiosync@c-73-60-215-64.hsd1.nh.comcast.net) (Quit: The Lounge - https://thelounge.github.io)
[22:06:44] <Owner> grym: what does it gain me
[22:06:47] <SnoopJeDi> And is also rather specific to things you might want to mock
[22:07:00] <CtrlC> Jonatan, still have no suggestion or guesses?
[22:07:08] <CtrlC> Maybe I should just use the process module and interupt?
[22:07:21] *** Quits: lacrymology (~lacrymolo@201-212-30-114.cab.prima.net.ar) (Ping timeout: 240 seconds)
[22:07:29] *** Joins: audiosyncrasy (~audiosync@c-73-60-215-64.hsd1.nh.comcast.net)
[22:07:30] <Yhg1s> SnoopJeDi: or monkeypatch, or otherwise reassign.
[22:07:35] *** Quits: chachan (~chachan@196.40.47.129) (Ping timeout: 240 seconds)
[22:07:45] <grym> Owner: the ability to distribute your code, the ability to call your code from the command line, the ability to manage dependencies... basically everything.
[22:07:48] <Owner> grym: little bits of code in a bunch of files vs a lot of code in one file ?
[22:07:53] *** Joins: inerthia (~inerthia@unaffiliated/inerthia)
[22:07:58] <grym> Owner: project structure too
[22:08:11] <grym> namespacing
[22:08:12] <grym> etc.
[22:08:14] <SnoopJeDi> Yhg1s, right. Context matters is what I mean, so this is an example of a freedom that requires some discretion
[22:08:16] <Owner> hmmm
[22:08:59] <grym> Owner: if you write anything of use, you are practically guaranteed to want to pip install it; you can't do that without doign the setup.py thing
[22:09:09] <grym> it's frankly pretty painless
[22:09:19] <Owner> i was looking at the setup.py thing today
[22:09:29] <Owner> im not writing anything re-usable
[22:10:23] <Owner> i created a setup.sh and a requirements.txt
[22:10:31] <Owner> which just installs the requirements with pip
[22:11:17] <CtrlC> can I use threads for the roundrobin thing maybe?
[22:11:59] <sveinse> Another tip on how to make working with python a lot easier is to learn to use virtual environments.
[22:12:12] *** Quits: radicaldev (~kvirc@c-73-76-132-192.hsd1.tx.comcast.net) (Ping timeout: 256 seconds)
[22:12:15] <Owner> yes pyton3.6 -m venv newproject
[22:12:17] *** Joins: lacrymology (~lacrymolo@201-212-30-114.cab.prima.net.ar)
[22:12:23] <Owner> source bin/activate
[22:12:40] <sveinse> In our workplace many have grunts towards py due to mishaps with mismatching versions of modules, and venvs fixes all that
[22:12:46] *** Quits: inerthia (~inerthia@unaffiliated/inerthia) (Ping timeout: 256 seconds)
[22:13:06] *** Joins: hotpot33 (~hotpot33@unaffiliated/hotpot33)
[22:13:09] <Owner> do you use pip freeze?
[22:13:17] <Owner> for documentation
[22:13:32] *** Quits: zmt01 (~zmt@c-98-248-234-34.hsd1.ca.comcast.net) (Read error: Connection reset by peer)
[22:13:36] *** Quits: BPL (~BPL@76.0.60.213.dynamic.reverse-mundo-r.com) (Quit: Leaving)
[22:13:40] <sveinse> Owner: the beauty is that you actually don't need to run activate (you can of course). Any program installed in venv/bin or venv/Scripts can be called and they will load the venv them selves when running
[22:13:54] *** Quits: sdfgsd (~root@213.74.82.169) (Ping timeout: 256 seconds)
[22:14:00] <Owner> sveinse: really....
[22:14:10] <Owner> however, i think it must add bin to your PATH
[22:14:16] <Owner> becaues theres stuff in there
[22:14:26] <sveinse> Our windows users really enjoy that, because they get a myscript.exe that can be called from the explorer
[22:14:41] *** Joins: sdfgsd (~root@213.74.82.169)
[22:14:42] *** Quits: gloomy (~Gloomy@ip-81-11-163-53.dsl.scarlet.be) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[22:14:57] *** Joins: henbruas (~henbruas@unaffiliated/henbruas)
[22:15:01] <sveinse> Owner: you can, but you don't have to add it to path.
[22:15:12] <Owner> i think activate adds it
[22:15:17] *** Quits: codesoup (~codesoup@2607:fea8:e220:70:cc51:24e1:bb0c:7880) (Ping timeout: 255 seconds)
[22:15:30] <Owner> but good to know that it isnt required for the rest of everything to work
[22:15:36] *** Quits: GucciBandana (~GucciBand@78-57-205-76.static.zebra.lt) (Ping timeout: 265 seconds)
[22:16:10] <Owner> sveinse: what about if you dont activate
[22:16:16] <Owner> and you do a pip install
[22:16:21] <sveinse> Use case: I have a module on pypi, which I install in a venv in my ~bin/venv.dirscan/ . I then make a symlink from /usr/local/bin/dirscan to ~bin/venv.dirscan/bin/dirscan, and voila, the python script is run with venv all initialized correctly
[22:16:23] <Owner> unless you do ./bin/pip
[22:16:23] <Yhg1s> Owner: you run venv/bin/pip install.
[22:16:25] *** Joins: rpkilby (~rpkilby@cpe-76-182-45-76.nc.res.rr.com)
[22:16:25] <Owner> it wouldt do it wrong
[22:16:52] *** Joins: kurkale6ka (~kurkale6k@84.45.99.125)
[22:17:05] *** Quits: ironfroggy (~ironfrogg@python/site-packages/ironfroggy) (Ping timeout: 248 seconds)
[22:17:17] <Owner> i accidentily installed some stuff to my system and upgraded pip without activating
[22:17:23] <Owner> (i do everything as root)
[22:17:50] <sveinse> o_O well... don't do that
[22:17:58] *** Joins: inerthia (~inerthia@unaffiliated/inerthia)
[22:18:09] <Owner> sveinse: so far no problems, though, should be okay
[22:18:33] *** Quits: shakotan (~shakotn@193.64.190.190) (Ping timeout: 256 seconds)
[22:18:51] *** Joins: jungleF3ver (~LennyKrav@ool-4a584771.dyn.optonline.net)
[22:18:59] *** Joins: jjulian (~jjulian@i5DB50875.pool.tripleplugandplay.com)
[22:19:05] *** Quits: hemstock (hemstock@80.244.31.40) (Read error: Connection reset by peer)
[22:19:14] <sveinse> Owner: No, but you're mixing your system/distro python version with the one pip fetches from pypi. That /can/ give problems. Better to keep them separate
[22:19:36] <Jonatan> CtrlC: not enough information. can't talk about how to implement something without figuring out or deciding what something is
[22:19:45] *** Quits: sdfgsd (~root@213.74.82.169) (Ping timeout: 248 seconds)
[22:19:45] <Owner> sveinse: yea best to activate or make sure you run the right pip!
[22:20:02] <CtrlC> Jonatan, what do you need to know? just ask.
[22:20:03] <sveinse> Owner: yes, either or
[22:20:20] *** Joins: sdfgsd (~root@213.74.82.169)
[22:20:48] *** Quits: jungleF3ver (~LennyKrav@ool-4a584771.dyn.optonline.net) (Client Quit)
[22:21:11] *** Quits: Signaltonsalat (~dickbutt@p5DC7F87D.dip0.t-ipconnect.de) (Quit: https://i.imgur.com/galeFqa.png)
[22:21:22] *** Quits: rpkilby (~rpkilby@cpe-76-182-45-76.nc.res.rr.com) (Ping timeout: 264 seconds)
[22:21:37] *** Joins: keviv (~keviv@72.187.217.15)
[22:21:53] <jwhisnant> Owner: also, best not to develop as root
[22:22:02] *** Joins: codesoup (~codesoup@174.119.180.211)
[22:22:12] <Jonatan> What is the original phrasing? Yes, in non-english. And what is tested for, what is being taught in what I presume to be some form of course?
[22:22:17] <Owner> jwhisnant: its good practice :)
[22:22:25] *** Quits: inerthia (~inerthia@unaffiliated/inerthia) (Ping timeout: 248 seconds)
[22:22:29] <Owner> jwhisnant: that way i have to make sure i do everything right
[22:23:02] *** Quits: bpremo (~bpremo@2620:10d:c090:180::1:2189) (Ping timeout: 260 seconds)
[22:23:13] *** Quits: seajay (~seajay@gw.1m-01.mel.nexcess.net) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[22:23:25] <Jonatan> CtrlC: perhaps there is someone responsible that can be asked for clarification. perhaps there is a suggested solution
[22:23:32] *** Quits: vikikas (~vikas@2a02:1205:c6ad:ea0:6830:eac4:94c8:4ef1) (Read error: Connection reset by peer)
[22:23:53] *** Joins: m1n (~m1n@unaffiliated/m1ntfr3sh)
[22:24:45] <crichoux> hi so im trying to pipe output between processes using subprocessing right now
[22:24:51] <sveinse> Owner: this is the first time I've heard it's good pratice to develop as root....
[22:25:04] *** Quits: rsrx (~rsrx@95.87.244.158) (Read error: Connection reset by peer)
[22:25:13] <Owner> sveinse: yes, i learn best from making mistakes
[22:25:16] <Owner> i dont really make mistakes anymore
[22:25:29] <Owner> you learn pretty fast when you do everything as root
[22:25:45] <Owner> i did make a pip mistake, but see, it taught me
[22:25:54] <Owner> and the systems are disposable
[22:25:57] *** Quits: jarthur (~jarthur@207.114.244.5) (Ping timeout: 240 seconds)
[22:26:02] <Jonatan> It might also simply do the wrong thing without telling you it's wrong
[22:26:08] <crichoux> the first program, i need to write a string to stdin, and then (as long as there's no error, as in, the exit code is zero and there's nothing on stderr), the output of that gets piped to the second command on stdin. then i want to collect the output into a string, unless there's an error ofc then i want to raise an exception
[22:26:56] *** Joins: inerthia (~inerthia@unaffiliated/inerthia)
[22:27:50] *** Joins: sunil_bansal (~sunil_ban@49.205.216.234)
[22:27:55] <crichoux> here's the code, i want it to print the second output unless there's an error in either of the commands but it doesn't seem to be raising the exceptions when i expect them: https://hastebin.com/kozudoqafo.py
[22:27:56] <infobob> https://paste.pound-python.org/show/jIKLgxLi86z5FVzTb2dP/ (repasted for crichoux)
[22:27:58] *** Quits: cwrbs (~jy@213.152.162.114) (Ping timeout: 264 seconds)
[22:29:54] *** Joins: techalchemy (~Hawkerz@unaffiliated/hawkerz)
[22:30:00] <sveinse> Owner: well if you have to spare time to fix your mistakes, be my guest. I consider this in the same line as not using a setbelt in my car to make me a better driver. :D
[22:30:33] <sveinse> *seatbelt
[22:30:40] <crichoux> 'you learn pretty fast when you do everything as root' i screamed
[22:31:01] <Owner> you can make bigger mistakes when you make a habit of typing sudo before everything
[22:31:09] *** Joins: Mrloafbot_ (mrloafbot@gateway/vpn/privateinternetaccess/mrloafbot/x-21948472)
[22:31:10] <Owner> thats my opinion
[22:31:21] <crichoux> its always good to make bigger mistakes when youre learning, you got it
[22:31:29] *** Quits: inerthia (~inerthia@unaffiliated/inerthia) (Ping timeout: 255 seconds)
[22:31:43] <crichoux> lmao
[22:32:09] *** Joins: urodna_ (~urodna@unaffiliated/urodna)
[22:32:10] *** Quits: urodna_ (~urodna@unaffiliated/urodna) (Max SendQ exceeded)
[22:32:18] *** Joins: Neros (~Neros@31-32-241-72.abo.bbox.fr)
[22:32:46] *** Quits: sunil_bansal (~sunil_ban@49.205.216.234) (Ping timeout: 264 seconds)
[22:32:51] *** Quits: kingarmadillo (~kingarmad@70-139-18-232.lightspeed.hstntx.sbcglobal.net) (Ping timeout: 255 seconds)
[22:33:00] *** Joins: urodna_ (~urodna@unaffiliated/urodna)
[22:33:09] *** Quits: ShapeShifter499 (~ShapeShif@unaffiliated/shapeshifter499) (Read error: Connection reset by peer)
[22:33:22] *** Quits: anqxyr (~anqxyr@nat4-minsk-pool-46-53-177-92.telecom.by) (Remote host closed the connection)
[22:33:45] *** Quits: justanotheruser (~justanoth@unaffiliated/justanotheruser) (Quit: WeeChat 2.0)
[22:34:07] *** Joins: justanotheruser (~justanoth@unaffiliated/justanotheruser)
[22:34:29] *** Joins: randomA (~t@unaffiliated/randoma)
[22:34:51] *** Quits: urodna (~urodna@unaffiliated/urodna) (Ping timeout: 240 seconds)
[22:35:35] *** Quits: nobodi (~nobodi@modemcable142.127-177-173.mc.videotron.ca) (Ping timeout: 260 seconds)
[22:36:10] *** Joins: cruelnoise (~cruelnois@glphon2233w-lp140-05-70-30-22-247.dsl.bell.ca)
[22:37:14] *** Quits: Timvde (~Timvde@gondor.wina.be) (Quit: ZNC - http://znc.in)
[22:37:23] *** Quits: enriq (~pitagoras@190-186-16-190.fibertel.com.ar) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[22:37:33] *** Joins: inerthia (~inerthia@unaffiliated/inerthia)
[22:38:10] *** Joins: overyander (~jeffspeff@209.141.208.197)
[22:38:35] *** Quits: beardedeagle (~beardedea@64.202.161.57) (Quit: WeeChat 2.2-dev)
[22:39:12] *** Quits: homerj (~homerj@april-fools/2013/second/homerj) (Remote host closed the connection)
[22:39:17] *** Joins: chachan (~chachan@168.232.28.50)
[22:39:48] *** Joins: sartan_ (~sartan@unaffiliated/sartan)
[22:42:05] *** Quits: inerthia (~inerthia@unaffiliated/inerthia) (Ping timeout: 240 seconds)
[22:42:06] *** Quits: crichoux (~crichoux@tjctf/organizer/laudiacay) (Ping timeout: 256 seconds)
[22:42:35] *** Joins: Technodrome (~textual@unaffiliated/technodrome)
[22:43:41] *** Joins: inerthia (~inerthia@unaffiliated/inerthia)
[22:44:17] *** Quits: aielima (~aielima@gateway/tor-sasl/aielima) (Quit: Leaving)
[22:44:18] *** Parts: m3ddl3r (~Thunderbi@192.30.201.10) ()
[22:44:37] *** Quits: hotpot33 (~hotpot33@unaffiliated/hotpot33) (Read error: Connection reset by peer)
[22:45:54] *** Joins: bpremo (~bpremo@2600:380:9853:32b6:8c4c:fd8b:e80a:fbdf)
[22:46:53] *** Quits: Deep6_ (~Deep6@S0106b4750e5f223e.pk.shawcable.net) (Quit: Lost terminal)
[22:47:21] *** Quits: xcm (~xcm@ipa210.225.tellas.gr) (Ping timeout: 240 seconds)
[22:47:32] *** Joins: Hashirama (~Adium@unaffiliated/s0bait)
[22:47:37] *** Quits: claudiop (~claudio@2001:8a0:70e1:7c01:d635:e938:8a25:bbed) (Read error: Connection reset by peer)
[22:47:46] *** Quits: spithash (~spithash@unaffiliated/spithash) (Ping timeout: 256 seconds)
[22:47:57] *** Quits: kurkale6ka (~kurkale6k@84.45.99.125) (Ping timeout: 240 seconds)
[22:47:59] *** Joins: bpremo_ (~bpremo@2620:10d:c090:180::1:8fed)
[22:48:10] *** Quits: bpremo_ (~bpremo@2620:10d:c090:180::1:8fed) (Max SendQ exceeded)
[22:48:22] *** Quits: inerthia (~inerthia@unaffiliated/inerthia) (Ping timeout: 264 seconds)
[22:48:28] <Hashirama> Hey — What is the difference between `future.utils.raise_from` and `future.utils.raise_with_traceback`
[22:48:33] *** Quits: mefistof1les (~mefistofe@unaffiliated/mefistofeles) (Ping timeout: 248 seconds)
[22:48:40] *** Joins: bpremo_ (~bpremo@2620:10d:c090:180::1:8fed)
[22:48:53] <_habnabit> Hashirama, what do the docs say?
[22:49:46] <Hashirama> it seems that the former is used if you want to change the type of exception and the latter is to preserve the traceback which ususally gets trimmed.
[22:49:58] <Hashirama> However, I am thrown off by the examples here: http://python-future.org/compatible_idioms.html?highlight=raise_from#raising-exceptions
[22:50:15] *** Quits: bpremo (~bpremo@2600:380:9853:32b6:8c4c:fd8b:e80a:fbdf) (Ping timeout: 245 seconds)
[22:50:21] *** Quits: overyander (~jeffspeff@209.141.208.197) (Ping timeout: 240 seconds)
[22:50:38] <Hashirama> Previously, I noticed that when you re-raise exception, you lose part of the traceback and I used to use `traceback = sys.exc_info()[2]` previously. Not sure which of the two is applicable given those docs.
[22:50:39] *** Joins: melissa666 (~melissa66@2601:603:4e00:69a0:8114:d75:8e1c:a6e3)
[22:50:57] *** Joins: wgas (~wgas@unaffiliated/wgas)
[22:51:06] *** Joins: spithash (~spithash@unaffiliated/spithash)
[22:51:09] *** Joins: xcm (~xcm@ipa210.225.tellas.gr)
[22:51:22] *** Quits: LaunchDirector (~pi@unaffiliated/launch-director/x-8216596) (Ping timeout: 264 seconds)
[22:51:25] <Hashirama> What I think I want is a combination of the two — I want to re-raise with a different type but also preserve the stack trace. Questioning how do I do that using `future.utils` if possible at all?
[22:52:11] *** Quits: Hashirama (~Adium@unaffiliated/s0bait) (Client Quit)
[22:52:12] *** Quits: Haudegen (~quassel@178.115.237.87) (Read error: Connection reset by peer)
[22:52:15] *** Joins: Ridout (coffee@gateway/vpn/privateinternetaccess/b)
[22:52:19] *** Joins: unreal (~unreal@unaffiliated/unreal)
[22:52:39] *** Joins: ShapeShifter499 (~ShapeShif@unaffiliated/shapeshifter499)
[22:52:44] *** Joins: LaunchDirector (~pi@unaffiliated/launch-director/x-8216596)
[22:53:05] *** Quits: walnut_burl (~oak@104.129.28.162) (Ping timeout: 240 seconds)
[22:53:23] *** Joins: mefistof1les (~mefistofe@unaffiliated/mefistofeles)
[22:53:40] *** Quits: lainon (~lainon@24-159-4-77.dhcp.smrt.tn.charter.com) (Ping timeout: 260 seconds)
[22:53:56] *** Joins: inerthia (~inerthia@unaffiliated/inerthia)
[22:54:13] *** Quits: bpremo_ (~bpremo@2620:10d:c090:180::1:8fed) (Remote host closed the connection)
[22:54:34] *** Joins: bpremo_ (~bpremo@2620:10d:c090:180::1:8fed)
[22:54:49] *** Quits: manuelschneid3r (~manuelsch@p57A39159.dip0.t-ipconnect.de) (Ping timeout: 256 seconds)
[22:55:15] *** Quits: DLSteve (~DLSteve@2601:601:1301:40a8:f876:294f:a0b:9b36) (Quit: All rise, the honorable DLSteve has left the channel.)
[22:55:42] *** Joins: DLSteve (~DLSteve@2601:601:1301:40a8:f876:294f:a0b:9b36)
[22:56:06] *** Joins: ace510 (~chatzilla@mobile-166-176-186-88.mycingular.net)
[22:58:09] *** Quits: LaunchDirector (~pi@unaffiliated/launch-director/x-8216596) (Ping timeout: 268 seconds)
[22:58:27] *** Quits: inerthia (~inerthia@unaffiliated/inerthia) (Ping timeout: 240 seconds)
[22:58:39] *** Joins: nightw0lf (~nightw0lf@toroon6128w-lp130-04-69-158-180-35.dsl.bell.ca)
[22:58:55] *** Joins: LaunchDirector (~pi@unaffiliated/launch-director/x-8216596)
[22:59:46] *** Joins: edne (~edne@net-2-42-74-190.cust.vodafonedsl.it)
[22:59:49] *** Quits: sdfgsd (~root@213.74.82.169) (Remote host closed the connection)
[22:59:57] *** Joins: Hashirama (~Adium@unaffiliated/s0bait)
[23:00:12] <lermain> hi. say I have a lots of nodes, and I want to all the possible paths between any given two nodes, which I do it with DFS. For example, when I try to find the possible paths between A and D, I get (for some arbitrary tree), [A, B, D], [A, B, C, E, D], [A, B, E, D]
[23:00:27] *** Quits: halprin (~halprin@c-174-52-113-17.hsd1.ut.comcast.net) (Quit: My computer has gone to sleep.)
[23:00:50] *** Quits: randomA (~t@unaffiliated/randoma) (Ping timeout: 260 seconds)
[23:01:00] <lermain> is it possible to stop the iteration, and yield only the results that cover all paths already? i.e, if my tree only consists of A, B, C, D, E, then the 3rd result is unecessary, because all nodes are already covered with the first two
[23:01:07] *** Quits: IanLiu (~IanLiu@189-69-38-63.dsl.telesp.net.br) (Quit: IanLiu)
[23:01:17] *** Quits: fuzzyinterval (~fish@2600:8800:3700:f690:f46d:4e3d:acc4:b5f) (Quit: Konversation terminated!)
[23:01:18] <lermain> I'm looking for an efficient way to do that, because the original dictionary is very big
[23:01:18] <Jonatan> In a tree there would only be one path unless you backtrack
[23:01:26] *** Quits: Hashirama (~Adium@unaffiliated/s0bait) (Client Quit)
[23:01:27] <SnoopJeDi> lermain, are you working with a graph network?
[23:01:28] *** Quits: courrier (~yoan@119.135.185.81.rev.sfr.net) (Ping timeout: 240 seconds)
[23:01:53] <lermain> SnoopJeDi: yeah, like A:{ B, C}, B:{C, D} etc.
[23:02:14] <lermain> but not implemented in NetworkX
[23:02:26] <KirkMcDonald> This is a digraph?
[23:02:26] <SnoopJeDi> Any reason why?
[23:02:34] *** Joins: puff (~user@pool-72-77-34-186.pitbpa.fios.verizon.net)
[23:02:36] <lermain> Jonatan: there's lots of possible paths to go from A to D, not only one
[23:03:09] <royal_screwup21> I'm trying to wrap my head around this oop issue: https://thepasteb.in/p/66hVgBX9jzgiW I've added my question as a comment as it makes more sense with the context - I'd love a pointer or two in the right direction
[23:03:10] *** Joins: Hashirama (~Adium@unaffiliated/s0bait)
[23:03:17] <lermain> KirkMcDonald: nope, A -> B =/= B -> A (which doesn't exist anyway)
[23:03:34] <KirkMcDonald> lermain: So, a digraph.
[23:03:35] *** Joins: inerthia (~inerthia@unaffiliated/inerthia)
[23:03:56] <lermain> oh yea, directed graph*, sorry.
[23:03:58] *** Quits: mefistof1les (~mefistofe@unaffiliated/mefistofeles) (Ping timeout: 264 seconds)
[23:04:00] <bjs> royal_screwup21: when you do `C()` it calls the __init__
[23:04:14] <lermain> SnoopJeDi: I tried, but failed, so I just went with numpy
[23:04:21] *** Quits: Hashirama (~Adium@unaffiliated/s0bait) (Client Quit)
[23:04:22] <royal_screwup21> bjs: aha,I had always supected an implicit __init__
[23:04:24] <bjs> royal_screwup21: so in your code: when you do Stuff() it tries to call Stuff.__init__, you don't define one so it looks for one in the parent class
[23:04:37] <KirkMcDonald> lermain: The question suggests that you're not interested in the paths so much as the nodes.
[23:04:39] *** Quits: sartan (~sartan@unaffiliated/sartan) (Ping timeout: 256 seconds)
[23:04:40] <lermain> but it generates lots of paths, it is not possible to generate all of them, so I'm looking for a way to reduce the search space
[23:04:51] <royal_screwup21> bjs: oh I see now
[23:04:56] <puff> Is NLTK a popular library?  I'm looking at getting the ngrams from some documents and NLTK came up, but there appear to be a number of ngram libraries.
[23:05:05] *** Quits: andeh_ (~andeh@146.115.76.19) (Ping timeout: 240 seconds)
[23:05:09] <bjs> royal_screwup21: this is how all lookups work
[23:05:20] <bjs> royal_screwup21: https://paste.pound-python.org/show/rIk1bZBqzi4ojp1RBU6T/
[23:05:20] *** Joins: AnySomebody (~AnySomebo@p2003005F2803E982A097A2FFFE5553BE.dip0.t-ipconnect.de)
[23:05:33] <puff> I guess, while I'm at it, this is in pursuit of figuring out the Statistically Improbable Phrases for some documents.
[23:05:34] *** Joins: sdfgsd (~root@213.74.82.169)
[23:05:39] <lermain> KirkMcDonald: as in, I'm only interested in the paths as long as they don't for example exceed the length limit, but I'm interested in them, I'll use them for my program, not the nodes
[23:05:50] <lermain> I will use the resulting list of paths as a matrice
[23:06:47] *** Quits: nightw0lf (~nightw0lf@toroon6128w-lp130-04-69-158-180-35.dsl.bell.ca) (Ping timeout: 268 seconds)
[23:06:58] <SnoopJeDi> puff, nltk is well-loved, yep. You could do ngrams pretty straightforwardly with set(), but anything more complex than that probably goes through nltk.
[23:07:29] *** Joins: unpythonic (~unpythoni@c-98-207-240-139.hsd1.ca.comcast.net)
[23:07:35] *** Quits: finkata (~finkata@gateway/tor-sasl/finkata) (Remote host closed the connection)
[23:07:48] *** Quits: kingrodian (~kingrodia@75.231.164.82.customer.cdi.no) (Ping timeout: 265 seconds)
[23:08:04] *** Joins: finkata (~finkata@gateway/tor-sasl/finkata)
[23:08:25] *** Quits: inerthia (~inerthia@unaffiliated/inerthia) (Ping timeout: 256 seconds)
[23:08:27] <puff> SnoopJeDi: cool, thanks.
[23:08:39] *** Joins: ellcs (~ellcs@200116b8688c320062f677fffebe55f5.dip.versatel-1u1.de)
[23:08:51] <KirkMcDonald> lermain: It seems to me that the problem disappears when you define it recursively.
[23:08:55] *** Joins: bpremo__ (~bpremo@c-71-196-223-147.hsd1.co.comcast.net)
[23:08:59] *** Joins: seajay (~seajay@99-118-83-52.lightspeed.livnmi.sbcglobal.net)
[23:08:59] *** Quits: spiette (~spiette@216.98.60.148) (Ping timeout: 276 seconds)
[23:09:07] *** Joins: isomer_ (~isomer@unaffiliated/isomer)
[23:09:44] <energizer> puff: collections.Counter is good for quick ngramming too
[23:09:46] *** Joins: sysfault (~exalted@pool-108-53-210-20.nwrknj.fios.verizon.net)
[23:09:51] *** Quits: qlixed (~qlixed@190.221.31.178) (Quit: Leaving)
[23:10:02] *** Joins: [itchyjunk] (~itchyjunk@unaffiliated/itchyjunk/x-1640057)
[23:10:08] <lermain> KirkMcDonald: hmm, how so? it gives me *all* possible paths, but I'm only interested in the first "x" where all nodes are covered
[23:10:18] *** Quits: [itchyjunk] (~itchyjunk@unaffiliated/itchyjunk/x-1640057) (Max SendQ exceeded)
[23:10:34] *** Quits: lacrymology (~lacrymolo@201-212-30-114.cab.prima.net.ar) (Ping timeout: 256 seconds)
[23:10:40] *** Quits: isomer (~isomer@unaffiliated/isomer) (Ping timeout: 245 seconds)
[23:10:53] <SnoopJeDi> yea Counter is a good choice if you want the frequencies, which your second task seems to imply
[23:11:17] <KirkMcDonald> lermain: Hmm. If that's all you need, you could just keep a set of all the nodes seen so far, and bail when that set equals the whole set of nodes.
[23:11:41] *** Quits: bpremo_ (~bpremo@2620:10d:c090:180::1:8fed) (Ping timeout: 276 seconds)
[23:12:01] *** Quits: edne (~edne@net-2-42-74-190.cust.vodafonedsl.it) (Ping timeout: 248 seconds)
[23:12:16] *** Joins: AvianFlu (~avianflu@freedom.sexy)
[23:12:23] *** Quits: seni (~Nimitz14@cpc91218-cmbg18-2-0-cust107.5-4.cable.virginm.net) (Quit: Leaving)
[23:12:28] *** Joins: [itchyjunk] (~itchyjunk@unaffiliated/itchyjunk/x-1640057)
[23:12:49] <lermain> KirkMcDonald: would something like this work? finding the length of unique elements of all paths, and when it's is equal to the length of my dictionary keys/values, I stop the iteration?
[23:12:54] *** Joins: bpremo_ (~bpremo@2620:10d:c090:180::1:aa1b)
[23:13:05] *** Quits: ph88 (~ph88@94-21-96-118.pool.digikabel.hu) (Ping timeout: 248 seconds)
[23:13:12] <lermain> but that would I guess require zip*, and then np.unique I think
[23:13:40] <energizer> is there a slick way to get each successive k-tuple in an iterable -> (a,b,c) (b,c,d), (c,d,e), ...?
[23:13:50] <energizer> re puff's question
[23:14:19] *** Joins: shakotan (~shakotn@193.64.190.190)
[23:14:28] *** Joins: kingarmadillo (~kingarmad@70-139-18-232.lightspeed.hstntx.sbcglobal.net)
[23:14:33] <energizer> let's say iterator actually
[23:14:45] <Jonatan> itertools.combinations?
[23:14:48] <KirkMcDonald> lermain: You could keep a set of the elements seen in paths, and see whether the length of that set equals the total number of nodes.
[23:15:20] <lermain> KirkMcDonald: right, thanks for the idea!
[23:15:25] <energizer> Jonatan: not quite, i think
[23:15:27] *** Quits: bpremo__ (~bpremo@c-71-196-223-147.hsd1.co.comcast.net) (Ping timeout: 240 seconds)
[23:16:08] *** Quits: Mattiaslndstrm (~Mattiasln@2806:103e:9:2c2b:2dab:c2b2:e1b7:b3b7) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[23:16:17] *** Quits: Owner (~Owner@unaffiliated/owner) (Ping timeout: 248 seconds)
[23:16:18] <CtrlC> is there any way to pause a python subprocess to resume later on? or a thread if it matters?
[23:16:49] *** Quits: LaunchDirector (~pi@unaffiliated/launch-director/x-8216596) (Ping timeout: 248 seconds)
[23:17:12] <Jonatan> uh. permutations! :< *hides*
[23:17:13] *** Joins: rpkilby (~rpkilby@cpe-76-182-45-76.nc.res.rr.com)
[23:18:06] <CtrlC> I mean from the main thread/process. not from inside.
[23:18:34] <CtrlC> having it from inside too, will help though.
[23:18:41] *** Joins: LaunchDirector (~pi@unaffiliated/launch-director/x-8216596)
[23:18:56] *** Joins: inerthia (~inerthia@unaffiliated/inerthia)
[23:20:04] *** Quits: nighty- (~nighty@s229123.ppp.asahi-net.or.jp) (Quit: Disappears in a puff of smoke)
[23:20:15] <ace510> so i'm working with range, is there an easy way to pass range parameters as a variable?
[23:20:32] <CtrlC> ace510, just do it.
[23:20:40] *** Quits: opsec (~opsec@opsec/opsec) (Ping timeout: 245 seconds)
[23:20:47] *** Quits: Deep6 (~Deep6@S0106b4750e5f223e.pk.shawcable.net) (Remote host closed the connection)
[23:20:50] *** Quits: seajay (~seajay@99-118-83-52.lightspeed.livnmi.sbcglobal.net) (Quit: My MacBook Air has gone to sleep. ZZZzzz…)
[23:21:02] *** Joins: Venomen (~venomen@unaffiliated/venomen)
[23:21:13] *** Joins: opsec (~opsec@opsec/opsec)
[23:21:14] <ace510> awesome, now I get 'TypeError: 'tuple' object cannot be interpreted as an integer'
[23:21:20] <Jonatan> ace510: can't pass variables, only their references
[23:21:25] <Jonatan> you can unpack the tuple
[23:21:28] <Jonatan> range(*args)
[23:21:37] *** Quits: rpkilby (~rpkilby@cpe-76-182-45-76.nc.res.rr.com) (Ping timeout: 248 seconds)
[23:21:38] <ace510> awesome, thank you
[23:21:54] *** Quits: bpremo_ (~bpremo@2620:10d:c090:180::1:aa1b) (Remote host closed the connection)
[23:22:07] *** Quits: _2cat (~MegaNRGMa@D965BE0F.cm-27.dynamic.ziggo.nl) ()
[23:22:12] *** Quits: tjf (~tjf@unaffiliated/tjf) (Quit: leaving)
[23:22:19] *** Joins: bpremo_ (~bpremo@2620:10d:c090:180::1:aa1b)
[23:22:45] *** Joins: nightw0lf (~nightw0lf@toroon6128w-lp130-04-69-158-180-35.dsl.bell.ca)
[23:22:54] *** Joins: Owner (~Owner@unaffiliated/owner)
[23:23:05] *** Quits: unpythonic (~unpythoni@c-98-207-240-139.hsd1.ca.comcast.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[23:23:13] *** Quits: inerthia (~inerthia@unaffiliated/inerthia) (Ping timeout: 248 seconds)
[23:23:43] *** Quits: LaunchDirector (~pi@unaffiliated/launch-director/x-8216596) (Ping timeout: 256 seconds)
[23:23:48] *** Joins: inerthia (~inerthia@unaffiliated/inerthia)
[23:24:19] *** Joins: overyander (~jeffspeff@209.141.208.197)
[23:24:43] *** Joins: LaunchDirector (~pi@unaffiliated/launch-director/x-8216596)
[23:25:03] *** Quits: Richard_Cavell (~Richard_C@unaffiliated/richard-cavell/x-0571696) (Ping timeout: 256 seconds)
[23:25:11] *** Quits: InPhase (~InPhase@unaffiliated/inphase) (Read error: Connection reset by peer)
[23:25:21] *** Quits: dxiri (~dxiri@23.79.232.14) (Remote host closed the connection)
[23:25:40] *** Quits: Venomen (~venomen@unaffiliated/venomen) (Ping timeout: 245 seconds)
[23:26:08] *** Joins: doubtful (~abhigenie@dyn-160-39-2-139.dyn.columbia.edu)
[23:27:07] *** Quits: DTZUZO (~DTZUZO@S0106bcd16584b0aa.vs.shawcable.net) (Ping timeout: 256 seconds)
[23:27:13] *** Joins: Sheilong (uid293653@gateway/web/irccloud.com/x-ghesxbbjstblvbik)
[23:27:27] *** Joins: lainon (~lainon@24-159-4-77.dhcp.smrt.tn.charter.com)
[23:27:31] *** Joins: ID (~icedream@unaffiliated/icedream2k9)
[23:27:45] *** Quits: ace510 (~chatzilla@mobile-166-176-186-88.mycingular.net) (Ping timeout: 268 seconds)
[23:27:59] <doubtful> doubtful about collection.deque
[23:28:01] *** Quits: javi404 (~quassel@unaffiliated/javi404) (Remote host closed the connection)
[23:28:13] <doubtful> How can you have arbitrary length queues with constant time append and popleft? Not sure how collections.deque is implemented.
[23:28:22] *** Quits: Icedream (~icedream@unaffiliated/icedream2k9) (Ping timeout: 268 seconds)
[23:28:23] *** ID is now known as Icedream
[23:28:32] <Jonatan> linked list would be one way to do it
[23:28:43] <doubtful> Jonatan, no
[23:28:49] *** Quits: inerthia (~inerthia@unaffiliated/inerthia) (Ping timeout: 256 seconds)
[23:29:10] *** Quits: shakotan (~shakotn@193.64.190.190) (Ping timeout: 264 seconds)
[23:29:23] *** Joins: tonymke (~tonymke@2605:a000:be8f:1900::8)
[23:29:27] <doubtful> Jonatan, you mean having a pointer to the start and end of the list?
[23:29:40] *** Joins: Darkhunter (~mmojzis@static-84-42-152-237.net.upcbroadband.cz)
[23:29:41] <Jonatan> I do mean that. with links in both directions
[23:30:08] *** Quits: alxy (uid115853@gateway/web/irccloud.com/x-ztviqgrqwowywehe) (Quit: Connection closed for inactivity)
[23:30:09] <doubtful> err....should have thought of that.
[23:30:13] <Jonatan> and it wouldn't be a list in the sense of an array
[23:30:19] *** Joins: enriq (~pitagoras@190-186-16-190.fibertel.com.ar)
[23:30:31] *** Joins: javi404 (~quassel@unaffiliated/javi404)
[23:30:56] <doubtful> My book says: “If the array is dynamically resized, the total time for m combined enqueue and dequeue operations is O(m).” Confused about “combined” is referring to.(edited)
[23:31:09] *** Joins: nobodi (~nobodi@modemcable142.127-177-173.mc.videotron.ca)
[23:31:50] *** Quits: maslen2 (uid202698@gateway/web/irccloud.com/x-howsnyxcpwvnwjtv) (Quit: Connection closed for inactivity)
[23:31:53] *** Joins: chachan_ (~chachan@ec2-35-164-24-42.us-west-2.compute.amazonaws.com)
[23:31:58] *** Quits: ellcs (~ellcs@200116b8688c320062f677fffebe55f5.dip.versatel-1u1.de) (Ping timeout: 265 seconds)
[23:32:14] <Jonatan> total count?
[23:32:24] <bjs> doubtful: as in, "enqueue(x); dequeue(); enqueue(y)" is 3 combined operations
[23:32:56] <bjs> doubtful: if for m combined operations it takes O(m) time in total, then we say it has O(1) "amortized" time
[23:33:08] <doubtful> oh so each is constant time and m*O(1) = O(m)
[23:33:30] <bjs> doubtful: the point is that actually that they're not all actually constant time
[23:33:34] *** Quits: Odyseus (~Odyseus@138.117.129.193) (Quit: I'm leaving)
[23:33:41] *** Joins: find0x90 (~find0x90@cpe-174-96-176-23.columbus.res.rr.com)
[23:33:46] *** Joins: ace510 (~chatzilla@mobile-166-176-186-88.mycingular.net)
[23:33:55] *** Joins: Anja (~Anja@122-57-179-221-fibre.bb.spark.co.nz)
[23:33:55] <SnoopJeDi> That's slightly confusing terminology
[23:34:01] <Jonatan> probably easier to think separately about enqueue and dequeue
[23:34:10] <doubtful> I don't think I understand.
[23:34:16] *** Quits: enterprisey (~enterpris@wikipedia/enterprisey) (Remote host closed the connection)
[23:34:17] <bjs> doubtful: each enqueue/dequeue is often referred to as O(1) time right?
[23:34:26] <doubtful> bjs, sure.
[23:34:29] *** Joins: inerthia (~inerthia@unaffiliated/inerthia)
[23:34:49] <Jonatan> If it both shrinks and grows though, couldn't it end up as more than O(m) time?
[23:34:51] <bjs> doubtful: but the truth is, that can't be right, because sometimes you run out of memory and have to go copy/move the array to a new place with more space
[23:35:06] <bjs> doubtful: so really they must have _worst case_ O(n) time, right?
[23:35:15] *** Quits: haso2 (~Thunderbi@162.79-160-5.customer.lyse.net) (Ping timeout: 245 seconds)
[23:35:16] *** Joins: homerj (~homerj@april-fools/2013/second/homerj)
[23:35:32] <SnoopJeDi> where n is the size of the array?
[23:35:36] <bjs> Yes
[23:35:36] *** Joins: crichoux (~crichoux@tjctf/organizer/laudiacay)
[23:35:42] *** Joins: Odyseus (~Odyseus@138.117.129.193)
[23:35:50] *** Quits: chachan (~chachan@168.232.28.50) (Ping timeout: 265 seconds)
[23:35:57] *** Quits: javi404 (~quassel@unaffiliated/javi404) (Ping timeout: 240 seconds)
[23:36:15] <doubtful> bjs, true, so what is the worst time taken then? O(mn)?
[23:36:21] *** Quits: al-damiri (uid142631@gateway/web/irccloud.com/x-wldjxluoxvtitkwx) (Quit: Connection closed for inactivity)
[23:36:26] *** Quits: xcm (~xcm@ipa210.225.tellas.gr) (Remote host closed the connection)
[23:36:58] <Jonatan> A single operation could take the time it takes to copy the whole array
[23:37:00] *** Joins: xcm (~xcm@ipa210.225.tellas.gr)
[23:37:09] <bjs> doubtful: right... but then you look back and realise that actually, only one of the operations will take that long, the rest really are constant
[23:37:28] <bjs> doubtful: so enq(1); deq(); enq(2); enq(3)  might actually be O(1) + O(1) + O(1) + O(n)
[23:37:40] <bjs> doubtful: which overall (on "average") is still just O(n)
[23:38:50] <SnoopJeDi> does that assume some overallocation or...? It's not clear to me why it should be only one operation in general.
[23:38:57] *** Quits: inerthia (~inerthia@unaffiliated/inerthia) (Ping timeout: 240 seconds)
[23:38:58] *** Quits: sysfault (~exalted@pool-108-53-210-20.nwrknj.fios.verizon.net) (Quit: Leaving)
[23:39:13] *** Joins: sysfault (~exalted@pool-108-53-210-20.nwrknj.fios.verizon.net)
[23:39:27] *** Joins: timtek (~tek@unaffiliated/timtek)
[23:39:29] <Jonatan> There's a finite amount of space, each time exhausted it has to be resized which takes time for that operation
[23:40:18] <bjs> SnoopJeDi: yes but that's fine so long as we create more space each time we resize
[23:40:28] *** Quits: bolovanos_ (~bolovanos@91.201.22.5) (Ping timeout: 256 seconds)
[23:40:40] <Jonatan> Which happens each time it runs out of space (not just once)
[23:41:02] <sla3k> Guys is there a way to write this in comprehension http://ix.io/1fcX
[23:41:07] *** Quits: jcarl43 (~jcarl@vpn-ca01.nbsig.com) (Quit: WeeChat 2.1)
[23:41:19] <SnoopJeDi> Jonatan, that's why I asked about overallocation, which is certainly common enough to avoid the *worst* case.
[23:41:22] *** Quits: sysfault (~exalted@pool-108-53-210-20.nwrknj.fios.verizon.net) (Client Quit)
[23:41:33] *** Joins: tjf (~tjf@unaffiliated/tjf)
[23:41:45] *** Joins: sysfault (~exalted@pool-108-53-210-20.nwrknj.fios.verizon.net)
[23:42:05] <bjs> SnoopJeDi: you need to look at runs of operations and ask what's the worst that can happen
[23:42:09] <Jonatan> resize intentionally overallocates to prepare for future appends
[23:42:27] <bjs> SnoopJeDi: I think most analysis just assumes that resizing never fails though  (you don't _actually run out of space_)
[23:42:37] *** Quits: drexl (~drexl@cpc130676-camd16-2-0-cust445.know.cable.virginm.net) (Remote host closed the connection)
[23:42:38] *** Quits: cfoch (uid153227@gateway/web/irccloud.com/x-sddnkmbxrdpjmagn) (Quit: Connection closed for inactivity)
[23:42:56] <bjs> SnoopJeDi: so when you resize you say, double, the number of slots so you can do another n operations without the O(n) one again and do the analysis formally
[23:42:57] <SnoopJeDi> That seems sensible, since it's so context dependent
[23:43:01] <sla3k> Oh I missed, X being 5
[23:43:07] *** Joins: ph88 (~ph88@94-21-96-118.pool.digikabel.hu)
[23:43:37] *** Quits: rholloway (~rholloway@69-221-252-33.lightspeed.tukrga.sbcglobal.net) (Quit: My MacBook has gone to sleep. ZZZzzz…)
[23:43:44] <energizer> there's gotta be a simple way to write this, right? https://ptpb.pw/l4aD/python
[23:43:56] *** Joins: inerthia (~inerthia@unaffiliated/inerthia)
[23:44:25] *** Quits: RangerBob (~brian@pool-98-118-245-158.clppva.fios.verizon.net) (Quit: Leaving)
[23:44:32] <SnoopJeDi> sla3k, is there some reason you wouldn't directly compare X to the range?
[23:44:33] *** Quits: xcm (~xcm@ipa210.225.tellas.gr) (Killed (verne.freenode.net (Nickname regained by services)))
[23:44:43] *** Joins: xcm (~xcm@ipa210.225.tellas.gr)
[23:45:30] <energizer> this is better, but still https://ptpb.pw/d2YK/python
[23:45:35] <doubtful> I don't know what amortized means, maybe that is because I don't understand. I will have to study that. It doesn't make sense to me to assume resize never fails.
[23:46:27] *** Joins: javi404 (~quassel@unaffiliated/javi404)
[23:46:34] <sla3k> SnoopJeDi: not sure, but this code snippet was last in the exercise and I was trying to take it a bit further with list comprehensions..still not sure if it can be done or not
[23:47:21] <bjs> energizer: for lists I'd do something like zip(xs[0:], xs[1:], xs[2:], ...)
[23:47:23] *** Joins: Mattiaslndstrm (~Mattiasln@2806:103e:9:2c2b:a018:70d3:dbc2:831e)
[23:47:46] <SnoopJeDi> That snippet looks like it's de facto checking if X is an integer between 0 and 6 inclusive, which is...not a task for a comprehension, heh.
[23:47:54] *** Joins: mefistof1les (~mefistofe@unaffiliated/mefistofeles)
[23:48:07] *** Joins: jjulian_ (~jjulian@i5DB52B4D.pool.tripleplugandplay.com)
[23:48:27] *** Quits: inerthia (~inerthia@unaffiliated/inerthia) (Ping timeout: 240 seconds)
[23:48:30] <bjs> energizer: so you'd probably do the same for iterators, tee of n copies and then zip(*[islice(tees[i], i, None)])  # maybe ?
[23:48:49] <bjs> oops [... for i in range(n)] that is
[23:49:16] <Jonatan> doubtful: what would make the resize fail aside from not having enough physical memory to store your data? at that point the time it takes is infinite, can't do it at all
[23:49:42] *** Joins: InPhase (~InPhase@unaffiliated/inphase)
[23:50:02] <bjs> doubtful: I mean, that *is* the definition of amortised. If each operation is worst-case O(n) then you'd think m repeated applications are O(n*m), but if you can prove that actually m repeated applications are only O(m) then we say it's "amortized" O(1)
[23:50:10] <sla3k> hmm, I'll add a note to revisit this part when I am, well..later. Time to read on
[23:50:12] <bjs> because it "averaged out" over time
[23:50:37] <doubtful> bjs, Ok, so I think I get it. So it is amortized O(m)  or m*O(1), where m is number of all operations.
[23:50:42] *** Quits: jjulian (~jjulian@i5DB50875.pool.tripleplugandplay.com) (Ping timeout: 255 seconds)
[23:50:46] *** Quits: puff (~user@pool-72-77-34-186.pitbpa.fios.verizon.net) (Ping timeout: 264 seconds)
[23:51:00] <bjs> doubtful: if m operations takes O(m) times, then each operation took O(1) time (logically, right?)
[23:51:29] <doubtful> yeah
[23:51:56] *** Joins: redrum88 (~Helder@177.180.184.84)
[23:52:02] <bjs> doubtful: that's how amortized analysis works. appending to a list is worst-case O(n) as it might have to go copy the list someplace new with more memory, but you can prove that m appends is O(m) time
[23:52:12] <bjs> so you can pretend that append is O(1) since it will "average out"
[23:52:40] <bjs> we call that the "amortized" time complexity... it's the time complexity you get when you take into account the operation being "averaged out" over time
[23:53:31] *** Joins: white_lilies (~jtdoncas@toroon0247w-lp130-01-74-12-139-138.dsl.bell.ca)
[23:54:49] <bjs> doubtful: but make sure you don't mistake "amortized" analysis for "average" time. dict.get for example have O(n) worst-case, O(n) amortized worst case but O(1) average
[23:55:09] *** Joins: Inside (~Gary@unaffiliated/inside)
[23:55:15] *** Joins: feodoran_ (~quassel@i577B0555.versanet.de)
[23:55:16] *** feodoran is now known as Guest30454
[23:55:24] *** Joins: Vision (Vision@24-217-191-16.dhcp.stls.mo.charter.com)
[23:55:29] *** feodoran_ is now known as feodoran
[23:55:35] *** Joins: ycon_ (~ycon_@202-172-111-51-cpe.spintel.net.au)
[23:55:50] *** Joins: dxiri (~dxiri@23.79.232.14)
[23:56:21] *** Joins: snatcher (~user@gateway/tor-sasl/snatcher)
[23:56:35] *** Joins: l0ndoner (~l0ndoner@79-68-41-121.dynamic.dsl.as9105.com)
[23:56:54] <energizer> bjs: yeah, the zip(*) is a good idea https://ptpb.pw/FWAo/python
[23:57:16] *** Joins: sunil_bansal (~sunil_ban@49.205.216.234)
[23:57:39] *** Quits: Inside (~Gary@unaffiliated/inside) (Disconnected by services)
[23:57:55] <SnoopJeDi> And worth pointing out that all this memory reallocation business is relevant to a specific subset of deque implementations. collections.deque apparently stores things in fixed-length blocks of pointers, doubly-linked to neighboring blocks.
[23:58:17] *** Quits: Guest30454 (~quassel@i577B8702.versanet.de) (Ping timeout: 256 seconds)
[23:58:49] <SnoopJeDi> (_colletionsmodule.c is pretty well commented!)
[23:58:53] <l0ndoner> I'm on Linux and when running a script which incidently runs fine but I have an error --->> RequestsDependencyWarning: Old version of cryptography ([1, 2, 3]) may cause slowdown.
[23:59:11] <energizer> bjs: more_itertools.stagger(it, range(3))
[23:59:30] <Jonatan> doesn't look like an error l0ndoner. looks like a warningn (doesn't prevent execution)
[23:59:44] <l0ndoner> nope executes perfect
[23:59:51] *** Joins: inerthia (~inerthia@unaffiliated/inerthia)
[23:59:58] *** Joins: licnep (uid4387@gateway/web/irccloud.com/x-yzgokkubylleckux)
